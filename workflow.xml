<workflow-app xmlns="uri:oozie:workflow:0.4" name="prod_w_auxiliary_device_details">
	<global>
		<job-tracker>${jobTracker}</job-tracker>
		<name-node>${nameNode}</name-node>
		<configuration>
			<property>
				<name>mapred.job.queue.name</name>
				<value>${queueName}</value>
			</property>
		</configuration>
	</global>
    
	<start to="ProcessTerminationTableLevel"/>

   <!-- Terminate the process on table level-->
   <action name="ProcessTerminationTableLevel">
    <shell xmlns="uri:oozie:shell-action:0.2">
      <job-tracker>${jobTracker}</job-tracker>
      <name-node>${nameNode}</name-node>
      <configuration>
        <property>
          <name>mapred.job.queue.name</name>   
          <value>${queueName}</value>
        </property>
      </configuration>
      <exec>${rootPath_common}/processcheck.sh</exec>
      <argument>${TerminateProperty_device_details}</argument>
      <file>${rootPath_common}/processcheck.sh</file>
      <capture-output/>
    </shell>
    <ok to="check-Termination"/>
    <error to="failure_email"/>
  </action>
  
    <decision name="check-Termination">
        <switch>
            <case to="termination_email">
                ${wf:actionData('ProcessTerminationTableLevel')['ProcessFlag'] eq 'True'}
			</case>
			<default to="Generate_Staging_Files"/>
         </switch>
    </decision>
	
  <action name="SourceToSAExecCheck">
        <java>
            <job-tracker>${jobTracker}</job-tracker>
            <name-node>${nameNode}</name-node>
            <configuration>
               <property>
                    <name>mapred.job.queue.name</name>
                    <value>${queueName}</value>
                </property>
            </configuration>
            <main-class>tableau.Generic</main-class>
	    <arg>${GenericExecTableName}</arg>
		<arg>${GenericExecRequestBy}</arg>
		<arg>${GenericExecSAExecCheck}</arg>
		<arg>${GenericExecColumnName}</arg>
		<arg>${GenericExecRecordID}</arg>
		<arg>${GenericExecPropFile}</arg>
		<arg>${GenericExecTablRptName}</arg>
		<arg>${GenericExecCMObjName_DevDet}</arg>
	    <capture-output/>
        </java>
        <ok to="check-SourceToSAExecCheck" />
        <error to = "failure_email" />
    </action>

    <decision name="check-SourceToSAExecCheck">
        <switch>
            <case to="Generate_Staging_Files">
                ${wf:actionData('SourceToSAExecCheck')['PASS_INDICATOR'] eq '0'}
	    </case>
	    <default to="failure_email"/>
         </switch>
    </decision>
	
	<action name="Generate_Staging_Files">
       	<hive2 xmlns="uri:oozie:hive2-action:0.1">
   			<jdbc-url>${jdbcURL}</jdbc-url>
			<script>${cm_generate_staging_hql_full_path}</script>
   			<param>cm_db_name=${cm_stg_onl_auxiliary_db}</param>
   			<param>cm_unpivoted_table_name=${cm_unpivoted_table_name}</param>
   			<param>sa_db_name=${sa_auxiliary_db}</param>
   			<param>sa_source_table_name=${sa_source_table_name}</param>
			<param>staging_file_dir_for_column_selection_cmd=${staging_file_dir_for_column_selection_cmd}</param>
			<param>staging_file_dir_for_create_cmd=${staging_file_dir_for_create_cmd}</param>
			<param>staging_file_dir_for_insert_cmd=${staging_file_dir_for_insert_cmd}</param>
			<argument>-wpassfile</argument>
			<file>${Keystore_Loc}#passfile</file>
		</hive2>
       	<ok to="CM_Generate_HQL_Scripts"/>
	    <error to="failure_email"/>
	</action>
   
    
	<action name="CM_Generate_HQL_Scripts">
   		<shell xmlns="uri:oozie:shell-action:0.3">
			<exec>${generate_hql_scripts_file_name}</exec>
			<argument>${cm_stg_onl_auxiliary_db}</argument>
			<argument>${im_auxiliary_db}</argument>
			<argument>${cm_unpivoted_table_name}</argument>
			<argument>${cm_pivoted_table_name}</argument>
			<argument>${cm_final_table_name}</argument>
			<argument>${im_final_table_name}</argument>
			<argument>${hql_directory}</argument>
			<argument>${staging_file_dir_for_column_selection_cmd}</argument>
			<argument>${staging_file_dir_for_create_cmd}</argument>
			<argument>${staging_file_dir_for_insert_cmd}</argument>
			<argument>${cm_populate_pivot_table_hql_file_name}</argument>
			<argument>${cm_populate_final_table_hql_file_name}</argument>
			<argument>${im_populate_final_table_hql_file_name}</argument>
			<argument>${cm_final_table_maprfs}</argument>
			<argument>${im_final_table_maprfs}</argument>
			<argument>${device_details_log_directory}</argument>
			<argument>${cm_auxiliary_db}</argument>
			<file>${generate_hql_scripts_full_path}</file>
    	</shell>
        <ok to="CM_Populate_Pivot_Table"/>
        <error to="failure_email"/>
    </action>
       
    
	<action name="CM_Populate_Pivot_Table">
		<hive2 xmlns="uri:oozie:hive2-action:0.1">
			<jdbc-url>${jdbcURL}</jdbc-url>
			<script>${cm_populate_pivot_table_hql_full_path}</script>
			<argument>-wpassfile</argument>
			<file>${Keystore_Loc}#passfile</file>
		</hive2>
		<ok to="CM_Populate_Final_Table"/>
		<error to="failure_email"/>
    </action>

	
	<action name="CM_Populate_Final_Table">
		<hive2 xmlns="uri:oozie:hive2-action:0.1">
			<jdbc-url>${jdbcURL}</jdbc-url>
			<script>${cm_populate_final_table_hql_full_path}</script>
			<argument>-wpassfile</argument>
			<file>${Keystore_Loc}#passfile</file>
		</hive2>
		<ok to="IM_Populate_Final_Table"/>
		<error to="failure_email"/>
	</action>

	
	<action name="IM_Populate_Final_Table">
		<hive2 xmlns="uri:oozie:hive2-action:0.1">
			<jdbc-url>${jdbcURL}</jdbc-url>
			<script>${im_populate_final_table_hql_full_path}</script>
			<argument>-wpassfile</argument>
			<file>${Keystore_Loc}#passfile</file>
		</hive2>
		<ok to="success_email"/>
		<error to="failure_email"/>
	</action>

    <action name="success_email">
 		<email xmlns="uri:oozie:email-action:0.1">
 			<to>${to_email}</to>
				<subject>SUCCESS:${table_device_details}:${wf:id()}</subject>
				<body>${table_device_details} Work Flow Process Completed!!</body>
 		</email>
 		<ok to="genericLogging_success"/>
 		<error to="genericLogging_success"/>
    </action>
	
<!-- To log the information in case of success -->		
<action name="genericLogging_success">
    <shell xmlns="uri:oozie:shell-action:0.2">
      <job-tracker>${jobTracker}</job-tracker>
      <name-node>${nameNode}</name-node>
      <configuration>
        <property>
          <name>mapred.job.queue.name</name>
          <value>${queueName}</value>
        </property>
      </configuration>
      <exec>${rootPath_common}/logging.sh</exec>
      <argument>${team}</argument>
      <argument>${processName}</argument>
      <argument>${env}</argument>
      <argument>${subjectArea_auxiliary}</argument>
      <argument>${table_device_details}</argument>
      <argument>${ReleaseName_Expos}</argument>
      <argument>na</argument>
      <argument>success</argument>
      <argument>${bigDataLog}</argument>
      <argument>${centralLog}</argument>
      <file>${rootPath_common}/logging.sh</file>
      <capture-output/>
    </shell>
    <ok to="end"/>
    <error to="failure_email"/>
  </action>

	
	<action name="failure_email">
		<email xmlns="uri:oozie:email-action:0.1">
			<to>${to_email}</to>
				<subject>FAILED:${table_device_details}:${wf:id()}</subject>
				<body>${table_device_details} Work Flow Process Interrupted or Failed!!</body>
		</email>
		<ok to="genericLogging_fail"/>
		<error to="genericLogging_fail"/>
	</action>

 
<!-- To log the information in case of failure -->		
<action name="genericLogging_fail">
    <shell xmlns="uri:oozie:shell-action:0.2">
      <job-tracker>${jobTracker}</job-tracker>
      <name-node>${nameNode}</name-node>
      <configuration>
        <property>
          <name>mapred.job.queue.name</name>
          <value>${queueName}</value>
        </property>
      </configuration>
      <exec>${rootPath_common}/logging.sh</exec>
      <argument>${team}</argument>
      <argument>${processName}</argument>
      <argument>${env}</argument>
      <argument>${subjectArea_auxiliary}</argument>
      <argument>${table_device_details}</argument>
      <argument>${ReleaseName_Expos}</argument>
      <argument>na</argument>
      <argument>fail</argument>
      <argument>${bigDataLog}</argument>
      <argument>${centralLog}</argument>
      <file>${rootPath_common}/logging.sh</file>
      <capture-output/>
    </shell>
    <ok to="end"/>
    <error to="end"/>
  </action>


	<action name="termination_email">
		<email xmlns="uri:oozie:email-action:0.1">
			<to>${to_email}</to>
				<subject>TERMINATED:${table_device_details}:${wf:id()}</subject>
				<body>${table_device_details} Work Flow Process terminated!!</body>
		</email>
		<ok to="genericLogging_fail"/>
		<error to="genericLogging_fail"/>
	</action>


		 <kill name="parent_fail">
		<message>
			 ${wf:name()} Work Flow Process Failed.
			 Work Flow Id:${wf:id()}
	  		 Work Flow Name:${wf:name()}
	 		 Error Node:${wf:lastErrorNode()}
			 Error Message:${wf:errorMessage(wf:lastErrorNode())}
		</message>      
	    </kill>
           
    <end name="end"/>
	
</workflow-app>
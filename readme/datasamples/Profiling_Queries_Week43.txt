Preselection file:
====================
select count(*) from uat_sa_calc_engine_exchange.oflnsel_hdl_preselectionfile;

select cust_id,count(*) from uat_sa_calc_engine_exchange.oflnsel_hdl_preselectionfile group by cust_id having count(*) > 1;

--select * from uat_sa_calc_engine_exchange.oflnsel_hdl_preselectionfile where cust_id = 2674754847 ;

select b.effort_id,count(distinct a.cust_id) 
from uat_sa_calc_engine_exchange.oflnsel_hdl_preselectionfile a 
inner join uat_sa_calc_engine_exchange.oflnsel_hdl_campaignfile b 
on a.cust_id = b.cust_id
group by b.effort_id order by b.effort_id;

SELECT SUM(CASE WHEN mod321_ind = '1' THEN 1 ELSE 0 END ) AS mod321_ind_COUNT, SUM(CASE WHEN modb_ind = '1' THEN 1 ELSE 0 END ) AS modb_ind_COUNT, SUM(CASE WHEN modsro_ind = '1' THEN 1 ELSE 0 END ) AS modsro_ind_COUNT,
COUNT(*) AS total_count, COUNT(*) - COUNT(DISTINCT cust_id) AS Duplicate_CustIds
from uat_sa_calc_engine_exchange.oflnsel_hdl_preselectionfile ;

select * from uat_sa_calc_engine_exchange.oflnsel_hdl_preselectionfile limit 10 ;

!ls -l /mapr/JMAPRCLUP01.CLASSIC.PCHAD.COM/sa/calcengine/campaign/uat/hot/ceframework/oflnsel/20190501/import/oflnsel_hdl_preselectionfile/datafiles ;

describe uat_sa_calc_engine_exchange.oflnsel_hdl_preselectionfile; ;


SELECT COUNT(*) AS TABLE_COUNT,
case when COUNT(*) ==  SUM(CASE WHEN week IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS week_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN cust_part_seq_no IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS cust_part_seq_no_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN cust_id IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS cust_id_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN selection_date IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS selection_date_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN selection_dt IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS selection_dt_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN run_ts IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS run_ts_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN orig_source IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS orig_source_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN modsro_ind IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS modsro_ind_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN mod321_ind IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS mod321_ind_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN modb_ind IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS modb_ind_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN bmodel_flag IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS bmodel_flag_AllNULL_Ind
FROM uat_sa_calc_engine_exchange.oflnsel_hdl_preselectionfile ;


SELECT COUNT(*) AS TABLE_COUNT,
CASE WHEN MIN(week)  == MAX( week) THEN MAX(week) WHEN (MIN(week) IS NULL OR MIN(week) == '' OR MIN(week) LIKE ' %' OR MIN(week) == 0) AND (MAX(week) IS NULL OR MAX(week) == '' OR MAX(week) LIKE ' %' OR MAX(week) == 0) THEN MAX(week)  ELSE 'GOOD' END as week_min_max_compare,
CASE WHEN MIN(cust_part_seq_no)  == MAX( cust_part_seq_no) THEN MAX(cust_part_seq_no) WHEN (MIN(cust_part_seq_no) IS NULL OR MIN(cust_part_seq_no) == '' OR MIN(cust_part_seq_no) LIKE ' %' OR MIN(cust_part_seq_no) == 0) AND (MAX(cust_part_seq_no) IS NULL OR MAX(cust_part_seq_no) == '' OR MAX(cust_part_seq_no) LIKE ' %' OR MAX(cust_part_seq_no) == 0) THEN MAX(cust_part_seq_no)  ELSE 'GOOD' END as cust_part_seq_no_min_max_compare,
CASE WHEN MIN(cust_id)  == MAX( cust_id) THEN MAX(cust_id) WHEN (MIN(cust_id) IS NULL OR MIN(cust_id) == '' OR MIN(cust_id) LIKE ' %' OR MIN(cust_id) == 0) AND (MAX(cust_id) IS NULL OR MAX(cust_id) == '' OR MAX(cust_id) LIKE ' %' OR MAX(cust_id) == 0) THEN MAX(cust_id)  ELSE 'GOOD' END as cust_id_min_max_compare,
CASE WHEN MIN(selection_date)  == MAX( selection_date) THEN MAX(selection_date) WHEN (MIN(selection_date) IS NULL OR MIN(selection_date) == '' OR MIN(selection_date) LIKE ' %' OR MIN(selection_date) == 0) AND (MAX(selection_date) IS NULL OR MAX(selection_date) == '' OR MAX(selection_date) LIKE ' %' OR MAX(selection_date) == 0) THEN MAX(selection_date)  ELSE 'GOOD' END as selection_date_min_max_compare,
CASE WHEN MIN(selection_dt)  == MAX( selection_dt) THEN MAX(selection_dt) WHEN (MIN(selection_dt) IS NULL OR MIN(selection_dt) == '' OR MIN(selection_dt) LIKE ' %' OR MIN(selection_dt) == 0) AND (MAX(selection_dt) IS NULL OR MAX(selection_dt) == '' OR MAX(selection_dt) LIKE ' %' OR MAX(selection_dt) == 0) THEN MAX(selection_dt)  ELSE 'GOOD' END as selection_dt_min_max_compare,
CASE WHEN MIN(run_ts)  == MAX( run_ts) THEN MAX(run_ts) WHEN (MIN(run_ts) IS NULL OR MIN(run_ts) == '' OR MIN(run_ts) LIKE ' %' OR MIN(run_ts) == 0) AND (MAX(run_ts) IS NULL OR MAX(run_ts) == '' OR MAX(run_ts) LIKE ' %' OR MAX(run_ts) == 0) THEN MAX(run_ts)  ELSE 'GOOD' END as run_ts_min_max_compare,
CASE WHEN MIN(orig_source)  == MAX( orig_source) THEN MAX(orig_source) WHEN (MIN(orig_source) IS NULL OR MIN(orig_source) == '' OR MIN(orig_source) LIKE ' %' OR MIN(orig_source) == 0) AND (MAX(orig_source) IS NULL OR MAX(orig_source) == '' OR MAX(orig_source) LIKE ' %' OR MAX(orig_source) == 0) THEN MAX(orig_source)  ELSE 'GOOD' END as orig_source_min_max_compare,
CASE WHEN MIN(modsro_ind)  == MAX( modsro_ind) THEN MAX(modsro_ind) WHEN (MIN(modsro_ind) IS NULL OR MIN(modsro_ind) == '' OR MIN(modsro_ind) LIKE ' %' OR MIN(modsro_ind) == 0) AND (MAX(modsro_ind) IS NULL OR MAX(modsro_ind) == '' OR MAX(modsro_ind) LIKE ' %' OR MAX(modsro_ind) == 0) THEN MAX(modsro_ind)  ELSE 'GOOD' END as modsro_ind_min_max_compare,
CASE WHEN MIN(mod321_ind)  == MAX( mod321_ind) THEN MAX(mod321_ind) WHEN (MIN(mod321_ind) IS NULL OR MIN(mod321_ind) == '' OR MIN(mod321_ind) LIKE ' %' OR MIN(mod321_ind) == 0) AND (MAX(mod321_ind) IS NULL OR MAX(mod321_ind) == '' OR MAX(mod321_ind) LIKE ' %' OR MAX(mod321_ind) == 0) THEN MAX(mod321_ind)  ELSE 'GOOD' END as mod321_ind_min_max_compare,
CASE WHEN MIN(modb_ind)  == MAX( modb_ind) THEN MAX(modb_ind) WHEN (MIN(modb_ind) IS NULL OR MIN(modb_ind) == '' OR MIN(modb_ind) LIKE ' %' OR MIN(modb_ind) == 0) AND (MAX(modb_ind) IS NULL OR MAX(modb_ind) == '' OR MAX(modb_ind) LIKE ' %' OR MAX(modb_ind) == 0) THEN MAX(modb_ind)  ELSE 'GOOD' END as modb_ind_min_max_compare,
CASE WHEN MIN(bmodel_flag)  == MAX( bmodel_flag) THEN MAX(bmodel_flag) WHEN (MIN(bmodel_flag) IS NULL OR MIN(bmodel_flag) == '' OR MIN(bmodel_flag) LIKE ' %' OR MIN(bmodel_flag) == 0) AND (MAX(bmodel_flag) IS NULL OR MAX(bmodel_flag) == '' OR MAX(bmodel_flag) LIKE ' %' OR MAX(bmodel_flag) == 0) THEN MAX(bmodel_flag)  ELSE 'GOOD' END as bmodel_flag_min_max_compare
FROM uat_sa_calc_engine_exchange.oflnsel_hdl_preselectionfile ;


Campaign file:
===============
select count(*) from uat_sa_calc_engine_exchange.oflnsel_hdl_campaignfile ;

SELECT COUNT(*) AS TABLE_COUNT,
case when COUNT(*) ==  SUM(CASE WHEN cust_id IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS cust_id_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN cust_part_seq_no IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS cust_part_seq_no_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN extract_run_ts IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS extract_run_ts_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN campaign_cd IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS campaign_cd_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN flowchart_id IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS flowchart_id_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN flowchart_run_id IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS flowchart_run_id_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN selection_year IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS selection_year_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN selection_week IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS selection_week_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN delivery_paradigm_year IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS delivery_paradigm_year_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN delivery_paradigm_week IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS delivery_paradigm_week_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN variable_derived_dt IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS variable_derived_dt_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN selection_dt IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS selection_dt_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN line_of_business IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS line_of_business_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN effort_id IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS effort_id_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN effort_type_cd IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS effort_type_cd_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN geo_loc IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS geo_loc_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN zipcode IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS zipcode_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN cust_st_prov_cd IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS cust_st_prov_cd_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN cust_st_prov_abr IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS cust_st_prov_abr_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN stream_cd IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS stream_cd_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN distant_ind IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS distant_ind_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN mc_last_init_exist IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS mc_last_init_exist_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN mc_first_init_exist IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS mc_first_init_exist_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN dash_cust_ind IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS dash_cust_ind_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN initial_selection_segment IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS initial_selection_segment_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN initial_mailing_key IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS initial_mailing_key_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN initial_score_no IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS initial_score_no_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN initial_model_name IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS initial_model_name_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN initial_expected_value_amt IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS initial_expected_value_amt_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN random_sample_ind IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS random_sample_ind_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN force_inclusion_ind IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS force_inclusion_ind_AllNULL_Ind
FROM uat_sa_calc_engine_exchange.oflnsel_hdl_campaignfile ;


select effort_id,count(distinct cust_id) as distinct_custids, 
count(*) as custids_count,count(*) - count(distinct cust_id) as  Duplicate_CustIds
from uat_sa_calc_engine_exchange.oflnsel_hdl_campaignfile
group by effort_id order by effort_id
;


select effort_id,cust_id from uat_sa_calc_engine_exchange.oflnsel_hdl_campaignfile 
group by effort_id,cust_id having count(*) > 1
order by effort_id,cust_id
;

select * from uat_sa_calc_engine_exchange.oflnsel_hdl_campaignfile limit 10 ;

!ls -l /mapr/JMAPRCLUP01.CLASSIC.PCHAD.COM/sa/calcengine/campaign/uat/hot/ceframework/oflnsel/20190501/import/oflnsel_hdl_campaignfile/datafiles ;

describe uat_sa_calc_engine_exchange.oflnsel_hdl_campaignfile ;

SELECT COUNT(*) AS TABLE_COUNT,
CASE WHEN MIN(cust_id)  == MAX( cust_id) THEN MAX(cust_id) WHEN (MIN(cust_id) IS NULL OR MIN(cust_id) == '' OR MIN(cust_id) LIKE ' %' OR MIN(cust_id) == 0) AND (MAX(cust_id) IS NULL OR MAX(cust_id) == '' OR MAX(cust_id) LIKE ' %' OR MAX(cust_id) == 0) THEN MAX(cust_id)  ELSE 'GOOD' END as cust_id_min_max_compare,
CASE WHEN MIN(cust_part_seq_no)  == MAX( cust_part_seq_no) THEN MAX(cust_part_seq_no) WHEN (MIN(cust_part_seq_no) IS NULL OR MIN(cust_part_seq_no) == '' OR MIN(cust_part_seq_no) LIKE ' %' OR MIN(cust_part_seq_no) == 0) AND (MAX(cust_part_seq_no) IS NULL OR MAX(cust_part_seq_no) == '' OR MAX(cust_part_seq_no) LIKE ' %' OR MAX(cust_part_seq_no) == 0) THEN MAX(cust_part_seq_no)  ELSE 'GOOD' END as cust_part_seq_no_min_max_compare,
CASE WHEN MIN(extract_run_ts)  == MAX( extract_run_ts) THEN MAX(extract_run_ts) WHEN (MIN(extract_run_ts) IS NULL OR MIN(extract_run_ts) == '' OR MIN(extract_run_ts) LIKE ' %' OR MIN(extract_run_ts) == 0) AND (MAX(extract_run_ts) IS NULL OR MAX(extract_run_ts) == '' OR MAX(extract_run_ts) LIKE ' %' OR MAX(extract_run_ts) == 0) THEN MAX(extract_run_ts)  ELSE 'GOOD' END as extract_run_ts_min_max_compare,
CASE WHEN MIN(campaign_cd)  == MAX( campaign_cd) THEN MAX(campaign_cd) WHEN (MIN(campaign_cd) IS NULL OR MIN(campaign_cd) == '' OR MIN(campaign_cd) LIKE ' %' OR MIN(campaign_cd) == 0) AND (MAX(campaign_cd) IS NULL OR MAX(campaign_cd) == '' OR MAX(campaign_cd) LIKE ' %' OR MAX(campaign_cd) == 0) THEN MAX(campaign_cd)  ELSE 'GOOD' END as campaign_cd_min_max_compare,
CASE WHEN MIN(flowchart_id)  == MAX( flowchart_id) THEN MAX(flowchart_id) WHEN (MIN(flowchart_id) IS NULL OR MIN(flowchart_id) == '' OR MIN(flowchart_id) LIKE ' %' OR MIN(flowchart_id) == 0) AND (MAX(flowchart_id) IS NULL OR MAX(flowchart_id) == '' OR MAX(flowchart_id) LIKE ' %' OR MAX(flowchart_id) == 0) THEN MAX(flowchart_id)  ELSE 'GOOD' END as flowchart_id_min_max_compare,
CASE WHEN MIN(flowchart_run_id)  == MAX( flowchart_run_id) THEN MAX(flowchart_run_id) WHEN (MIN(flowchart_run_id) IS NULL OR MIN(flowchart_run_id) == '' OR MIN(flowchart_run_id) LIKE ' %' OR MIN(flowchart_run_id) == 0) AND (MAX(flowchart_run_id) IS NULL OR MAX(flowchart_run_id) == '' OR MAX(flowchart_run_id) LIKE ' %' OR MAX(flowchart_run_id) == 0) THEN MAX(flowchart_run_id)  ELSE 'GOOD' END as flowchart_run_id_min_max_compare,
CASE WHEN MIN(selection_year)  == MAX( selection_year) THEN MAX(selection_year) WHEN (MIN(selection_year) IS NULL OR MIN(selection_year) == '' OR MIN(selection_year) LIKE ' %' OR MIN(selection_year) == 0) AND (MAX(selection_year) IS NULL OR MAX(selection_year) == '' OR MAX(selection_year) LIKE ' %' OR MAX(selection_year) == 0) THEN MAX(selection_year)  ELSE 'GOOD' END as selection_year_min_max_compare,
CASE WHEN MIN(selection_week)  == MAX( selection_week) THEN MAX(selection_week) WHEN (MIN(selection_week) IS NULL OR MIN(selection_week) == '' OR MIN(selection_week) LIKE ' %' OR MIN(selection_week) == 0) AND (MAX(selection_week) IS NULL OR MAX(selection_week) == '' OR MAX(selection_week) LIKE ' %' OR MAX(selection_week) == 0) THEN MAX(selection_week)  ELSE 'GOOD' END as selection_week_min_max_compare,
CASE WHEN MIN(delivery_paradigm_year)  == MAX( delivery_paradigm_year) THEN MAX(delivery_paradigm_year) WHEN (MIN(delivery_paradigm_year) IS NULL OR MIN(delivery_paradigm_year) == '' OR MIN(delivery_paradigm_year) LIKE ' %' OR MIN(delivery_paradigm_year) == 0) AND (MAX(delivery_paradigm_year) IS NULL OR MAX(delivery_paradigm_year) == '' OR MAX(delivery_paradigm_year) LIKE ' %' OR MAX(delivery_paradigm_year) == 0) THEN MAX(delivery_paradigm_year)  ELSE 'GOOD' END as delivery_paradigm_year_min_max_compare,
CASE WHEN MIN(delivery_paradigm_week)  == MAX( delivery_paradigm_week) THEN MAX(delivery_paradigm_week) WHEN (MIN(delivery_paradigm_week) IS NULL OR MIN(delivery_paradigm_week) == '' OR MIN(delivery_paradigm_week) LIKE ' %' OR MIN(delivery_paradigm_week) == 0) AND (MAX(delivery_paradigm_week) IS NULL OR MAX(delivery_paradigm_week) == '' OR MAX(delivery_paradigm_week) LIKE ' %' OR MAX(delivery_paradigm_week) == 0) THEN MAX(delivery_paradigm_week)  ELSE 'GOOD' END as delivery_paradigm_week_min_max_compare,
CASE WHEN MIN(variable_derived_dt)  == MAX( variable_derived_dt) THEN MAX(variable_derived_dt) WHEN (MIN(variable_derived_dt) IS NULL OR MIN(variable_derived_dt) == '' OR MIN(variable_derived_dt) LIKE ' %' OR MIN(variable_derived_dt) == 0) AND (MAX(variable_derived_dt) IS NULL OR MAX(variable_derived_dt) == '' OR MAX(variable_derived_dt) LIKE ' %' OR MAX(variable_derived_dt) == 0) THEN MAX(variable_derived_dt)  ELSE 'GOOD' END as variable_derived_dt_min_max_compare,
CASE WHEN MIN(selection_dt)  == MAX( selection_dt) THEN MAX(selection_dt) WHEN (MIN(selection_dt) IS NULL OR MIN(selection_dt) == '' OR MIN(selection_dt) LIKE ' %' OR MIN(selection_dt) == 0) AND (MAX(selection_dt) IS NULL OR MAX(selection_dt) == '' OR MAX(selection_dt) LIKE ' %' OR MAX(selection_dt) == 0) THEN MAX(selection_dt)  ELSE 'GOOD' END as selection_dt_min_max_compare,
CASE WHEN MIN(line_of_business)  == MAX( line_of_business) THEN MAX(line_of_business) WHEN (MIN(line_of_business) IS NULL OR MIN(line_of_business) == '' OR MIN(line_of_business) LIKE ' %' OR MIN(line_of_business) == 0) AND (MAX(line_of_business) IS NULL OR MAX(line_of_business) == '' OR MAX(line_of_business) LIKE ' %' OR MAX(line_of_business) == 0) THEN MAX(line_of_business)  ELSE 'GOOD' END as line_of_business_min_max_compare,
CASE WHEN MIN(effort_id)  == MAX( effort_id) THEN MAX(effort_id) WHEN (MIN(effort_id) IS NULL OR MIN(effort_id) == '' OR MIN(effort_id) LIKE ' %' OR MIN(effort_id) == 0) AND (MAX(effort_id) IS NULL OR MAX(effort_id) == '' OR MAX(effort_id) LIKE ' %' OR MAX(effort_id) == 0) THEN MAX(effort_id)  ELSE 'GOOD' END as effort_id_min_max_compare,
CASE WHEN MIN(effort_type_cd)  == MAX( effort_type_cd) THEN MAX(effort_type_cd) WHEN (MIN(effort_type_cd) IS NULL OR MIN(effort_type_cd) == '' OR MIN(effort_type_cd) LIKE ' %' OR MIN(effort_type_cd) == 0) AND (MAX(effort_type_cd) IS NULL OR MAX(effort_type_cd) == '' OR MAX(effort_type_cd) LIKE ' %' OR MAX(effort_type_cd) == 0) THEN MAX(effort_type_cd)  ELSE 'GOOD' END as effort_type_cd_min_max_compare,
CASE WHEN MIN(geo_loc)  == MAX( geo_loc) THEN MAX(geo_loc) WHEN (MIN(geo_loc) IS NULL OR MIN(geo_loc) == '' OR MIN(geo_loc) LIKE ' %' OR MIN(geo_loc) == 0) AND (MAX(geo_loc) IS NULL OR MAX(geo_loc) == '' OR MAX(geo_loc) LIKE ' %' OR MAX(geo_loc) == 0) THEN MAX(geo_loc)  ELSE 'GOOD' END as geo_loc_min_max_compare,
CASE WHEN MIN(zipcode)  == MAX( zipcode) THEN MAX(zipcode) WHEN (MIN(zipcode) IS NULL OR MIN(zipcode) == '' OR MIN(zipcode) LIKE ' %' OR MIN(zipcode) == 0) AND (MAX(zipcode) IS NULL OR MAX(zipcode) == '' OR MAX(zipcode) LIKE ' %' OR MAX(zipcode) == 0) THEN MAX(zipcode)  ELSE 'GOOD' END as zipcode_min_max_compare,
CASE WHEN MIN(cust_st_prov_cd)  == MAX( cust_st_prov_cd) THEN MAX(cust_st_prov_cd) WHEN (MIN(cust_st_prov_cd) IS NULL OR MIN(cust_st_prov_cd) == '' OR MIN(cust_st_prov_cd) LIKE ' %' OR MIN(cust_st_prov_cd) == 0) AND (MAX(cust_st_prov_cd) IS NULL OR MAX(cust_st_prov_cd) == '' OR MAX(cust_st_prov_cd) LIKE ' %' OR MAX(cust_st_prov_cd) == 0) THEN MAX(cust_st_prov_cd)  ELSE 'GOOD' END as cust_st_prov_cd_min_max_compare,
CASE WHEN MIN(cust_st_prov_abr)  == MAX( cust_st_prov_abr) THEN MAX(cust_st_prov_abr) WHEN (MIN(cust_st_prov_abr) IS NULL OR MIN(cust_st_prov_abr) == '' OR MIN(cust_st_prov_abr) LIKE ' %' OR MIN(cust_st_prov_abr) == 0) AND (MAX(cust_st_prov_abr) IS NULL OR MAX(cust_st_prov_abr) == '' OR MAX(cust_st_prov_abr) LIKE ' %' OR MAX(cust_st_prov_abr) == 0) THEN MAX(cust_st_prov_abr)  ELSE 'GOOD' END as cust_st_prov_abr_min_max_compare,
CASE WHEN MIN(stream_cd)  == MAX( stream_cd) THEN MAX(stream_cd) WHEN (MIN(stream_cd) IS NULL OR MIN(stream_cd) == '' OR MIN(stream_cd) LIKE ' %' OR MIN(stream_cd) == 0) AND (MAX(stream_cd) IS NULL OR MAX(stream_cd) == '' OR MAX(stream_cd) LIKE ' %' OR MAX(stream_cd) == 0) THEN MAX(stream_cd)  ELSE 'GOOD' END as stream_cd_min_max_compare,
CASE WHEN MIN(distant_ind)  == MAX( distant_ind) THEN MAX(distant_ind) WHEN (MIN(distant_ind) IS NULL OR MIN(distant_ind) == '' OR MIN(distant_ind) LIKE ' %' OR MIN(distant_ind) == 0) AND (MAX(distant_ind) IS NULL OR MAX(distant_ind) == '' OR MAX(distant_ind) LIKE ' %' OR MAX(distant_ind) == 0) THEN MAX(distant_ind)  ELSE 'GOOD' END as distant_ind_min_max_compare,
CASE WHEN MIN(mc_last_init_exist)  == MAX( mc_last_init_exist) THEN MAX(mc_last_init_exist) WHEN (MIN(mc_last_init_exist) IS NULL OR MIN(mc_last_init_exist) == '' OR MIN(mc_last_init_exist) LIKE ' %' OR MIN(mc_last_init_exist) == 0) AND (MAX(mc_last_init_exist) IS NULL OR MAX(mc_last_init_exist) == '' OR MAX(mc_last_init_exist) LIKE ' %' OR MAX(mc_last_init_exist) == 0) THEN MAX(mc_last_init_exist)  ELSE 'GOOD' END as mc_last_init_exist_min_max_compare,
CASE WHEN MIN(mc_first_init_exist)  == MAX( mc_first_init_exist) THEN MAX(mc_first_init_exist) WHEN (MIN(mc_first_init_exist) IS NULL OR MIN(mc_first_init_exist) == '' OR MIN(mc_first_init_exist) LIKE ' %' OR MIN(mc_first_init_exist) == 0) AND (MAX(mc_first_init_exist) IS NULL OR MAX(mc_first_init_exist) == '' OR MAX(mc_first_init_exist) LIKE ' %' OR MAX(mc_first_init_exist) == 0) THEN MAX(mc_first_init_exist)  ELSE 'GOOD' END as mc_first_init_exist_min_max_compare,
CASE WHEN MIN(dash_cust_ind)  == MAX( dash_cust_ind) THEN MAX(dash_cust_ind) WHEN (MIN(dash_cust_ind) IS NULL OR MIN(dash_cust_ind) == '' OR MIN(dash_cust_ind) LIKE ' %' OR MIN(dash_cust_ind) == 0) AND (MAX(dash_cust_ind) IS NULL OR MAX(dash_cust_ind) == '' OR MAX(dash_cust_ind) LIKE ' %' OR MAX(dash_cust_ind) == 0) THEN MAX(dash_cust_ind)  ELSE 'GOOD' END as dash_cust_ind_min_max_compare,
CASE WHEN MIN(initial_selection_segment)  == MAX( initial_selection_segment) THEN MAX(initial_selection_segment) WHEN (MIN(initial_selection_segment) IS NULL OR MIN(initial_selection_segment) == '' OR MIN(initial_selection_segment) LIKE ' %' OR MIN(initial_selection_segment) == 0) AND (MAX(initial_selection_segment) IS NULL OR MAX(initial_selection_segment) == '' OR MAX(initial_selection_segment) LIKE ' %' OR MAX(initial_selection_segment) == 0) THEN MAX(initial_selection_segment)  ELSE 'GOOD' END as initial_selection_segment_min_max_compare,
CASE WHEN MIN(initial_mailing_key)  == MAX( initial_mailing_key) THEN MAX(initial_mailing_key) WHEN (MIN(initial_mailing_key) IS NULL OR MIN(initial_mailing_key) == '' OR MIN(initial_mailing_key) LIKE ' %' OR MIN(initial_mailing_key) == 0) AND (MAX(initial_mailing_key) IS NULL OR MAX(initial_mailing_key) == '' OR MAX(initial_mailing_key) LIKE ' %' OR MAX(initial_mailing_key) == 0) THEN MAX(initial_mailing_key)  ELSE 'GOOD' END as initial_mailing_key_min_max_compare,
CASE WHEN MIN(initial_score_no)  == MAX( initial_score_no) THEN MAX(initial_score_no) WHEN (MIN(initial_score_no) IS NULL OR MIN(initial_score_no) == '' OR MIN(initial_score_no) LIKE ' %' OR MIN(initial_score_no) == 0) AND (MAX(initial_score_no) IS NULL OR MAX(initial_score_no) == '' OR MAX(initial_score_no) LIKE ' %' OR MAX(initial_score_no) == 0) THEN MAX(initial_score_no)  ELSE 'GOOD' END as initial_score_no_min_max_compare,
CASE WHEN MIN(initial_model_name)  == MAX( initial_model_name) THEN MAX(initial_model_name) WHEN (MIN(initial_model_name) IS NULL OR MIN(initial_model_name) == '' OR MIN(initial_model_name) LIKE ' %' OR MIN(initial_model_name) == 0) AND (MAX(initial_model_name) IS NULL OR MAX(initial_model_name) == '' OR MAX(initial_model_name) LIKE ' %' OR MAX(initial_model_name) == 0) THEN MAX(initial_model_name)  ELSE 'GOOD' END as initial_model_name_min_max_compare,
CASE WHEN MIN(initial_expected_value_amt)  == MAX( initial_expected_value_amt) THEN MAX(initial_expected_value_amt) WHEN (MIN(initial_expected_value_amt) IS NULL OR MIN(initial_expected_value_amt) == '' OR MIN(initial_expected_value_amt) LIKE ' %' OR MIN(initial_expected_value_amt) == 0) AND (MAX(initial_expected_value_amt) IS NULL OR MAX(initial_expected_value_amt) == '' OR MAX(initial_expected_value_amt) LIKE ' %' OR MAX(initial_expected_value_amt) == 0) THEN MAX(initial_expected_value_amt)  ELSE 'GOOD' END as initial_expected_value_amt_min_max_compare,
CASE WHEN MIN(random_sample_ind)  == MAX( random_sample_ind) THEN MAX(random_sample_ind) WHEN (MIN(random_sample_ind) IS NULL OR MIN(random_sample_ind) == '' OR MIN(random_sample_ind) LIKE ' %' OR MIN(random_sample_ind) == 0) AND (MAX(random_sample_ind) IS NULL OR MAX(random_sample_ind) == '' OR MAX(random_sample_ind) LIKE ' %' OR MAX(random_sample_ind) == 0) THEN MAX(random_sample_ind)  ELSE 'GOOD' END as random_sample_ind_min_max_compare,
CASE WHEN MIN(force_inclusion_ind)  == MAX( force_inclusion_ind) THEN MAX(force_inclusion_ind) WHEN (MIN(force_inclusion_ind) IS NULL OR MIN(force_inclusion_ind) == '' OR MIN(force_inclusion_ind) LIKE ' %' OR MIN(force_inclusion_ind) == 0) AND (MAX(force_inclusion_ind) IS NULL OR MAX(force_inclusion_ind) == '' OR MAX(force_inclusion_ind) LIKE ' %' OR MAX(force_inclusion_ind) == 0) THEN MAX(force_inclusion_ind)  ELSE 'GOOD' END as force_inclusion_ind_min_max_compare
FROM uat_sa_calc_engine_exchange.oflnsel_hdl_campaignfile ;


Campaign Instruction file
==========================

select count(*) from uat_sa_calc_engine_exchange.oflnsel_hdl_campaigninstructionfile ;

select effort_id from uat_sa_calc_engine_exchange.oflnsel_hdl_campaigninstructionfile
group by effort_id
having count(*) > 1
order by effort_id
 ;

select effort_id, plan_volume, mailing_volume 
from uat_sa_calc_engine_exchange.oflnsel_hdl_campaigninstructionfile
order by effort_id ;


!ls -l /mapr/JMAPRCLUP01.CLASSIC.PCHAD.COM/sa/calcengine/campaign/uat/hot/ceframework/oflnsel/20190501/import/oflnsel_hdl_campaigninstructionfile/datafiles ;

describe uat_sa_calc_engine_exchange.oflnsel_hdl_campaigninstructionfile ;

select * from uat_sa_calc_engine_exchange.oflnsel_hdl_campaigninstructionfile limit 10;


SELECT COUNT(*) AS TABLE_COUNT,
case when COUNT(*) ==  SUM(CASE WHEN run_ts IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS run_ts_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN selection_year IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS selection_year_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN selection_week_num IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS selection_week_num_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN delivery_paradigm_year IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS delivery_paradigm_year_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN delivery_week_num IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS delivery_week_num_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN selection_dt IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS selection_dt_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN main_mailing_id IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS main_mailing_id_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN line_of_business IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS line_of_business_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN effort_id IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS effort_id_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN stream_cd IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS stream_cd_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN effort_type_cd IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS effort_type_cd_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN plan_volume IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS plan_volume_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN mailing_volume IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS mailing_volume_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN package_cd IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS package_cd_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN random_sample_ind IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS random_sample_ind_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN conversion_ind IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS conversion_ind_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN retention_ind IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS retention_ind_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN force_inclusion_ind IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS force_inclusion_ind_AllNULL_Ind
FROM uat_sa_calc_engine_exchange.oflnsel_hdl_campaigninstructionfile ;


SELECT COUNT(*) AS TABLE_COUNT,
CASE WHEN MIN(run_ts)  == MAX( run_ts) THEN MAX(run_ts) WHEN (MIN(run_ts) IS NULL OR MIN(run_ts) == '' OR MIN(run_ts) LIKE ' %' OR MIN(run_ts) == 0) AND (MAX(run_ts) IS NULL OR MAX(run_ts) == '' OR MAX(run_ts) LIKE ' %' OR MAX(run_ts) == 0) THEN MAX(run_ts)  ELSE 'GOOD' END as run_ts_min_max_compare,
CASE WHEN MIN(selection_year)  == MAX( selection_year) THEN MAX(selection_year) WHEN (MIN(selection_year) IS NULL OR MIN(selection_year) == '' OR MIN(selection_year) LIKE ' %' OR MIN(selection_year) == 0) AND (MAX(selection_year) IS NULL OR MAX(selection_year) == '' OR MAX(selection_year) LIKE ' %' OR MAX(selection_year) == 0) THEN MAX(selection_year)  ELSE 'GOOD' END as selection_year_min_max_compare,
CASE WHEN MIN(selection_week_num)  == MAX( selection_week_num) THEN MAX(selection_week_num) WHEN (MIN(selection_week_num) IS NULL OR MIN(selection_week_num) == '' OR MIN(selection_week_num) LIKE ' %' OR MIN(selection_week_num) == 0) AND (MAX(selection_week_num) IS NULL OR MAX(selection_week_num) == '' OR MAX(selection_week_num) LIKE ' %' OR MAX(selection_week_num) == 0) THEN MAX(selection_week_num)  ELSE 'GOOD' END as selection_week_num_min_max_compare,
CASE WHEN MIN(delivery_paradigm_year)  == MAX( delivery_paradigm_year) THEN MAX(delivery_paradigm_year) WHEN (MIN(delivery_paradigm_year) IS NULL OR MIN(delivery_paradigm_year) == '' OR MIN(delivery_paradigm_year) LIKE ' %' OR MIN(delivery_paradigm_year) == 0) AND (MAX(delivery_paradigm_year) IS NULL OR MAX(delivery_paradigm_year) == '' OR MAX(delivery_paradigm_year) LIKE ' %' OR MAX(delivery_paradigm_year) == 0) THEN MAX(delivery_paradigm_year)  ELSE 'GOOD' END as delivery_paradigm_year_min_max_compare,
CASE WHEN MIN(delivery_week_num)  == MAX( delivery_week_num) THEN MAX(delivery_week_num) WHEN (MIN(delivery_week_num) IS NULL OR MIN(delivery_week_num) == '' OR MIN(delivery_week_num) LIKE ' %' OR MIN(delivery_week_num) == 0) AND (MAX(delivery_week_num) IS NULL OR MAX(delivery_week_num) == '' OR MAX(delivery_week_num) LIKE ' %' OR MAX(delivery_week_num) == 0) THEN MAX(delivery_week_num)  ELSE 'GOOD' END as delivery_week_num_min_max_compare,
CASE WHEN MIN(selection_dt)  == MAX( selection_dt) THEN MAX(selection_dt) WHEN (MIN(selection_dt) IS NULL OR MIN(selection_dt) == '' OR MIN(selection_dt) LIKE ' %' OR MIN(selection_dt) == 0) AND (MAX(selection_dt) IS NULL OR MAX(selection_dt) == '' OR MAX(selection_dt) LIKE ' %' OR MAX(selection_dt) == 0) THEN MAX(selection_dt)  ELSE 'GOOD' END as selection_dt_min_max_compare,
CASE WHEN MIN(main_mailing_id)  == MAX( main_mailing_id) THEN MAX(main_mailing_id) WHEN (MIN(main_mailing_id) IS NULL OR MIN(main_mailing_id) == '' OR MIN(main_mailing_id) LIKE ' %' OR MIN(main_mailing_id) == 0) AND (MAX(main_mailing_id) IS NULL OR MAX(main_mailing_id) == '' OR MAX(main_mailing_id) LIKE ' %' OR MAX(main_mailing_id) == 0) THEN MAX(main_mailing_id)  ELSE 'GOOD' END as main_mailing_id_min_max_compare,
CASE WHEN MIN(line_of_business)  == MAX( line_of_business) THEN MAX(line_of_business) WHEN (MIN(line_of_business) IS NULL OR MIN(line_of_business) == '' OR MIN(line_of_business) LIKE ' %' OR MIN(line_of_business) == 0) AND (MAX(line_of_business) IS NULL OR MAX(line_of_business) == '' OR MAX(line_of_business) LIKE ' %' OR MAX(line_of_business) == 0) THEN MAX(line_of_business)  ELSE 'GOOD' END as line_of_business_min_max_compare,
CASE WHEN MIN(effort_id)  == MAX( effort_id) THEN MAX(effort_id) WHEN (MIN(effort_id) IS NULL OR MIN(effort_id) == '' OR MIN(effort_id) LIKE ' %' OR MIN(effort_id) == 0) AND (MAX(effort_id) IS NULL OR MAX(effort_id) == '' OR MAX(effort_id) LIKE ' %' OR MAX(effort_id) == 0) THEN MAX(effort_id)  ELSE 'GOOD' END as effort_id_min_max_compare,
CASE WHEN MIN(stream_cd)  == MAX( stream_cd) THEN MAX(stream_cd) WHEN (MIN(stream_cd) IS NULL OR MIN(stream_cd) == '' OR MIN(stream_cd) LIKE ' %' OR MIN(stream_cd) == 0) AND (MAX(stream_cd) IS NULL OR MAX(stream_cd) == '' OR MAX(stream_cd) LIKE ' %' OR MAX(stream_cd) == 0) THEN MAX(stream_cd)  ELSE 'GOOD' END as stream_cd_min_max_compare,
CASE WHEN MIN(effort_type_cd)  == MAX( effort_type_cd) THEN MAX(effort_type_cd) WHEN (MIN(effort_type_cd) IS NULL OR MIN(effort_type_cd) == '' OR MIN(effort_type_cd) LIKE ' %' OR MIN(effort_type_cd) == 0) AND (MAX(effort_type_cd) IS NULL OR MAX(effort_type_cd) == '' OR MAX(effort_type_cd) LIKE ' %' OR MAX(effort_type_cd) == 0) THEN MAX(effort_type_cd)  ELSE 'GOOD' END as effort_type_cd_min_max_compare,
CASE WHEN MIN(plan_volume)  == MAX( plan_volume) THEN MAX(plan_volume) WHEN (MIN(plan_volume) IS NULL OR MIN(plan_volume) == '' OR MIN(plan_volume) LIKE ' %' OR MIN(plan_volume) == 0) AND (MAX(plan_volume) IS NULL OR MAX(plan_volume) == '' OR MAX(plan_volume) LIKE ' %' OR MAX(plan_volume) == 0) THEN MAX(plan_volume)  ELSE 'GOOD' END as plan_volume_min_max_compare,
CASE WHEN MIN(mailing_volume)  == MAX( mailing_volume) THEN MAX(mailing_volume) WHEN (MIN(mailing_volume) IS NULL OR MIN(mailing_volume) == '' OR MIN(mailing_volume) LIKE ' %' OR MIN(mailing_volume) == 0) AND (MAX(mailing_volume) IS NULL OR MAX(mailing_volume) == '' OR MAX(mailing_volume) LIKE ' %' OR MAX(mailing_volume) == 0) THEN MAX(mailing_volume)  ELSE 'GOOD' END as mailing_volume_min_max_compare,
CASE WHEN MIN(package_cd)  == MAX( package_cd) THEN MAX(package_cd) WHEN (MIN(package_cd) IS NULL OR MIN(package_cd) == '' OR MIN(package_cd) LIKE ' %' OR MIN(package_cd) == 0) AND (MAX(package_cd) IS NULL OR MAX(package_cd) == '' OR MAX(package_cd) LIKE ' %' OR MAX(package_cd) == 0) THEN MAX(package_cd)  ELSE 'GOOD' END as package_cd_min_max_compare,
CASE WHEN MIN(random_sample_ind)  == MAX( random_sample_ind) THEN MAX(random_sample_ind) WHEN (MIN(random_sample_ind) IS NULL OR MIN(random_sample_ind) == '' OR MIN(random_sample_ind) LIKE ' %' OR MIN(random_sample_ind) == 0) AND (MAX(random_sample_ind) IS NULL OR MAX(random_sample_ind) == '' OR MAX(random_sample_ind) LIKE ' %' OR MAX(random_sample_ind) == 0) THEN MAX(random_sample_ind)  ELSE 'GOOD' END as random_sample_ind_min_max_compare,
CASE WHEN MIN(conversion_ind)  == MAX( conversion_ind) THEN MAX(conversion_ind) WHEN (MIN(conversion_ind) IS NULL OR MIN(conversion_ind) == '' OR MIN(conversion_ind) LIKE ' %' OR MIN(conversion_ind) == 0) AND (MAX(conversion_ind) IS NULL OR MAX(conversion_ind) == '' OR MAX(conversion_ind) LIKE ' %' OR MAX(conversion_ind) == 0) THEN MAX(conversion_ind)  ELSE 'GOOD' END as conversion_ind_min_max_compare,
CASE WHEN MIN(retention_ind)  == MAX( retention_ind) THEN MAX(retention_ind) WHEN (MIN(retention_ind) IS NULL OR MIN(retention_ind) == '' OR MIN(retention_ind) LIKE ' %' OR MIN(retention_ind) == 0) AND (MAX(retention_ind) IS NULL OR MAX(retention_ind) == '' OR MAX(retention_ind) LIKE ' %' OR MAX(retention_ind) == 0) THEN MAX(retention_ind)  ELSE 'GOOD' END as retention_ind_min_max_compare,
CASE WHEN MIN(force_inclusion_ind)  == MAX( force_inclusion_ind) THEN MAX(force_inclusion_ind) WHEN (MIN(force_inclusion_ind) IS NULL OR MIN(force_inclusion_ind) == '' OR MIN(force_inclusion_ind) LIKE ' %' OR MIN(force_inclusion_ind) == 0) AND (MAX(force_inclusion_ind) IS NULL OR MAX(force_inclusion_ind) == '' OR MAX(force_inclusion_ind) LIKE ' %' OR MAX(force_inclusion_ind) == 0) THEN MAX(force_inclusion_ind)  ELSE 'GOOD' END as force_inclusion_ind_min_max_compare
FROM uat_sa_calc_engine_exchange.oflnsel_hdl_campaigninstructionfile ;





CCR2.0 Variables
===================
select count(*) from uat_im_calc_engine.agg_oflnsel_hybridccr ;

select cust_id, count(*) from  uat_im_calc_engine.agg_oflnsel_hybridccr 
group by cust_id having count(*) > 1
order by cust_id ;


!ls -l /mapr/JMAPRCLUP01.CLASSIC.PCHAD.COM/im/calcengine/uat/hot/oflnsel/aggdata/agg_oflnsel_hybridccr ;

describe uat_im_calc_engine.agg_oflnsel_hybridccr ;

select substr(from_unixtime(unix_timestamp(cast(cast(selection_dt as int) as string),'yyyyDDD')),1,10)   from  uat_im_calc_engine.agg_oflnsel_hybridccr limit 1 ;
select load_time from  uat_im_calc_engine.agg_omnicore_custid_flatten limit 2;


set hive.strict.checks.cartesian.product=false ;
select ccr_distinct_custds_cnt,modsro_mf_current_distinct_custds_cnt,presel_distinct_custds_cnt
from
(select count(distinct cust_id) as ccr_distinct_custds_cnt from 
UAT_im_calc_engine.agg_oflnsel_hybridccr ) as ccr,
(select count(distinct cust_id) as modsro_mf_current_distinct_custds_cnt 
from uat_sa_calc_engine_exchange.oflnsel_hdl_modsro_current) as modsro_mf_current,
(select count(distinct cust_id) as presel_distinct_custds_cnt from 
uat_sa_calc_engine_exchange.oflnsel_hdl_preselectionfile where modsro_ind = '1') as presel
;



SELECT COUNT(*) AS TABLE_COUNT,
case when COUNT(*) ==  SUM(CASE WHEN agepram IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS agepram_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN anaabill12 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS anaabill12_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN asaabill12 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS asaabill12_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN aspdbill1224 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS aspdbill1224_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN avg_io IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS avg_io_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN avgor6ms IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS avgor6ms_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN avgord IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS avgord_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN avorsz1y IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS avorsz1y_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN cocn IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS cocn_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN collection_trans IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS collection_trans_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN conv_mag_effort_ct IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS conv_mag_effort_ct_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN conv_mer_effort_ct IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS conv_mer_effort_ct_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN ctm3 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS ctm3_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN ctmn3 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS ctmn3_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN ctmt12 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS ctmt12_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN cumval IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS cumval_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN curr_np_non IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS curr_np_non_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN cust_id IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS cust_id_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN cust_part_seq_no IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS cust_part_seq_no_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN custid_create_dt IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS custid_create_dt_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN eff_1yr_ct IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS eff_1yr_ct_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN eff_3mon_ct IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS eff_3mon_ct_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN eff_6mon_ct IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS eff_6mon_ct_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN eff_xtype_1yr_ct IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS eff_xtype_1yr_ct_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN eff_xtype_3mon_ct IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS eff_xtype_3mon_ct_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN eff_xtype_6mon_ct IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS eff_xtype_6mon_ct_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN lob3_6mon_amt IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS lob3_6mon_amt_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN eff_9type_2yr_ct IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS eff_9type_2yr_ct_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN eff_9type_6mon_ct IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS eff_9type_6mon_ct_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN lob1_1yr_ct IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS lob1_1yr_ct_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN lob1_3mon_ct IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS lob1_3mon_ct_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN lob1_6mon_ct IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS lob1_6mon_ct_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN lob1_1yr_amt IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS lob1_1yr_amt_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN lob1_3mon_amt IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS lob1_3mon_amt_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN lob1_6mon_amt IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS lob1_6mon_amt_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nono_lob1_ct_1yr IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nono_lob1_ct_1yr_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nono_lob1_ct_2yr IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nono_lob1_ct_2yr_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nono_lob1_ct_3mon IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nono_lob1_ct_3mon_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN lob_4_ct IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS lob_4_ct_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN eff_atype_1yr_ct IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS eff_atype_1yr_ct_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN eff_atype_2yr_ct IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS eff_atype_2yr_ct_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN eff_atype_3mon_ct IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS eff_atype_3mon_ct_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN eff_atype_6mon_ct IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS eff_atype_6mon_ct_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN lob2_1yr_ct IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS lob2_1yr_ct_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN lob_2_ct IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS lob_2_ct_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN lob2_3mon_ct IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS lob2_3mon_ct_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN lob2_6mon_ct IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS lob2_6mon_ct_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN lob2_1yr_amt IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS lob2_1yr_amt_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN lob2_3mon_amt IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS lob2_3mon_amt_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN lob2_6mon_amt IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS lob2_6mon_amt_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nono_lob2_ct_1yr IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nono_lob2_ct_1yr_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nono_lob2_ct_2yr IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nono_lob2_ct_2yr_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nono_lob2_ct_3mon IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nono_lob2_ct_3mon_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nono_lob2_ct_6mon IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nono_lob2_ct_6mon_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN dteff1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS dteff1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN eaf6 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS eaf6_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN eff_ctr IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS eff_ctr_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN eff9 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS eff9_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN efforts IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS efforts_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN ent1224 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS ent1224_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN ethnic_n IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS ethnic_n_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN food IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS food_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN gmail IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS gmail_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN heff12 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS heff12_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN hspay3mo IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS hspay3mo_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN hsunctr IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS hsunctr_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN int_ctm3 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS int_ctm3_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN int_nodt6 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS int_nodt6_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN int_npord IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS int_npord_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN m1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS m1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN m2 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS m2_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN mag24 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS mag24_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN max_days_delinq IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS max_days_delinq_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN mdse IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS mdse_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN mdserat IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS mdserat_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN mdsk IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS mdsk_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN medprdys IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS medprdys_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN mer_bs_efforts IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS mer_bs_efforts_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN miss IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS miss_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN mrkl_dob IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS mrkl_dob_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN n_late_fees_2yrs IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS n_late_fees_2yrs_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN n_orders IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS n_orders_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN navdtoc6m IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS navdtoc6m_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN navint IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS navint_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nbch12mo IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nbch12mo_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nctm9m IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nctm9m_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN ndays1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS ndays1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nefft1y IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nefft1y_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nefft3m IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nefft3m_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nefrat4 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nefrat4_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nent24 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nent24_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN non12m IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS non12m_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN non6m IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS non6m_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nordslcn IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nordslcn_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npavgord IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npavgord_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npcumeft IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npcumeft_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npcumwks IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npcumwks_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npdol3m IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npdol3m_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npdoleft IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npdoleft_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npdteff1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npdteff1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npdttdf IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npdttdf_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npdttotp IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npdttotp_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npeff1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npeff1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npeff6 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npeff6_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npeffslo IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npeffslo_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npefslnn IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npefslnn_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npnodt1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npnodt1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npnodt1m IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npnodt1m_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npnodt3 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npnodt3_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npnodt6 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npnodt6_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npnonds2 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npnonds2_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npnonds3 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npnonds3_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npnonms1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npnonms1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npnonord IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npnonord_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npnonrat IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npnonrat_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npnonyrp IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npnonyrp_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npordys2 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npordys2_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nppchdys IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nppchdys_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nppchmos IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nppchmos_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nppdsodl IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nppdsodl_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npprdy1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npprdy1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npttnt2 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npttnt2_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npuncctr IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npuncctr_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npvareff IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npvareff_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npvarmag IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npvarmag_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npvclrat IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npvclrat_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npxpdpd1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npxpdpd1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npxpdps3 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npxpdps3_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nret12ms IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nret12ms_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN ntran1yr IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS ntran1yr_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN num_dlq IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS num_dlq_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN off_ord_dys IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS off_ord_dys_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN lob9_6mon_ct IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS lob9_6mon_ct_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nono_lob9_ct_1yr IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nono_lob9_ct_1yr_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nono_lob9_ct_3mon IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nono_lob9_ct_3mon_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nono_lob9_ct_6mon IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nono_lob9_ct_6mon_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN ord12 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS ord12_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN ord_1yr_ct IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS ord_1yr_ct_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN avg_date_diff IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS avg_date_diff_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN ord_before_ct IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS ord_before_ct_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN max_date_diff IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS max_date_diff_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN min_date_diff IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS min_date_diff_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN ord_3mon_ct IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS ord_3mon_ct_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN ord_1yr_amt IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS ord_1yr_amt_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN ord_before_amt IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS ord_before_amt_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN ord_3mon_amt IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS ord_3mon_amt_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN ord_6mon_amt IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS ord_6mon_amt_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN pay_ratio_1yr IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS pay_ratio_1yr_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN pay_ratio_bf IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS pay_ratio_bf_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN pay_ratio_3mon IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS pay_ratio_3mon_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN pay_ratio_6mon IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS pay_ratio_6mon_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN avg_pay_date_diff IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS avg_pay_date_diff_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN max_pay_date_diff IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS max_pay_date_diff_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN trans_src_b_6mon IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS trans_src_b_6mon_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN trans_src_b_3mon IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS trans_src_b_3mon_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN trans_src_1_3mon IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS trans_src_1_3mon_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN trans_src_1_6mon IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS trans_src_1_6mon_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nono_ct_1yr IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nono_ct_1yr_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nono_ct_2yr IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nono_ct_2yr_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nono_ct_3mon IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nono_ct_3mon_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN paydy2 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS paydy2_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN pchamos IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS pchamos_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN pd_doll6 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS pd_doll6_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN pdmdsit4yr IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS pdmdsit4yr_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN pdollar3_6 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS pdollar3_6_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN pholtv1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS pholtv1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN pnoltv3 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS pnoltv3_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN poltv12 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS poltv12_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN poltv3 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS poltv3_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN ptdbtt13 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS ptdbtt13_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN ptdbtt7 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS ptdbtt7_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN pure_mer_eff_ct IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS pure_mer_eff_ct_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN quat1_np_eff IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS quat1_np_eff_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN quat1_rat_hs_rev IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS quat1_rat_hs_rev_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN quat2_tt_rev IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS quat2_tt_rev_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN quat3_hs_eff IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS quat3_hs_eff_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN qut1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS qut1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN rgm6 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS rgm6_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN rtacor612 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS rtacor612_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN scan1y IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS scan1y_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN scq_hs_eff IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS scq_hs_eff_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN scq_np_rat IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS scq_np_rat_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN scqq_tt_ent IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS scqq_tt_ent_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN sefft3m IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS sefft3m_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN sefft9m IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS sefft9m_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN sefrat1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS sefrat1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN sefrat4 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS sefrat4_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN selection_dt IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS selection_dt_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN snono3m IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS snono3m_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN tavgord1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS tavgord1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN tdays1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS tdays1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN tdays2 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS tdays2_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN tdays3 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS tdays3_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN tlpchmos IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS tlpchmos_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN tononrat IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS tononrat_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN tordint IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS tordint_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN total_paid_amount_last_7days IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS total_paid_amount_last_7days_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN totbyr1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS totbyr1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN totdt1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS totdt1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN totdt3 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS totdt3_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN totnph6 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS totnph6_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN tprd3 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS tprd3_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN trdys5 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS trdys5_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN uncctr IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS uncctr_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN unefrat IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS unefrat_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN vars601 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS vars601_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN xplcdys1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS xplcdys1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN zint IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS zint_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN zopen_no_payment IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS zopen_no_payment_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN ztvgint IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS ztvgint_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN week IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS week_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN delivery_week IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS delivery_week_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN mailid IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS mailid_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN volume IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS volume_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN pull IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS pull_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN main_mail IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS main_mail_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN fourc IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS fourc_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN mid_high_price IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS mid_high_price_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN multiflyer IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS multiflyer_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN ti IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS ti_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN tv IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS tv_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN x_mailing IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS x_mailing_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN gm IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS gm_AllNULL_Ind
FROM UAT_im_calc_engine.agg_oflnsel_hybridccr ;

SELECT COUNT(*) AS TABLE_COUNT,
CASE WHEN MIN(agepram)  == MAX( agepram) THEN MAX(agepram) WHEN (MIN(agepram) IS NULL OR MIN(agepram) == '' OR MIN(agepram) LIKE ' %' OR MIN(agepram) == 0) AND (MAX(agepram) IS NULL OR MAX(agepram) == '' OR MAX(agepram) LIKE ' %' OR MAX(agepram) == 0) THEN MAX(agepram)  ELSE 'GOOD' END as agepram_min_max_compare,
CASE WHEN MIN(anaabill12)  == MAX( anaabill12) THEN MAX(anaabill12) WHEN (MIN(anaabill12) IS NULL OR MIN(anaabill12) == '' OR MIN(anaabill12) LIKE ' %' OR MIN(anaabill12) == 0) AND (MAX(anaabill12) IS NULL OR MAX(anaabill12) == '' OR MAX(anaabill12) LIKE ' %' OR MAX(anaabill12) == 0) THEN MAX(anaabill12)  ELSE 'GOOD' END as anaabill12_min_max_compare,
CASE WHEN MIN(asaabill12)  == MAX( asaabill12) THEN MAX(asaabill12) WHEN (MIN(asaabill12) IS NULL OR MIN(asaabill12) == '' OR MIN(asaabill12) LIKE ' %' OR MIN(asaabill12) == 0) AND (MAX(asaabill12) IS NULL OR MAX(asaabill12) == '' OR MAX(asaabill12) LIKE ' %' OR MAX(asaabill12) == 0) THEN MAX(asaabill12)  ELSE 'GOOD' END as asaabill12_min_max_compare,
CASE WHEN MIN(aspdbill1224)  == MAX( aspdbill1224) THEN MAX(aspdbill1224) WHEN (MIN(aspdbill1224) IS NULL OR MIN(aspdbill1224) == '' OR MIN(aspdbill1224) LIKE ' %' OR MIN(aspdbill1224) == 0) AND (MAX(aspdbill1224) IS NULL OR MAX(aspdbill1224) == '' OR MAX(aspdbill1224) LIKE ' %' OR MAX(aspdbill1224) == 0) THEN MAX(aspdbill1224)  ELSE 'GOOD' END as aspdbill1224_min_max_compare,
CASE WHEN MIN(avg_io)  == MAX( avg_io) THEN MAX(avg_io) WHEN (MIN(avg_io) IS NULL OR MIN(avg_io) == '' OR MIN(avg_io) LIKE ' %' OR MIN(avg_io) == 0) AND (MAX(avg_io) IS NULL OR MAX(avg_io) == '' OR MAX(avg_io) LIKE ' %' OR MAX(avg_io) == 0) THEN MAX(avg_io)  ELSE 'GOOD' END as avg_io_min_max_compare,
CASE WHEN MIN(avgor6ms)  == MAX( avgor6ms) THEN MAX(avgor6ms) WHEN (MIN(avgor6ms) IS NULL OR MIN(avgor6ms) == '' OR MIN(avgor6ms) LIKE ' %' OR MIN(avgor6ms) == 0) AND (MAX(avgor6ms) IS NULL OR MAX(avgor6ms) == '' OR MAX(avgor6ms) LIKE ' %' OR MAX(avgor6ms) == 0) THEN MAX(avgor6ms)  ELSE 'GOOD' END as avgor6ms_min_max_compare,
CASE WHEN MIN(avgord)  == MAX( avgord) THEN MAX(avgord) WHEN (MIN(avgord) IS NULL OR MIN(avgord) == '' OR MIN(avgord) LIKE ' %' OR MIN(avgord) == 0) AND (MAX(avgord) IS NULL OR MAX(avgord) == '' OR MAX(avgord) LIKE ' %' OR MAX(avgord) == 0) THEN MAX(avgord)  ELSE 'GOOD' END as avgord_min_max_compare,
CASE WHEN MIN(avorsz1y)  == MAX( avorsz1y) THEN MAX(avorsz1y) WHEN (MIN(avorsz1y) IS NULL OR MIN(avorsz1y) == '' OR MIN(avorsz1y) LIKE ' %' OR MIN(avorsz1y) == 0) AND (MAX(avorsz1y) IS NULL OR MAX(avorsz1y) == '' OR MAX(avorsz1y) LIKE ' %' OR MAX(avorsz1y) == 0) THEN MAX(avorsz1y)  ELSE 'GOOD' END as avorsz1y_min_max_compare,
CASE WHEN MIN(cocn)  == MAX( cocn) THEN MAX(cocn) WHEN (MIN(cocn) IS NULL OR MIN(cocn) == '' OR MIN(cocn) LIKE ' %' OR MIN(cocn) == 0) AND (MAX(cocn) IS NULL OR MAX(cocn) == '' OR MAX(cocn) LIKE ' %' OR MAX(cocn) == 0) THEN MAX(cocn)  ELSE 'GOOD' END as cocn_min_max_compare,
CASE WHEN MIN(collection_trans)  == MAX( collection_trans) THEN MAX(collection_trans) WHEN (MIN(collection_trans) IS NULL OR MIN(collection_trans) == '' OR MIN(collection_trans) LIKE ' %' OR MIN(collection_trans) == 0) AND (MAX(collection_trans) IS NULL OR MAX(collection_trans) == '' OR MAX(collection_trans) LIKE ' %' OR MAX(collection_trans) == 0) THEN MAX(collection_trans)  ELSE 'GOOD' END as collection_trans_min_max_compare,
CASE WHEN MIN(conv_mag_effort_ct)  == MAX( conv_mag_effort_ct) THEN MAX(conv_mag_effort_ct) WHEN (MIN(conv_mag_effort_ct) IS NULL OR MIN(conv_mag_effort_ct) == '' OR MIN(conv_mag_effort_ct) LIKE ' %' OR MIN(conv_mag_effort_ct) == 0) AND (MAX(conv_mag_effort_ct) IS NULL OR MAX(conv_mag_effort_ct) == '' OR MAX(conv_mag_effort_ct) LIKE ' %' OR MAX(conv_mag_effort_ct) == 0) THEN MAX(conv_mag_effort_ct)  ELSE 'GOOD' END as conv_mag_effort_ct_min_max_compare,
CASE WHEN MIN(conv_mer_effort_ct)  == MAX( conv_mer_effort_ct) THEN MAX(conv_mer_effort_ct) WHEN (MIN(conv_mer_effort_ct) IS NULL OR MIN(conv_mer_effort_ct) == '' OR MIN(conv_mer_effort_ct) LIKE ' %' OR MIN(conv_mer_effort_ct) == 0) AND (MAX(conv_mer_effort_ct) IS NULL OR MAX(conv_mer_effort_ct) == '' OR MAX(conv_mer_effort_ct) LIKE ' %' OR MAX(conv_mer_effort_ct) == 0) THEN MAX(conv_mer_effort_ct)  ELSE 'GOOD' END as conv_mer_effort_ct_min_max_compare,
CASE WHEN MIN(ctm3)  == MAX( ctm3) THEN MAX(ctm3) WHEN (MIN(ctm3) IS NULL OR MIN(ctm3) == '' OR MIN(ctm3) LIKE ' %' OR MIN(ctm3) == 0) AND (MAX(ctm3) IS NULL OR MAX(ctm3) == '' OR MAX(ctm3) LIKE ' %' OR MAX(ctm3) == 0) THEN MAX(ctm3)  ELSE 'GOOD' END as ctm3_min_max_compare,
CASE WHEN MIN(ctmn3)  == MAX( ctmn3) THEN MAX(ctmn3) WHEN (MIN(ctmn3) IS NULL OR MIN(ctmn3) == '' OR MIN(ctmn3) LIKE ' %' OR MIN(ctmn3) == 0) AND (MAX(ctmn3) IS NULL OR MAX(ctmn3) == '' OR MAX(ctmn3) LIKE ' %' OR MAX(ctmn3) == 0) THEN MAX(ctmn3)  ELSE 'GOOD' END as ctmn3_min_max_compare,
CASE WHEN MIN(ctmt12)  == MAX( ctmt12) THEN MAX(ctmt12) WHEN (MIN(ctmt12) IS NULL OR MIN(ctmt12) == '' OR MIN(ctmt12) LIKE ' %' OR MIN(ctmt12) == 0) AND (MAX(ctmt12) IS NULL OR MAX(ctmt12) == '' OR MAX(ctmt12) LIKE ' %' OR MAX(ctmt12) == 0) THEN MAX(ctmt12)  ELSE 'GOOD' END as ctmt12_min_max_compare,
CASE WHEN MIN(cumval)  == MAX( cumval) THEN MAX(cumval) WHEN (MIN(cumval) IS NULL OR MIN(cumval) == '' OR MIN(cumval) LIKE ' %' OR MIN(cumval) == 0) AND (MAX(cumval) IS NULL OR MAX(cumval) == '' OR MAX(cumval) LIKE ' %' OR MAX(cumval) == 0) THEN MAX(cumval)  ELSE 'GOOD' END as cumval_min_max_compare,
CASE WHEN MIN(curr_np_non)  == MAX( curr_np_non) THEN MAX(curr_np_non) WHEN (MIN(curr_np_non) IS NULL OR MIN(curr_np_non) == '' OR MIN(curr_np_non) LIKE ' %' OR MIN(curr_np_non) == 0) AND (MAX(curr_np_non) IS NULL OR MAX(curr_np_non) == '' OR MAX(curr_np_non) LIKE ' %' OR MAX(curr_np_non) == 0) THEN MAX(curr_np_non)  ELSE 'GOOD' END as curr_np_non_min_max_compare,
CASE WHEN MIN(cust_id)  == MAX( cust_id) THEN MAX(cust_id) WHEN (MIN(cust_id) IS NULL OR MIN(cust_id) == '' OR MIN(cust_id) LIKE ' %' OR MIN(cust_id) == 0) AND (MAX(cust_id) IS NULL OR MAX(cust_id) == '' OR MAX(cust_id) LIKE ' %' OR MAX(cust_id) == 0) THEN MAX(cust_id)  ELSE 'GOOD' END as cust_id_min_max_compare,
CASE WHEN MIN(cust_part_seq_no)  == MAX( cust_part_seq_no) THEN MAX(cust_part_seq_no) WHEN (MIN(cust_part_seq_no) IS NULL OR MIN(cust_part_seq_no) == '' OR MIN(cust_part_seq_no) LIKE ' %' OR MIN(cust_part_seq_no) == 0) AND (MAX(cust_part_seq_no) IS NULL OR MAX(cust_part_seq_no) == '' OR MAX(cust_part_seq_no) LIKE ' %' OR MAX(cust_part_seq_no) == 0) THEN MAX(cust_part_seq_no)  ELSE 'GOOD' END as cust_part_seq_no_min_max_compare,
CASE WHEN MIN(custid_create_dt)  == MAX( custid_create_dt) THEN MAX(custid_create_dt) WHEN (MIN(custid_create_dt) IS NULL OR MIN(custid_create_dt) == '' OR MIN(custid_create_dt) LIKE ' %' OR MIN(custid_create_dt) == 0) AND (MAX(custid_create_dt) IS NULL OR MAX(custid_create_dt) == '' OR MAX(custid_create_dt) LIKE ' %' OR MAX(custid_create_dt) == 0) THEN MAX(custid_create_dt)  ELSE 'GOOD' END as custid_create_dt_min_max_compare,
CASE WHEN MIN(eff_1yr_ct)  == MAX( eff_1yr_ct) THEN MAX(eff_1yr_ct) WHEN (MIN(eff_1yr_ct) IS NULL OR MIN(eff_1yr_ct) == '' OR MIN(eff_1yr_ct) LIKE ' %' OR MIN(eff_1yr_ct) == 0) AND (MAX(eff_1yr_ct) IS NULL OR MAX(eff_1yr_ct) == '' OR MAX(eff_1yr_ct) LIKE ' %' OR MAX(eff_1yr_ct) == 0) THEN MAX(eff_1yr_ct)  ELSE 'GOOD' END as eff_1yr_ct_min_max_compare,
CASE WHEN MIN(eff_3mon_ct)  == MAX( eff_3mon_ct) THEN MAX(eff_3mon_ct) WHEN (MIN(eff_3mon_ct) IS NULL OR MIN(eff_3mon_ct) == '' OR MIN(eff_3mon_ct) LIKE ' %' OR MIN(eff_3mon_ct) == 0) AND (MAX(eff_3mon_ct) IS NULL OR MAX(eff_3mon_ct) == '' OR MAX(eff_3mon_ct) LIKE ' %' OR MAX(eff_3mon_ct) == 0) THEN MAX(eff_3mon_ct)  ELSE 'GOOD' END as eff_3mon_ct_min_max_compare,
CASE WHEN MIN(eff_6mon_ct)  == MAX( eff_6mon_ct) THEN MAX(eff_6mon_ct) WHEN (MIN(eff_6mon_ct) IS NULL OR MIN(eff_6mon_ct) == '' OR MIN(eff_6mon_ct) LIKE ' %' OR MIN(eff_6mon_ct) == 0) AND (MAX(eff_6mon_ct) IS NULL OR MAX(eff_6mon_ct) == '' OR MAX(eff_6mon_ct) LIKE ' %' OR MAX(eff_6mon_ct) == 0) THEN MAX(eff_6mon_ct)  ELSE 'GOOD' END as eff_6mon_ct_min_max_compare,
CASE WHEN MIN(eff_xtype_1yr_ct)  == MAX( eff_xtype_1yr_ct) THEN MAX(eff_xtype_1yr_ct) WHEN (MIN(eff_xtype_1yr_ct) IS NULL OR MIN(eff_xtype_1yr_ct) == '' OR MIN(eff_xtype_1yr_ct) LIKE ' %' OR MIN(eff_xtype_1yr_ct) == 0) AND (MAX(eff_xtype_1yr_ct) IS NULL OR MAX(eff_xtype_1yr_ct) == '' OR MAX(eff_xtype_1yr_ct) LIKE ' %' OR MAX(eff_xtype_1yr_ct) == 0) THEN MAX(eff_xtype_1yr_ct)  ELSE 'GOOD' END as eff_xtype_1yr_ct_min_max_compare,
CASE WHEN MIN(eff_xtype_3mon_ct)  == MAX( eff_xtype_3mon_ct) THEN MAX(eff_xtype_3mon_ct) WHEN (MIN(eff_xtype_3mon_ct) IS NULL OR MIN(eff_xtype_3mon_ct) == '' OR MIN(eff_xtype_3mon_ct) LIKE ' %' OR MIN(eff_xtype_3mon_ct) == 0) AND (MAX(eff_xtype_3mon_ct) IS NULL OR MAX(eff_xtype_3mon_ct) == '' OR MAX(eff_xtype_3mon_ct) LIKE ' %' OR MAX(eff_xtype_3mon_ct) == 0) THEN MAX(eff_xtype_3mon_ct)  ELSE 'GOOD' END as eff_xtype_3mon_ct_min_max_compare,
CASE WHEN MIN(eff_xtype_6mon_ct)  == MAX( eff_xtype_6mon_ct) THEN MAX(eff_xtype_6mon_ct) WHEN (MIN(eff_xtype_6mon_ct) IS NULL OR MIN(eff_xtype_6mon_ct) == '' OR MIN(eff_xtype_6mon_ct) LIKE ' %' OR MIN(eff_xtype_6mon_ct) == 0) AND (MAX(eff_xtype_6mon_ct) IS NULL OR MAX(eff_xtype_6mon_ct) == '' OR MAX(eff_xtype_6mon_ct) LIKE ' %' OR MAX(eff_xtype_6mon_ct) == 0) THEN MAX(eff_xtype_6mon_ct)  ELSE 'GOOD' END as eff_xtype_6mon_ct_min_max_compare,
CASE WHEN MIN(lob3_6mon_amt)  == MAX( lob3_6mon_amt) THEN MAX(lob3_6mon_amt) WHEN (MIN(lob3_6mon_amt) IS NULL OR MIN(lob3_6mon_amt) == '' OR MIN(lob3_6mon_amt) LIKE ' %' OR MIN(lob3_6mon_amt) == 0) AND (MAX(lob3_6mon_amt) IS NULL OR MAX(lob3_6mon_amt) == '' OR MAX(lob3_6mon_amt) LIKE ' %' OR MAX(lob3_6mon_amt) == 0) THEN MAX(lob3_6mon_amt)  ELSE 'GOOD' END as lob3_6mon_amt_min_max_compare,
CASE WHEN MIN(eff_9type_2yr_ct)  == MAX( eff_9type_2yr_ct) THEN MAX(eff_9type_2yr_ct) WHEN (MIN(eff_9type_2yr_ct) IS NULL OR MIN(eff_9type_2yr_ct) == '' OR MIN(eff_9type_2yr_ct) LIKE ' %' OR MIN(eff_9type_2yr_ct) == 0) AND (MAX(eff_9type_2yr_ct) IS NULL OR MAX(eff_9type_2yr_ct) == '' OR MAX(eff_9type_2yr_ct) LIKE ' %' OR MAX(eff_9type_2yr_ct) == 0) THEN MAX(eff_9type_2yr_ct)  ELSE 'GOOD' END as eff_9type_2yr_ct_min_max_compare,
CASE WHEN MIN(eff_9type_6mon_ct)  == MAX( eff_9type_6mon_ct) THEN MAX(eff_9type_6mon_ct) WHEN (MIN(eff_9type_6mon_ct) IS NULL OR MIN(eff_9type_6mon_ct) == '' OR MIN(eff_9type_6mon_ct) LIKE ' %' OR MIN(eff_9type_6mon_ct) == 0) AND (MAX(eff_9type_6mon_ct) IS NULL OR MAX(eff_9type_6mon_ct) == '' OR MAX(eff_9type_6mon_ct) LIKE ' %' OR MAX(eff_9type_6mon_ct) == 0) THEN MAX(eff_9type_6mon_ct)  ELSE 'GOOD' END as eff_9type_6mon_ct_min_max_compare,
CASE WHEN MIN(lob1_1yr_ct)  == MAX( lob1_1yr_ct) THEN MAX(lob1_1yr_ct) WHEN (MIN(lob1_1yr_ct) IS NULL OR MIN(lob1_1yr_ct) == '' OR MIN(lob1_1yr_ct) LIKE ' %' OR MIN(lob1_1yr_ct) == 0) AND (MAX(lob1_1yr_ct) IS NULL OR MAX(lob1_1yr_ct) == '' OR MAX(lob1_1yr_ct) LIKE ' %' OR MAX(lob1_1yr_ct) == 0) THEN MAX(lob1_1yr_ct)  ELSE 'GOOD' END as lob1_1yr_ct_min_max_compare,
CASE WHEN MIN(lob1_3mon_ct)  == MAX( lob1_3mon_ct) THEN MAX(lob1_3mon_ct) WHEN (MIN(lob1_3mon_ct) IS NULL OR MIN(lob1_3mon_ct) == '' OR MIN(lob1_3mon_ct) LIKE ' %' OR MIN(lob1_3mon_ct) == 0) AND (MAX(lob1_3mon_ct) IS NULL OR MAX(lob1_3mon_ct) == '' OR MAX(lob1_3mon_ct) LIKE ' %' OR MAX(lob1_3mon_ct) == 0) THEN MAX(lob1_3mon_ct)  ELSE 'GOOD' END as lob1_3mon_ct_min_max_compare,
CASE WHEN MIN(lob1_6mon_ct)  == MAX( lob1_6mon_ct) THEN MAX(lob1_6mon_ct) WHEN (MIN(lob1_6mon_ct) IS NULL OR MIN(lob1_6mon_ct) == '' OR MIN(lob1_6mon_ct) LIKE ' %' OR MIN(lob1_6mon_ct) == 0) AND (MAX(lob1_6mon_ct) IS NULL OR MAX(lob1_6mon_ct) == '' OR MAX(lob1_6mon_ct) LIKE ' %' OR MAX(lob1_6mon_ct) == 0) THEN MAX(lob1_6mon_ct)  ELSE 'GOOD' END as lob1_6mon_ct_min_max_compare,
CASE WHEN MIN(lob1_1yr_amt)  == MAX( lob1_1yr_amt) THEN MAX(lob1_1yr_amt) WHEN (MIN(lob1_1yr_amt) IS NULL OR MIN(lob1_1yr_amt) == '' OR MIN(lob1_1yr_amt) LIKE ' %' OR MIN(lob1_1yr_amt) == 0) AND (MAX(lob1_1yr_amt) IS NULL OR MAX(lob1_1yr_amt) == '' OR MAX(lob1_1yr_amt) LIKE ' %' OR MAX(lob1_1yr_amt) == 0) THEN MAX(lob1_1yr_amt)  ELSE 'GOOD' END as lob1_1yr_amt_min_max_compare,
CASE WHEN MIN(lob1_3mon_amt)  == MAX( lob1_3mon_amt) THEN MAX(lob1_3mon_amt) WHEN (MIN(lob1_3mon_amt) IS NULL OR MIN(lob1_3mon_amt) == '' OR MIN(lob1_3mon_amt) LIKE ' %' OR MIN(lob1_3mon_amt) == 0) AND (MAX(lob1_3mon_amt) IS NULL OR MAX(lob1_3mon_amt) == '' OR MAX(lob1_3mon_amt) LIKE ' %' OR MAX(lob1_3mon_amt) == 0) THEN MAX(lob1_3mon_amt)  ELSE 'GOOD' END as lob1_3mon_amt_min_max_compare,
CASE WHEN MIN(lob1_6mon_amt)  == MAX( lob1_6mon_amt) THEN MAX(lob1_6mon_amt) WHEN (MIN(lob1_6mon_amt) IS NULL OR MIN(lob1_6mon_amt) == '' OR MIN(lob1_6mon_amt) LIKE ' %' OR MIN(lob1_6mon_amt) == 0) AND (MAX(lob1_6mon_amt) IS NULL OR MAX(lob1_6mon_amt) == '' OR MAX(lob1_6mon_amt) LIKE ' %' OR MAX(lob1_6mon_amt) == 0) THEN MAX(lob1_6mon_amt)  ELSE 'GOOD' END as lob1_6mon_amt_min_max_compare,
CASE WHEN MIN(nono_lob1_ct_1yr)  == MAX( nono_lob1_ct_1yr) THEN MAX(nono_lob1_ct_1yr) WHEN (MIN(nono_lob1_ct_1yr) IS NULL OR MIN(nono_lob1_ct_1yr) == '' OR MIN(nono_lob1_ct_1yr) LIKE ' %' OR MIN(nono_lob1_ct_1yr) == 0) AND (MAX(nono_lob1_ct_1yr) IS NULL OR MAX(nono_lob1_ct_1yr) == '' OR MAX(nono_lob1_ct_1yr) LIKE ' %' OR MAX(nono_lob1_ct_1yr) == 0) THEN MAX(nono_lob1_ct_1yr)  ELSE 'GOOD' END as nono_lob1_ct_1yr_min_max_compare,
CASE WHEN MIN(nono_lob1_ct_2yr)  == MAX( nono_lob1_ct_2yr) THEN MAX(nono_lob1_ct_2yr) WHEN (MIN(nono_lob1_ct_2yr) IS NULL OR MIN(nono_lob1_ct_2yr) == '' OR MIN(nono_lob1_ct_2yr) LIKE ' %' OR MIN(nono_lob1_ct_2yr) == 0) AND (MAX(nono_lob1_ct_2yr) IS NULL OR MAX(nono_lob1_ct_2yr) == '' OR MAX(nono_lob1_ct_2yr) LIKE ' %' OR MAX(nono_lob1_ct_2yr) == 0) THEN MAX(nono_lob1_ct_2yr)  ELSE 'GOOD' END as nono_lob1_ct_2yr_min_max_compare,
CASE WHEN MIN(nono_lob1_ct_3mon)  == MAX( nono_lob1_ct_3mon) THEN MAX(nono_lob1_ct_3mon) WHEN (MIN(nono_lob1_ct_3mon) IS NULL OR MIN(nono_lob1_ct_3mon) == '' OR MIN(nono_lob1_ct_3mon) LIKE ' %' OR MIN(nono_lob1_ct_3mon) == 0) AND (MAX(nono_lob1_ct_3mon) IS NULL OR MAX(nono_lob1_ct_3mon) == '' OR MAX(nono_lob1_ct_3mon) LIKE ' %' OR MAX(nono_lob1_ct_3mon) == 0) THEN MAX(nono_lob1_ct_3mon)  ELSE 'GOOD' END as nono_lob1_ct_3mon_min_max_compare,
CASE WHEN MIN(lob_4_ct)  == MAX( lob_4_ct) THEN MAX(lob_4_ct) WHEN (MIN(lob_4_ct) IS NULL OR MIN(lob_4_ct) == '' OR MIN(lob_4_ct) LIKE ' %' OR MIN(lob_4_ct) == 0) AND (MAX(lob_4_ct) IS NULL OR MAX(lob_4_ct) == '' OR MAX(lob_4_ct) LIKE ' %' OR MAX(lob_4_ct) == 0) THEN MAX(lob_4_ct)  ELSE 'GOOD' END as lob_4_ct_min_max_compare,
CASE WHEN MIN(eff_atype_1yr_ct)  == MAX( eff_atype_1yr_ct) THEN MAX(eff_atype_1yr_ct) WHEN (MIN(eff_atype_1yr_ct) IS NULL OR MIN(eff_atype_1yr_ct) == '' OR MIN(eff_atype_1yr_ct) LIKE ' %' OR MIN(eff_atype_1yr_ct) == 0) AND (MAX(eff_atype_1yr_ct) IS NULL OR MAX(eff_atype_1yr_ct) == '' OR MAX(eff_atype_1yr_ct) LIKE ' %' OR MAX(eff_atype_1yr_ct) == 0) THEN MAX(eff_atype_1yr_ct)  ELSE 'GOOD' END as eff_atype_1yr_ct_min_max_compare,
CASE WHEN MIN(eff_atype_2yr_ct)  == MAX( eff_atype_2yr_ct) THEN MAX(eff_atype_2yr_ct) WHEN (MIN(eff_atype_2yr_ct) IS NULL OR MIN(eff_atype_2yr_ct) == '' OR MIN(eff_atype_2yr_ct) LIKE ' %' OR MIN(eff_atype_2yr_ct) == 0) AND (MAX(eff_atype_2yr_ct) IS NULL OR MAX(eff_atype_2yr_ct) == '' OR MAX(eff_atype_2yr_ct) LIKE ' %' OR MAX(eff_atype_2yr_ct) == 0) THEN MAX(eff_atype_2yr_ct)  ELSE 'GOOD' END as eff_atype_2yr_ct_min_max_compare,
CASE WHEN MIN(eff_atype_3mon_ct)  == MAX( eff_atype_3mon_ct) THEN MAX(eff_atype_3mon_ct) WHEN (MIN(eff_atype_3mon_ct) IS NULL OR MIN(eff_atype_3mon_ct) == '' OR MIN(eff_atype_3mon_ct) LIKE ' %' OR MIN(eff_atype_3mon_ct) == 0) AND (MAX(eff_atype_3mon_ct) IS NULL OR MAX(eff_atype_3mon_ct) == '' OR MAX(eff_atype_3mon_ct) LIKE ' %' OR MAX(eff_atype_3mon_ct) == 0) THEN MAX(eff_atype_3mon_ct)  ELSE 'GOOD' END as eff_atype_3mon_ct_min_max_compare,
CASE WHEN MIN(eff_atype_6mon_ct)  == MAX( eff_atype_6mon_ct) THEN MAX(eff_atype_6mon_ct) WHEN (MIN(eff_atype_6mon_ct) IS NULL OR MIN(eff_atype_6mon_ct) == '' OR MIN(eff_atype_6mon_ct) LIKE ' %' OR MIN(eff_atype_6mon_ct) == 0) AND (MAX(eff_atype_6mon_ct) IS NULL OR MAX(eff_atype_6mon_ct) == '' OR MAX(eff_atype_6mon_ct) LIKE ' %' OR MAX(eff_atype_6mon_ct) == 0) THEN MAX(eff_atype_6mon_ct)  ELSE 'GOOD' END as eff_atype_6mon_ct_min_max_compare,
CASE WHEN MIN(lob2_1yr_ct)  == MAX( lob2_1yr_ct) THEN MAX(lob2_1yr_ct) WHEN (MIN(lob2_1yr_ct) IS NULL OR MIN(lob2_1yr_ct) == '' OR MIN(lob2_1yr_ct) LIKE ' %' OR MIN(lob2_1yr_ct) == 0) AND (MAX(lob2_1yr_ct) IS NULL OR MAX(lob2_1yr_ct) == '' OR MAX(lob2_1yr_ct) LIKE ' %' OR MAX(lob2_1yr_ct) == 0) THEN MAX(lob2_1yr_ct)  ELSE 'GOOD' END as lob2_1yr_ct_min_max_compare,
CASE WHEN MIN(lob_2_ct)  == MAX( lob_2_ct) THEN MAX(lob_2_ct) WHEN (MIN(lob_2_ct) IS NULL OR MIN(lob_2_ct) == '' OR MIN(lob_2_ct) LIKE ' %' OR MIN(lob_2_ct) == 0) AND (MAX(lob_2_ct) IS NULL OR MAX(lob_2_ct) == '' OR MAX(lob_2_ct) LIKE ' %' OR MAX(lob_2_ct) == 0) THEN MAX(lob_2_ct)  ELSE 'GOOD' END as lob_2_ct_min_max_compare,
CASE WHEN MIN(lob2_3mon_ct)  == MAX( lob2_3mon_ct) THEN MAX(lob2_3mon_ct) WHEN (MIN(lob2_3mon_ct) IS NULL OR MIN(lob2_3mon_ct) == '' OR MIN(lob2_3mon_ct) LIKE ' %' OR MIN(lob2_3mon_ct) == 0) AND (MAX(lob2_3mon_ct) IS NULL OR MAX(lob2_3mon_ct) == '' OR MAX(lob2_3mon_ct) LIKE ' %' OR MAX(lob2_3mon_ct) == 0) THEN MAX(lob2_3mon_ct)  ELSE 'GOOD' END as lob2_3mon_ct_min_max_compare,
CASE WHEN MIN(lob2_6mon_ct)  == MAX( lob2_6mon_ct) THEN MAX(lob2_6mon_ct) WHEN (MIN(lob2_6mon_ct) IS NULL OR MIN(lob2_6mon_ct) == '' OR MIN(lob2_6mon_ct) LIKE ' %' OR MIN(lob2_6mon_ct) == 0) AND (MAX(lob2_6mon_ct) IS NULL OR MAX(lob2_6mon_ct) == '' OR MAX(lob2_6mon_ct) LIKE ' %' OR MAX(lob2_6mon_ct) == 0) THEN MAX(lob2_6mon_ct)  ELSE 'GOOD' END as lob2_6mon_ct_min_max_compare,
CASE WHEN MIN(lob2_1yr_amt)  == MAX( lob2_1yr_amt) THEN MAX(lob2_1yr_amt) WHEN (MIN(lob2_1yr_amt) IS NULL OR MIN(lob2_1yr_amt) == '' OR MIN(lob2_1yr_amt) LIKE ' %' OR MIN(lob2_1yr_amt) == 0) AND (MAX(lob2_1yr_amt) IS NULL OR MAX(lob2_1yr_amt) == '' OR MAX(lob2_1yr_amt) LIKE ' %' OR MAX(lob2_1yr_amt) == 0) THEN MAX(lob2_1yr_amt)  ELSE 'GOOD' END as lob2_1yr_amt_min_max_compare,
CASE WHEN MIN(lob2_3mon_amt)  == MAX( lob2_3mon_amt) THEN MAX(lob2_3mon_amt) WHEN (MIN(lob2_3mon_amt) IS NULL OR MIN(lob2_3mon_amt) == '' OR MIN(lob2_3mon_amt) LIKE ' %' OR MIN(lob2_3mon_amt) == 0) AND (MAX(lob2_3mon_amt) IS NULL OR MAX(lob2_3mon_amt) == '' OR MAX(lob2_3mon_amt) LIKE ' %' OR MAX(lob2_3mon_amt) == 0) THEN MAX(lob2_3mon_amt)  ELSE 'GOOD' END as lob2_3mon_amt_min_max_compare,
CASE WHEN MIN(lob2_6mon_amt)  == MAX( lob2_6mon_amt) THEN MAX(lob2_6mon_amt) WHEN (MIN(lob2_6mon_amt) IS NULL OR MIN(lob2_6mon_amt) == '' OR MIN(lob2_6mon_amt) LIKE ' %' OR MIN(lob2_6mon_amt) == 0) AND (MAX(lob2_6mon_amt) IS NULL OR MAX(lob2_6mon_amt) == '' OR MAX(lob2_6mon_amt) LIKE ' %' OR MAX(lob2_6mon_amt) == 0) THEN MAX(lob2_6mon_amt)  ELSE 'GOOD' END as lob2_6mon_amt_min_max_compare,
CASE WHEN MIN(nono_lob2_ct_1yr)  == MAX( nono_lob2_ct_1yr) THEN MAX(nono_lob2_ct_1yr) WHEN (MIN(nono_lob2_ct_1yr) IS NULL OR MIN(nono_lob2_ct_1yr) == '' OR MIN(nono_lob2_ct_1yr) LIKE ' %' OR MIN(nono_lob2_ct_1yr) == 0) AND (MAX(nono_lob2_ct_1yr) IS NULL OR MAX(nono_lob2_ct_1yr) == '' OR MAX(nono_lob2_ct_1yr) LIKE ' %' OR MAX(nono_lob2_ct_1yr) == 0) THEN MAX(nono_lob2_ct_1yr)  ELSE 'GOOD' END as nono_lob2_ct_1yr_min_max_compare,
CASE WHEN MIN(nono_lob2_ct_2yr)  == MAX( nono_lob2_ct_2yr) THEN MAX(nono_lob2_ct_2yr) WHEN (MIN(nono_lob2_ct_2yr) IS NULL OR MIN(nono_lob2_ct_2yr) == '' OR MIN(nono_lob2_ct_2yr) LIKE ' %' OR MIN(nono_lob2_ct_2yr) == 0) AND (MAX(nono_lob2_ct_2yr) IS NULL OR MAX(nono_lob2_ct_2yr) == '' OR MAX(nono_lob2_ct_2yr) LIKE ' %' OR MAX(nono_lob2_ct_2yr) == 0) THEN MAX(nono_lob2_ct_2yr)  ELSE 'GOOD' END as nono_lob2_ct_2yr_min_max_compare,
CASE WHEN MIN(nono_lob2_ct_3mon)  == MAX( nono_lob2_ct_3mon) THEN MAX(nono_lob2_ct_3mon) WHEN (MIN(nono_lob2_ct_3mon) IS NULL OR MIN(nono_lob2_ct_3mon) == '' OR MIN(nono_lob2_ct_3mon) LIKE ' %' OR MIN(nono_lob2_ct_3mon) == 0) AND (MAX(nono_lob2_ct_3mon) IS NULL OR MAX(nono_lob2_ct_3mon) == '' OR MAX(nono_lob2_ct_3mon) LIKE ' %' OR MAX(nono_lob2_ct_3mon) == 0) THEN MAX(nono_lob2_ct_3mon)  ELSE 'GOOD' END as nono_lob2_ct_3mon_min_max_compare,
CASE WHEN MIN(nono_lob2_ct_6mon)  == MAX( nono_lob2_ct_6mon) THEN MAX(nono_lob2_ct_6mon) WHEN (MIN(nono_lob2_ct_6mon) IS NULL OR MIN(nono_lob2_ct_6mon) == '' OR MIN(nono_lob2_ct_6mon) LIKE ' %' OR MIN(nono_lob2_ct_6mon) == 0) AND (MAX(nono_lob2_ct_6mon) IS NULL OR MAX(nono_lob2_ct_6mon) == '' OR MAX(nono_lob2_ct_6mon) LIKE ' %' OR MAX(nono_lob2_ct_6mon) == 0) THEN MAX(nono_lob2_ct_6mon)  ELSE 'GOOD' END as nono_lob2_ct_6mon_min_max_compare,
CASE WHEN MIN(dteff1)  == MAX( dteff1) THEN MAX(dteff1) WHEN (MIN(dteff1) IS NULL OR MIN(dteff1) == '' OR MIN(dteff1) LIKE ' %' OR MIN(dteff1) == 0) AND (MAX(dteff1) IS NULL OR MAX(dteff1) == '' OR MAX(dteff1) LIKE ' %' OR MAX(dteff1) == 0) THEN MAX(dteff1)  ELSE 'GOOD' END as dteff1_min_max_compare,
CASE WHEN MIN(eaf6)  == MAX( eaf6) THEN MAX(eaf6) WHEN (MIN(eaf6) IS NULL OR MIN(eaf6) == '' OR MIN(eaf6) LIKE ' %' OR MIN(eaf6) == 0) AND (MAX(eaf6) IS NULL OR MAX(eaf6) == '' OR MAX(eaf6) LIKE ' %' OR MAX(eaf6) == 0) THEN MAX(eaf6)  ELSE 'GOOD' END as eaf6_min_max_compare,
CASE WHEN MIN(eff_ctr)  == MAX( eff_ctr) THEN MAX(eff_ctr) WHEN (MIN(eff_ctr) IS NULL OR MIN(eff_ctr) == '' OR MIN(eff_ctr) LIKE ' %' OR MIN(eff_ctr) == 0) AND (MAX(eff_ctr) IS NULL OR MAX(eff_ctr) == '' OR MAX(eff_ctr) LIKE ' %' OR MAX(eff_ctr) == 0) THEN MAX(eff_ctr)  ELSE 'GOOD' END as eff_ctr_min_max_compare,
CASE WHEN MIN(eff9)  == MAX( eff9) THEN MAX(eff9) WHEN (MIN(eff9) IS NULL OR MIN(eff9) == '' OR MIN(eff9) LIKE ' %' OR MIN(eff9) == 0) AND (MAX(eff9) IS NULL OR MAX(eff9) == '' OR MAX(eff9) LIKE ' %' OR MAX(eff9) == 0) THEN MAX(eff9)  ELSE 'GOOD' END as eff9_min_max_compare,
CASE WHEN MIN(efforts)  == MAX( efforts) THEN MAX(efforts) WHEN (MIN(efforts) IS NULL OR MIN(efforts) == '' OR MIN(efforts) LIKE ' %' OR MIN(efforts) == 0) AND (MAX(efforts) IS NULL OR MAX(efforts) == '' OR MAX(efforts) LIKE ' %' OR MAX(efforts) == 0) THEN MAX(efforts)  ELSE 'GOOD' END as efforts_min_max_compare,
CASE WHEN MIN(ent1224)  == MAX( ent1224) THEN MAX(ent1224) WHEN (MIN(ent1224) IS NULL OR MIN(ent1224) == '' OR MIN(ent1224) LIKE ' %' OR MIN(ent1224) == 0) AND (MAX(ent1224) IS NULL OR MAX(ent1224) == '' OR MAX(ent1224) LIKE ' %' OR MAX(ent1224) == 0) THEN MAX(ent1224)  ELSE 'GOOD' END as ent1224_min_max_compare,
CASE WHEN MIN(ethnic_n)  == MAX( ethnic_n) THEN MAX(ethnic_n) WHEN (MIN(ethnic_n) IS NULL OR MIN(ethnic_n) == '' OR MIN(ethnic_n) LIKE ' %' OR MIN(ethnic_n) == 0) AND (MAX(ethnic_n) IS NULL OR MAX(ethnic_n) == '' OR MAX(ethnic_n) LIKE ' %' OR MAX(ethnic_n) == 0) THEN MAX(ethnic_n)  ELSE 'GOOD' END as ethnic_n_min_max_compare,
CASE WHEN MIN(food)  == MAX( food) THEN MAX(food) WHEN (MIN(food) IS NULL OR MIN(food) == '' OR MIN(food) LIKE ' %' OR MIN(food) == 0) AND (MAX(food) IS NULL OR MAX(food) == '' OR MAX(food) LIKE ' %' OR MAX(food) == 0) THEN MAX(food)  ELSE 'GOOD' END as food_min_max_compare,
CASE WHEN MIN(gmail)  == MAX( gmail) THEN MAX(gmail) WHEN (MIN(gmail) IS NULL OR MIN(gmail) == '' OR MIN(gmail) LIKE ' %' OR MIN(gmail) == 0) AND (MAX(gmail) IS NULL OR MAX(gmail) == '' OR MAX(gmail) LIKE ' %' OR MAX(gmail) == 0) THEN MAX(gmail)  ELSE 'GOOD' END as gmail_min_max_compare,
CASE WHEN MIN(heff12)  == MAX( heff12) THEN MAX(heff12) WHEN (MIN(heff12) IS NULL OR MIN(heff12) == '' OR MIN(heff12) LIKE ' %' OR MIN(heff12) == 0) AND (MAX(heff12) IS NULL OR MAX(heff12) == '' OR MAX(heff12) LIKE ' %' OR MAX(heff12) == 0) THEN MAX(heff12)  ELSE 'GOOD' END as heff12_min_max_compare,
CASE WHEN MIN(hspay3mo)  == MAX( hspay3mo) THEN MAX(hspay3mo) WHEN (MIN(hspay3mo) IS NULL OR MIN(hspay3mo) == '' OR MIN(hspay3mo) LIKE ' %' OR MIN(hspay3mo) == 0) AND (MAX(hspay3mo) IS NULL OR MAX(hspay3mo) == '' OR MAX(hspay3mo) LIKE ' %' OR MAX(hspay3mo) == 0) THEN MAX(hspay3mo)  ELSE 'GOOD' END as hspay3mo_min_max_compare,
CASE WHEN MIN(hsunctr)  == MAX( hsunctr) THEN MAX(hsunctr) WHEN (MIN(hsunctr) IS NULL OR MIN(hsunctr) == '' OR MIN(hsunctr) LIKE ' %' OR MIN(hsunctr) == 0) AND (MAX(hsunctr) IS NULL OR MAX(hsunctr) == '' OR MAX(hsunctr) LIKE ' %' OR MAX(hsunctr) == 0) THEN MAX(hsunctr)  ELSE 'GOOD' END as hsunctr_min_max_compare,
CASE WHEN MIN(int_ctm3)  == MAX( int_ctm3) THEN MAX(int_ctm3) WHEN (MIN(int_ctm3) IS NULL OR MIN(int_ctm3) == '' OR MIN(int_ctm3) LIKE ' %' OR MIN(int_ctm3) == 0) AND (MAX(int_ctm3) IS NULL OR MAX(int_ctm3) == '' OR MAX(int_ctm3) LIKE ' %' OR MAX(int_ctm3) == 0) THEN MAX(int_ctm3)  ELSE 'GOOD' END as int_ctm3_min_max_compare,
CASE WHEN MIN(int_nodt6)  == MAX( int_nodt6) THEN MAX(int_nodt6) WHEN (MIN(int_nodt6) IS NULL OR MIN(int_nodt6) == '' OR MIN(int_nodt6) LIKE ' %' OR MIN(int_nodt6) == 0) AND (MAX(int_nodt6) IS NULL OR MAX(int_nodt6) == '' OR MAX(int_nodt6) LIKE ' %' OR MAX(int_nodt6) == 0) THEN MAX(int_nodt6)  ELSE 'GOOD' END as int_nodt6_min_max_compare,
CASE WHEN MIN(int_npord)  == MAX( int_npord) THEN MAX(int_npord) WHEN (MIN(int_npord) IS NULL OR MIN(int_npord) == '' OR MIN(int_npord) LIKE ' %' OR MIN(int_npord) == 0) AND (MAX(int_npord) IS NULL OR MAX(int_npord) == '' OR MAX(int_npord) LIKE ' %' OR MAX(int_npord) == 0) THEN MAX(int_npord)  ELSE 'GOOD' END as int_npord_min_max_compare,
CASE WHEN MIN(m1)  == MAX( m1) THEN MAX(m1) WHEN (MIN(m1) IS NULL OR MIN(m1) == '' OR MIN(m1) LIKE ' %' OR MIN(m1) == 0) AND (MAX(m1) IS NULL OR MAX(m1) == '' OR MAX(m1) LIKE ' %' OR MAX(m1) == 0) THEN MAX(m1)  ELSE 'GOOD' END as m1_min_max_compare,
CASE WHEN MIN(m2)  == MAX( m2) THEN MAX(m2) WHEN (MIN(m2) IS NULL OR MIN(m2) == '' OR MIN(m2) LIKE ' %' OR MIN(m2) == 0) AND (MAX(m2) IS NULL OR MAX(m2) == '' OR MAX(m2) LIKE ' %' OR MAX(m2) == 0) THEN MAX(m2)  ELSE 'GOOD' END as m2_min_max_compare,
CASE WHEN MIN(mag24)  == MAX( mag24) THEN MAX(mag24) WHEN (MIN(mag24) IS NULL OR MIN(mag24) == '' OR MIN(mag24) LIKE ' %' OR MIN(mag24) == 0) AND (MAX(mag24) IS NULL OR MAX(mag24) == '' OR MAX(mag24) LIKE ' %' OR MAX(mag24) == 0) THEN MAX(mag24)  ELSE 'GOOD' END as mag24_min_max_compare,
CASE WHEN MIN(max_days_delinq)  == MAX( max_days_delinq) THEN MAX(max_days_delinq) WHEN (MIN(max_days_delinq) IS NULL OR MIN(max_days_delinq) == '' OR MIN(max_days_delinq) LIKE ' %' OR MIN(max_days_delinq) == 0) AND (MAX(max_days_delinq) IS NULL OR MAX(max_days_delinq) == '' OR MAX(max_days_delinq) LIKE ' %' OR MAX(max_days_delinq) == 0) THEN MAX(max_days_delinq)  ELSE 'GOOD' END as max_days_delinq_min_max_compare,
CASE WHEN MIN(mdse)  == MAX( mdse) THEN MAX(mdse) WHEN (MIN(mdse) IS NULL OR MIN(mdse) == '' OR MIN(mdse) LIKE ' %' OR MIN(mdse) == 0) AND (MAX(mdse) IS NULL OR MAX(mdse) == '' OR MAX(mdse) LIKE ' %' OR MAX(mdse) == 0) THEN MAX(mdse)  ELSE 'GOOD' END as mdse_min_max_compare,
CASE WHEN MIN(mdserat)  == MAX( mdserat) THEN MAX(mdserat) WHEN (MIN(mdserat) IS NULL OR MIN(mdserat) == '' OR MIN(mdserat) LIKE ' %' OR MIN(mdserat) == 0) AND (MAX(mdserat) IS NULL OR MAX(mdserat) == '' OR MAX(mdserat) LIKE ' %' OR MAX(mdserat) == 0) THEN MAX(mdserat)  ELSE 'GOOD' END as mdserat_min_max_compare,
CASE WHEN MIN(mdsk)  == MAX( mdsk) THEN MAX(mdsk) WHEN (MIN(mdsk) IS NULL OR MIN(mdsk) == '' OR MIN(mdsk) LIKE ' %' OR MIN(mdsk) == 0) AND (MAX(mdsk) IS NULL OR MAX(mdsk) == '' OR MAX(mdsk) LIKE ' %' OR MAX(mdsk) == 0) THEN MAX(mdsk)  ELSE 'GOOD' END as mdsk_min_max_compare,
CASE WHEN MIN(medprdys)  == MAX( medprdys) THEN MAX(medprdys) WHEN (MIN(medprdys) IS NULL OR MIN(medprdys) == '' OR MIN(medprdys) LIKE ' %' OR MIN(medprdys) == 0) AND (MAX(medprdys) IS NULL OR MAX(medprdys) == '' OR MAX(medprdys) LIKE ' %' OR MAX(medprdys) == 0) THEN MAX(medprdys)  ELSE 'GOOD' END as medprdys_min_max_compare,
CASE WHEN MIN(mer_bs_efforts)  == MAX( mer_bs_efforts) THEN MAX(mer_bs_efforts) WHEN (MIN(mer_bs_efforts) IS NULL OR MIN(mer_bs_efforts) == '' OR MIN(mer_bs_efforts) LIKE ' %' OR MIN(mer_bs_efforts) == 0) AND (MAX(mer_bs_efforts) IS NULL OR MAX(mer_bs_efforts) == '' OR MAX(mer_bs_efforts) LIKE ' %' OR MAX(mer_bs_efforts) == 0) THEN MAX(mer_bs_efforts)  ELSE 'GOOD' END as mer_bs_efforts_min_max_compare,
CASE WHEN MIN(miss)  == MAX( miss) THEN MAX(miss) WHEN (MIN(miss) IS NULL OR MIN(miss) == '' OR MIN(miss) LIKE ' %' OR MIN(miss) == 0) AND (MAX(miss) IS NULL OR MAX(miss) == '' OR MAX(miss) LIKE ' %' OR MAX(miss) == 0) THEN MAX(miss)  ELSE 'GOOD' END as miss_min_max_compare,
CASE WHEN MIN(mrkl_dob)  == MAX( mrkl_dob) THEN MAX(mrkl_dob) WHEN (MIN(mrkl_dob) IS NULL OR MIN(mrkl_dob) == '' OR MIN(mrkl_dob) LIKE ' %' OR MIN(mrkl_dob) == 0) AND (MAX(mrkl_dob) IS NULL OR MAX(mrkl_dob) == '' OR MAX(mrkl_dob) LIKE ' %' OR MAX(mrkl_dob) == 0) THEN MAX(mrkl_dob)  ELSE 'GOOD' END as mrkl_dob_min_max_compare,
CASE WHEN MIN(n_late_fees_2yrs)  == MAX( n_late_fees_2yrs) THEN MAX(n_late_fees_2yrs) WHEN (MIN(n_late_fees_2yrs) IS NULL OR MIN(n_late_fees_2yrs) == '' OR MIN(n_late_fees_2yrs) LIKE ' %' OR MIN(n_late_fees_2yrs) == 0) AND (MAX(n_late_fees_2yrs) IS NULL OR MAX(n_late_fees_2yrs) == '' OR MAX(n_late_fees_2yrs) LIKE ' %' OR MAX(n_late_fees_2yrs) == 0) THEN MAX(n_late_fees_2yrs)  ELSE 'GOOD' END as n_late_fees_2yrs_min_max_compare,
CASE WHEN MIN(n_orders)  == MAX( n_orders) THEN MAX(n_orders) WHEN (MIN(n_orders) IS NULL OR MIN(n_orders) == '' OR MIN(n_orders) LIKE ' %' OR MIN(n_orders) == 0) AND (MAX(n_orders) IS NULL OR MAX(n_orders) == '' OR MAX(n_orders) LIKE ' %' OR MAX(n_orders) == 0) THEN MAX(n_orders)  ELSE 'GOOD' END as n_orders_min_max_compare,
CASE WHEN MIN(navdtoc6m)  == MAX( navdtoc6m) THEN MAX(navdtoc6m) WHEN (MIN(navdtoc6m) IS NULL OR MIN(navdtoc6m) == '' OR MIN(navdtoc6m) LIKE ' %' OR MIN(navdtoc6m) == 0) AND (MAX(navdtoc6m) IS NULL OR MAX(navdtoc6m) == '' OR MAX(navdtoc6m) LIKE ' %' OR MAX(navdtoc6m) == 0) THEN MAX(navdtoc6m)  ELSE 'GOOD' END as navdtoc6m_min_max_compare,
CASE WHEN MIN(navint)  == MAX( navint) THEN MAX(navint) WHEN (MIN(navint) IS NULL OR MIN(navint) == '' OR MIN(navint) LIKE ' %' OR MIN(navint) == 0) AND (MAX(navint) IS NULL OR MAX(navint) == '' OR MAX(navint) LIKE ' %' OR MAX(navint) == 0) THEN MAX(navint)  ELSE 'GOOD' END as navint_min_max_compare,
CASE WHEN MIN(nbch12mo)  == MAX( nbch12mo) THEN MAX(nbch12mo) WHEN (MIN(nbch12mo) IS NULL OR MIN(nbch12mo) == '' OR MIN(nbch12mo) LIKE ' %' OR MIN(nbch12mo) == 0) AND (MAX(nbch12mo) IS NULL OR MAX(nbch12mo) == '' OR MAX(nbch12mo) LIKE ' %' OR MAX(nbch12mo) == 0) THEN MAX(nbch12mo)  ELSE 'GOOD' END as nbch12mo_min_max_compare,
CASE WHEN MIN(nctm9m)  == MAX( nctm9m) THEN MAX(nctm9m) WHEN (MIN(nctm9m) IS NULL OR MIN(nctm9m) == '' OR MIN(nctm9m) LIKE ' %' OR MIN(nctm9m) == 0) AND (MAX(nctm9m) IS NULL OR MAX(nctm9m) == '' OR MAX(nctm9m) LIKE ' %' OR MAX(nctm9m) == 0) THEN MAX(nctm9m)  ELSE 'GOOD' END as nctm9m_min_max_compare,
CASE WHEN MIN(ndays1)  == MAX( ndays1) THEN MAX(ndays1) WHEN (MIN(ndays1) IS NULL OR MIN(ndays1) == '' OR MIN(ndays1) LIKE ' %' OR MIN(ndays1) == 0) AND (MAX(ndays1) IS NULL OR MAX(ndays1) == '' OR MAX(ndays1) LIKE ' %' OR MAX(ndays1) == 0) THEN MAX(ndays1)  ELSE 'GOOD' END as ndays1_min_max_compare,
CASE WHEN MIN(nefft1y)  == MAX( nefft1y) THEN MAX(nefft1y) WHEN (MIN(nefft1y) IS NULL OR MIN(nefft1y) == '' OR MIN(nefft1y) LIKE ' %' OR MIN(nefft1y) == 0) AND (MAX(nefft1y) IS NULL OR MAX(nefft1y) == '' OR MAX(nefft1y) LIKE ' %' OR MAX(nefft1y) == 0) THEN MAX(nefft1y)  ELSE 'GOOD' END as nefft1y_min_max_compare,
CASE WHEN MIN(nefft3m)  == MAX( nefft3m) THEN MAX(nefft3m) WHEN (MIN(nefft3m) IS NULL OR MIN(nefft3m) == '' OR MIN(nefft3m) LIKE ' %' OR MIN(nefft3m) == 0) AND (MAX(nefft3m) IS NULL OR MAX(nefft3m) == '' OR MAX(nefft3m) LIKE ' %' OR MAX(nefft3m) == 0) THEN MAX(nefft3m)  ELSE 'GOOD' END as nefft3m_min_max_compare,
CASE WHEN MIN(nefrat4)  == MAX( nefrat4) THEN MAX(nefrat4) WHEN (MIN(nefrat4) IS NULL OR MIN(nefrat4) == '' OR MIN(nefrat4) LIKE ' %' OR MIN(nefrat4) == 0) AND (MAX(nefrat4) IS NULL OR MAX(nefrat4) == '' OR MAX(nefrat4) LIKE ' %' OR MAX(nefrat4) == 0) THEN MAX(nefrat4)  ELSE 'GOOD' END as nefrat4_min_max_compare,
CASE WHEN MIN(nent24)  == MAX( nent24) THEN MAX(nent24) WHEN (MIN(nent24) IS NULL OR MIN(nent24) == '' OR MIN(nent24) LIKE ' %' OR MIN(nent24) == 0) AND (MAX(nent24) IS NULL OR MAX(nent24) == '' OR MAX(nent24) LIKE ' %' OR MAX(nent24) == 0) THEN MAX(nent24)  ELSE 'GOOD' END as nent24_min_max_compare,
CASE WHEN MIN(non12m)  == MAX( non12m) THEN MAX(non12m) WHEN (MIN(non12m) IS NULL OR MIN(non12m) == '' OR MIN(non12m) LIKE ' %' OR MIN(non12m) == 0) AND (MAX(non12m) IS NULL OR MAX(non12m) == '' OR MAX(non12m) LIKE ' %' OR MAX(non12m) == 0) THEN MAX(non12m)  ELSE 'GOOD' END as non12m_min_max_compare,
CASE WHEN MIN(non6m)  == MAX( non6m) THEN MAX(non6m) WHEN (MIN(non6m) IS NULL OR MIN(non6m) == '' OR MIN(non6m) LIKE ' %' OR MIN(non6m) == 0) AND (MAX(non6m) IS NULL OR MAX(non6m) == '' OR MAX(non6m) LIKE ' %' OR MAX(non6m) == 0) THEN MAX(non6m)  ELSE 'GOOD' END as non6m_min_max_compare,
CASE WHEN MIN(nordslcn)  == MAX( nordslcn) THEN MAX(nordslcn) WHEN (MIN(nordslcn) IS NULL OR MIN(nordslcn) == '' OR MIN(nordslcn) LIKE ' %' OR MIN(nordslcn) == 0) AND (MAX(nordslcn) IS NULL OR MAX(nordslcn) == '' OR MAX(nordslcn) LIKE ' %' OR MAX(nordslcn) == 0) THEN MAX(nordslcn)  ELSE 'GOOD' END as nordslcn_min_max_compare,
CASE WHEN MIN(npavgord)  == MAX( npavgord) THEN MAX(npavgord) WHEN (MIN(npavgord) IS NULL OR MIN(npavgord) == '' OR MIN(npavgord) LIKE ' %' OR MIN(npavgord) == 0) AND (MAX(npavgord) IS NULL OR MAX(npavgord) == '' OR MAX(npavgord) LIKE ' %' OR MAX(npavgord) == 0) THEN MAX(npavgord)  ELSE 'GOOD' END as npavgord_min_max_compare,
CASE WHEN MIN(npcumeft)  == MAX( npcumeft) THEN MAX(npcumeft) WHEN (MIN(npcumeft) IS NULL OR MIN(npcumeft) == '' OR MIN(npcumeft) LIKE ' %' OR MIN(npcumeft) == 0) AND (MAX(npcumeft) IS NULL OR MAX(npcumeft) == '' OR MAX(npcumeft) LIKE ' %' OR MAX(npcumeft) == 0) THEN MAX(npcumeft)  ELSE 'GOOD' END as npcumeft_min_max_compare,
CASE WHEN MIN(npcumwks)  == MAX( npcumwks) THEN MAX(npcumwks) WHEN (MIN(npcumwks) IS NULL OR MIN(npcumwks) == '' OR MIN(npcumwks) LIKE ' %' OR MIN(npcumwks) == 0) AND (MAX(npcumwks) IS NULL OR MAX(npcumwks) == '' OR MAX(npcumwks) LIKE ' %' OR MAX(npcumwks) == 0) THEN MAX(npcumwks)  ELSE 'GOOD' END as npcumwks_min_max_compare,
CASE WHEN MIN(npdol3m)  == MAX( npdol3m) THEN MAX(npdol3m) WHEN (MIN(npdol3m) IS NULL OR MIN(npdol3m) == '' OR MIN(npdol3m) LIKE ' %' OR MIN(npdol3m) == 0) AND (MAX(npdol3m) IS NULL OR MAX(npdol3m) == '' OR MAX(npdol3m) LIKE ' %' OR MAX(npdol3m) == 0) THEN MAX(npdol3m)  ELSE 'GOOD' END as npdol3m_min_max_compare,
CASE WHEN MIN(npdoleft)  == MAX( npdoleft) THEN MAX(npdoleft) WHEN (MIN(npdoleft) IS NULL OR MIN(npdoleft) == '' OR MIN(npdoleft) LIKE ' %' OR MIN(npdoleft) == 0) AND (MAX(npdoleft) IS NULL OR MAX(npdoleft) == '' OR MAX(npdoleft) LIKE ' %' OR MAX(npdoleft) == 0) THEN MAX(npdoleft)  ELSE 'GOOD' END as npdoleft_min_max_compare,
CASE WHEN MIN(npdteff1)  == MAX( npdteff1) THEN MAX(npdteff1) WHEN (MIN(npdteff1) IS NULL OR MIN(npdteff1) == '' OR MIN(npdteff1) LIKE ' %' OR MIN(npdteff1) == 0) AND (MAX(npdteff1) IS NULL OR MAX(npdteff1) == '' OR MAX(npdteff1) LIKE ' %' OR MAX(npdteff1) == 0) THEN MAX(npdteff1)  ELSE 'GOOD' END as npdteff1_min_max_compare,
CASE WHEN MIN(npdttdf)  == MAX( npdttdf) THEN MAX(npdttdf) WHEN (MIN(npdttdf) IS NULL OR MIN(npdttdf) == '' OR MIN(npdttdf) LIKE ' %' OR MIN(npdttdf) == 0) AND (MAX(npdttdf) IS NULL OR MAX(npdttdf) == '' OR MAX(npdttdf) LIKE ' %' OR MAX(npdttdf) == 0) THEN MAX(npdttdf)  ELSE 'GOOD' END as npdttdf_min_max_compare,
CASE WHEN MIN(npdttotp)  == MAX( npdttotp) THEN MAX(npdttotp) WHEN (MIN(npdttotp) IS NULL OR MIN(npdttotp) == '' OR MIN(npdttotp) LIKE ' %' OR MIN(npdttotp) == 0) AND (MAX(npdttotp) IS NULL OR MAX(npdttotp) == '' OR MAX(npdttotp) LIKE ' %' OR MAX(npdttotp) == 0) THEN MAX(npdttotp)  ELSE 'GOOD' END as npdttotp_min_max_compare,
CASE WHEN MIN(npeff1)  == MAX( npeff1) THEN MAX(npeff1) WHEN (MIN(npeff1) IS NULL OR MIN(npeff1) == '' OR MIN(npeff1) LIKE ' %' OR MIN(npeff1) == 0) AND (MAX(npeff1) IS NULL OR MAX(npeff1) == '' OR MAX(npeff1) LIKE ' %' OR MAX(npeff1) == 0) THEN MAX(npeff1)  ELSE 'GOOD' END as npeff1_min_max_compare,
CASE WHEN MIN(npeff6)  == MAX( npeff6) THEN MAX(npeff6) WHEN (MIN(npeff6) IS NULL OR MIN(npeff6) == '' OR MIN(npeff6) LIKE ' %' OR MIN(npeff6) == 0) AND (MAX(npeff6) IS NULL OR MAX(npeff6) == '' OR MAX(npeff6) LIKE ' %' OR MAX(npeff6) == 0) THEN MAX(npeff6)  ELSE 'GOOD' END as npeff6_min_max_compare,
CASE WHEN MIN(npeffslo)  == MAX( npeffslo) THEN MAX(npeffslo) WHEN (MIN(npeffslo) IS NULL OR MIN(npeffslo) == '' OR MIN(npeffslo) LIKE ' %' OR MIN(npeffslo) == 0) AND (MAX(npeffslo) IS NULL OR MAX(npeffslo) == '' OR MAX(npeffslo) LIKE ' %' OR MAX(npeffslo) == 0) THEN MAX(npeffslo)  ELSE 'GOOD' END as npeffslo_min_max_compare,
CASE WHEN MIN(npefslnn)  == MAX( npefslnn) THEN MAX(npefslnn) WHEN (MIN(npefslnn) IS NULL OR MIN(npefslnn) == '' OR MIN(npefslnn) LIKE ' %' OR MIN(npefslnn) == 0) AND (MAX(npefslnn) IS NULL OR MAX(npefslnn) == '' OR MAX(npefslnn) LIKE ' %' OR MAX(npefslnn) == 0) THEN MAX(npefslnn)  ELSE 'GOOD' END as npefslnn_min_max_compare,
CASE WHEN MIN(npnodt1)  == MAX( npnodt1) THEN MAX(npnodt1) WHEN (MIN(npnodt1) IS NULL OR MIN(npnodt1) == '' OR MIN(npnodt1) LIKE ' %' OR MIN(npnodt1) == 0) AND (MAX(npnodt1) IS NULL OR MAX(npnodt1) == '' OR MAX(npnodt1) LIKE ' %' OR MAX(npnodt1) == 0) THEN MAX(npnodt1)  ELSE 'GOOD' END as npnodt1_min_max_compare,
CASE WHEN MIN(npnodt1m)  == MAX( npnodt1m) THEN MAX(npnodt1m) WHEN (MIN(npnodt1m) IS NULL OR MIN(npnodt1m) == '' OR MIN(npnodt1m) LIKE ' %' OR MIN(npnodt1m) == 0) AND (MAX(npnodt1m) IS NULL OR MAX(npnodt1m) == '' OR MAX(npnodt1m) LIKE ' %' OR MAX(npnodt1m) == 0) THEN MAX(npnodt1m)  ELSE 'GOOD' END as npnodt1m_min_max_compare,
CASE WHEN MIN(npnodt3)  == MAX( npnodt3) THEN MAX(npnodt3) WHEN (MIN(npnodt3) IS NULL OR MIN(npnodt3) == '' OR MIN(npnodt3) LIKE ' %' OR MIN(npnodt3) == 0) AND (MAX(npnodt3) IS NULL OR MAX(npnodt3) == '' OR MAX(npnodt3) LIKE ' %' OR MAX(npnodt3) == 0) THEN MAX(npnodt3)  ELSE 'GOOD' END as npnodt3_min_max_compare,
CASE WHEN MIN(npnodt6)  == MAX( npnodt6) THEN MAX(npnodt6) WHEN (MIN(npnodt6) IS NULL OR MIN(npnodt6) == '' OR MIN(npnodt6) LIKE ' %' OR MIN(npnodt6) == 0) AND (MAX(npnodt6) IS NULL OR MAX(npnodt6) == '' OR MAX(npnodt6) LIKE ' %' OR MAX(npnodt6) == 0) THEN MAX(npnodt6)  ELSE 'GOOD' END as npnodt6_min_max_compare,
CASE WHEN MIN(npnonds2)  == MAX( npnonds2) THEN MAX(npnonds2) WHEN (MIN(npnonds2) IS NULL OR MIN(npnonds2) == '' OR MIN(npnonds2) LIKE ' %' OR MIN(npnonds2) == 0) AND (MAX(npnonds2) IS NULL OR MAX(npnonds2) == '' OR MAX(npnonds2) LIKE ' %' OR MAX(npnonds2) == 0) THEN MAX(npnonds2)  ELSE 'GOOD' END as npnonds2_min_max_compare,
CASE WHEN MIN(npnonds3)  == MAX( npnonds3) THEN MAX(npnonds3) WHEN (MIN(npnonds3) IS NULL OR MIN(npnonds3) == '' OR MIN(npnonds3) LIKE ' %' OR MIN(npnonds3) == 0) AND (MAX(npnonds3) IS NULL OR MAX(npnonds3) == '' OR MAX(npnonds3) LIKE ' %' OR MAX(npnonds3) == 0) THEN MAX(npnonds3)  ELSE 'GOOD' END as npnonds3_min_max_compare,
CASE WHEN MIN(npnonms1)  == MAX( npnonms1) THEN MAX(npnonms1) WHEN (MIN(npnonms1) IS NULL OR MIN(npnonms1) == '' OR MIN(npnonms1) LIKE ' %' OR MIN(npnonms1) == 0) AND (MAX(npnonms1) IS NULL OR MAX(npnonms1) == '' OR MAX(npnonms1) LIKE ' %' OR MAX(npnonms1) == 0) THEN MAX(npnonms1)  ELSE 'GOOD' END as npnonms1_min_max_compare,
CASE WHEN MIN(npnonord)  == MAX( npnonord) THEN MAX(npnonord) WHEN (MIN(npnonord) IS NULL OR MIN(npnonord) == '' OR MIN(npnonord) LIKE ' %' OR MIN(npnonord) == 0) AND (MAX(npnonord) IS NULL OR MAX(npnonord) == '' OR MAX(npnonord) LIKE ' %' OR MAX(npnonord) == 0) THEN MAX(npnonord)  ELSE 'GOOD' END as npnonord_min_max_compare,
CASE WHEN MIN(npnonrat)  == MAX( npnonrat) THEN MAX(npnonrat) WHEN (MIN(npnonrat) IS NULL OR MIN(npnonrat) == '' OR MIN(npnonrat) LIKE ' %' OR MIN(npnonrat) == 0) AND (MAX(npnonrat) IS NULL OR MAX(npnonrat) == '' OR MAX(npnonrat) LIKE ' %' OR MAX(npnonrat) == 0) THEN MAX(npnonrat)  ELSE 'GOOD' END as npnonrat_min_max_compare,
CASE WHEN MIN(npnonyrp)  == MAX( npnonyrp) THEN MAX(npnonyrp) WHEN (MIN(npnonyrp) IS NULL OR MIN(npnonyrp) == '' OR MIN(npnonyrp) LIKE ' %' OR MIN(npnonyrp) == 0) AND (MAX(npnonyrp) IS NULL OR MAX(npnonyrp) == '' OR MAX(npnonyrp) LIKE ' %' OR MAX(npnonyrp) == 0) THEN MAX(npnonyrp)  ELSE 'GOOD' END as npnonyrp_min_max_compare,
CASE WHEN MIN(npordys2)  == MAX( npordys2) THEN MAX(npordys2) WHEN (MIN(npordys2) IS NULL OR MIN(npordys2) == '' OR MIN(npordys2) LIKE ' %' OR MIN(npordys2) == 0) AND (MAX(npordys2) IS NULL OR MAX(npordys2) == '' OR MAX(npordys2) LIKE ' %' OR MAX(npordys2) == 0) THEN MAX(npordys2)  ELSE 'GOOD' END as npordys2_min_max_compare,
CASE WHEN MIN(nppchdys)  == MAX( nppchdys) THEN MAX(nppchdys) WHEN (MIN(nppchdys) IS NULL OR MIN(nppchdys) == '' OR MIN(nppchdys) LIKE ' %' OR MIN(nppchdys) == 0) AND (MAX(nppchdys) IS NULL OR MAX(nppchdys) == '' OR MAX(nppchdys) LIKE ' %' OR MAX(nppchdys) == 0) THEN MAX(nppchdys)  ELSE 'GOOD' END as nppchdys_min_max_compare,
CASE WHEN MIN(nppchmos)  == MAX( nppchmos) THEN MAX(nppchmos) WHEN (MIN(nppchmos) IS NULL OR MIN(nppchmos) == '' OR MIN(nppchmos) LIKE ' %' OR MIN(nppchmos) == 0) AND (MAX(nppchmos) IS NULL OR MAX(nppchmos) == '' OR MAX(nppchmos) LIKE ' %' OR MAX(nppchmos) == 0) THEN MAX(nppchmos)  ELSE 'GOOD' END as nppchmos_min_max_compare,
CASE WHEN MIN(nppdsodl)  == MAX( nppdsodl) THEN MAX(nppdsodl) WHEN (MIN(nppdsodl) IS NULL OR MIN(nppdsodl) == '' OR MIN(nppdsodl) LIKE ' %' OR MIN(nppdsodl) == 0) AND (MAX(nppdsodl) IS NULL OR MAX(nppdsodl) == '' OR MAX(nppdsodl) LIKE ' %' OR MAX(nppdsodl) == 0) THEN MAX(nppdsodl)  ELSE 'GOOD' END as nppdsodl_min_max_compare,
CASE WHEN MIN(npprdy1)  == MAX( npprdy1) THEN MAX(npprdy1) WHEN (MIN(npprdy1) IS NULL OR MIN(npprdy1) == '' OR MIN(npprdy1) LIKE ' %' OR MIN(npprdy1) == 0) AND (MAX(npprdy1) IS NULL OR MAX(npprdy1) == '' OR MAX(npprdy1) LIKE ' %' OR MAX(npprdy1) == 0) THEN MAX(npprdy1)  ELSE 'GOOD' END as npprdy1_min_max_compare,
CASE WHEN MIN(npttnt2)  == MAX( npttnt2) THEN MAX(npttnt2) WHEN (MIN(npttnt2) IS NULL OR MIN(npttnt2) == '' OR MIN(npttnt2) LIKE ' %' OR MIN(npttnt2) == 0) AND (MAX(npttnt2) IS NULL OR MAX(npttnt2) == '' OR MAX(npttnt2) LIKE ' %' OR MAX(npttnt2) == 0) THEN MAX(npttnt2)  ELSE 'GOOD' END as npttnt2_min_max_compare,
CASE WHEN MIN(npuncctr)  == MAX( npuncctr) THEN MAX(npuncctr) WHEN (MIN(npuncctr) IS NULL OR MIN(npuncctr) == '' OR MIN(npuncctr) LIKE ' %' OR MIN(npuncctr) == 0) AND (MAX(npuncctr) IS NULL OR MAX(npuncctr) == '' OR MAX(npuncctr) LIKE ' %' OR MAX(npuncctr) == 0) THEN MAX(npuncctr)  ELSE 'GOOD' END as npuncctr_min_max_compare,
CASE WHEN MIN(npvareff)  == MAX( npvareff) THEN MAX(npvareff) WHEN (MIN(npvareff) IS NULL OR MIN(npvareff) == '' OR MIN(npvareff) LIKE ' %' OR MIN(npvareff) == 0) AND (MAX(npvareff) IS NULL OR MAX(npvareff) == '' OR MAX(npvareff) LIKE ' %' OR MAX(npvareff) == 0) THEN MAX(npvareff)  ELSE 'GOOD' END as npvareff_min_max_compare,
CASE WHEN MIN(npvarmag)  == MAX( npvarmag) THEN MAX(npvarmag) WHEN (MIN(npvarmag) IS NULL OR MIN(npvarmag) == '' OR MIN(npvarmag) LIKE ' %' OR MIN(npvarmag) == 0) AND (MAX(npvarmag) IS NULL OR MAX(npvarmag) == '' OR MAX(npvarmag) LIKE ' %' OR MAX(npvarmag) == 0) THEN MAX(npvarmag)  ELSE 'GOOD' END as npvarmag_min_max_compare,
CASE WHEN MIN(npvclrat)  == MAX( npvclrat) THEN MAX(npvclrat) WHEN (MIN(npvclrat) IS NULL OR MIN(npvclrat) == '' OR MIN(npvclrat) LIKE ' %' OR MIN(npvclrat) == 0) AND (MAX(npvclrat) IS NULL OR MAX(npvclrat) == '' OR MAX(npvclrat) LIKE ' %' OR MAX(npvclrat) == 0) THEN MAX(npvclrat)  ELSE 'GOOD' END as npvclrat_min_max_compare,
CASE WHEN MIN(npxpdpd1)  == MAX( npxpdpd1) THEN MAX(npxpdpd1) WHEN (MIN(npxpdpd1) IS NULL OR MIN(npxpdpd1) == '' OR MIN(npxpdpd1) LIKE ' %' OR MIN(npxpdpd1) == 0) AND (MAX(npxpdpd1) IS NULL OR MAX(npxpdpd1) == '' OR MAX(npxpdpd1) LIKE ' %' OR MAX(npxpdpd1) == 0) THEN MAX(npxpdpd1)  ELSE 'GOOD' END as npxpdpd1_min_max_compare,
CASE WHEN MIN(npxpdps3)  == MAX( npxpdps3) THEN MAX(npxpdps3) WHEN (MIN(npxpdps3) IS NULL OR MIN(npxpdps3) == '' OR MIN(npxpdps3) LIKE ' %' OR MIN(npxpdps3) == 0) AND (MAX(npxpdps3) IS NULL OR MAX(npxpdps3) == '' OR MAX(npxpdps3) LIKE ' %' OR MAX(npxpdps3) == 0) THEN MAX(npxpdps3)  ELSE 'GOOD' END as npxpdps3_min_max_compare,
CASE WHEN MIN(nret12ms)  == MAX( nret12ms) THEN MAX(nret12ms) WHEN (MIN(nret12ms) IS NULL OR MIN(nret12ms) == '' OR MIN(nret12ms) LIKE ' %' OR MIN(nret12ms) == 0) AND (MAX(nret12ms) IS NULL OR MAX(nret12ms) == '' OR MAX(nret12ms) LIKE ' %' OR MAX(nret12ms) == 0) THEN MAX(nret12ms)  ELSE 'GOOD' END as nret12ms_min_max_compare,
CASE WHEN MIN(ntran1yr)  == MAX( ntran1yr) THEN MAX(ntran1yr) WHEN (MIN(ntran1yr) IS NULL OR MIN(ntran1yr) == '' OR MIN(ntran1yr) LIKE ' %' OR MIN(ntran1yr) == 0) AND (MAX(ntran1yr) IS NULL OR MAX(ntran1yr) == '' OR MAX(ntran1yr) LIKE ' %' OR MAX(ntran1yr) == 0) THEN MAX(ntran1yr)  ELSE 'GOOD' END as ntran1yr_min_max_compare,
CASE WHEN MIN(num_dlq)  == MAX( num_dlq) THEN MAX(num_dlq) WHEN (MIN(num_dlq) IS NULL OR MIN(num_dlq) == '' OR MIN(num_dlq) LIKE ' %' OR MIN(num_dlq) == 0) AND (MAX(num_dlq) IS NULL OR MAX(num_dlq) == '' OR MAX(num_dlq) LIKE ' %' OR MAX(num_dlq) == 0) THEN MAX(num_dlq)  ELSE 'GOOD' END as num_dlq_min_max_compare,
CASE WHEN MIN(off_ord_dys)  == MAX( off_ord_dys) THEN MAX(off_ord_dys) WHEN (MIN(off_ord_dys) IS NULL OR MIN(off_ord_dys) == '' OR MIN(off_ord_dys) LIKE ' %' OR MIN(off_ord_dys) == 0) AND (MAX(off_ord_dys) IS NULL OR MAX(off_ord_dys) == '' OR MAX(off_ord_dys) LIKE ' %' OR MAX(off_ord_dys) == 0) THEN MAX(off_ord_dys)  ELSE 'GOOD' END as off_ord_dys_min_max_compare,
CASE WHEN MIN(lob9_6mon_ct)  == MAX( lob9_6mon_ct) THEN MAX(lob9_6mon_ct) WHEN (MIN(lob9_6mon_ct) IS NULL OR MIN(lob9_6mon_ct) == '' OR MIN(lob9_6mon_ct) LIKE ' %' OR MIN(lob9_6mon_ct) == 0) AND (MAX(lob9_6mon_ct) IS NULL OR MAX(lob9_6mon_ct) == '' OR MAX(lob9_6mon_ct) LIKE ' %' OR MAX(lob9_6mon_ct) == 0) THEN MAX(lob9_6mon_ct)  ELSE 'GOOD' END as lob9_6mon_ct_min_max_compare,
CASE WHEN MIN(nono_lob9_ct_1yr)  == MAX( nono_lob9_ct_1yr) THEN MAX(nono_lob9_ct_1yr) WHEN (MIN(nono_lob9_ct_1yr) IS NULL OR MIN(nono_lob9_ct_1yr) == '' OR MIN(nono_lob9_ct_1yr) LIKE ' %' OR MIN(nono_lob9_ct_1yr) == 0) AND (MAX(nono_lob9_ct_1yr) IS NULL OR MAX(nono_lob9_ct_1yr) == '' OR MAX(nono_lob9_ct_1yr) LIKE ' %' OR MAX(nono_lob9_ct_1yr) == 0) THEN MAX(nono_lob9_ct_1yr)  ELSE 'GOOD' END as nono_lob9_ct_1yr_min_max_compare,
CASE WHEN MIN(nono_lob9_ct_3mon)  == MAX( nono_lob9_ct_3mon) THEN MAX(nono_lob9_ct_3mon) WHEN (MIN(nono_lob9_ct_3mon) IS NULL OR MIN(nono_lob9_ct_3mon) == '' OR MIN(nono_lob9_ct_3mon) LIKE ' %' OR MIN(nono_lob9_ct_3mon) == 0) AND (MAX(nono_lob9_ct_3mon) IS NULL OR MAX(nono_lob9_ct_3mon) == '' OR MAX(nono_lob9_ct_3mon) LIKE ' %' OR MAX(nono_lob9_ct_3mon) == 0) THEN MAX(nono_lob9_ct_3mon)  ELSE 'GOOD' END as nono_lob9_ct_3mon_min_max_compare,
CASE WHEN MIN(nono_lob9_ct_6mon)  == MAX( nono_lob9_ct_6mon) THEN MAX(nono_lob9_ct_6mon) WHEN (MIN(nono_lob9_ct_6mon) IS NULL OR MIN(nono_lob9_ct_6mon) == '' OR MIN(nono_lob9_ct_6mon) LIKE ' %' OR MIN(nono_lob9_ct_6mon) == 0) AND (MAX(nono_lob9_ct_6mon) IS NULL OR MAX(nono_lob9_ct_6mon) == '' OR MAX(nono_lob9_ct_6mon) LIKE ' %' OR MAX(nono_lob9_ct_6mon) == 0) THEN MAX(nono_lob9_ct_6mon)  ELSE 'GOOD' END as nono_lob9_ct_6mon_min_max_compare,
CASE WHEN MIN(ord12)  == MAX( ord12) THEN MAX(ord12) WHEN (MIN(ord12) IS NULL OR MIN(ord12) == '' OR MIN(ord12) LIKE ' %' OR MIN(ord12) == 0) AND (MAX(ord12) IS NULL OR MAX(ord12) == '' OR MAX(ord12) LIKE ' %' OR MAX(ord12) == 0) THEN MAX(ord12)  ELSE 'GOOD' END as ord12_min_max_compare,
CASE WHEN MIN(ord_1yr_ct)  == MAX( ord_1yr_ct) THEN MAX(ord_1yr_ct) WHEN (MIN(ord_1yr_ct) IS NULL OR MIN(ord_1yr_ct) == '' OR MIN(ord_1yr_ct) LIKE ' %' OR MIN(ord_1yr_ct) == 0) AND (MAX(ord_1yr_ct) IS NULL OR MAX(ord_1yr_ct) == '' OR MAX(ord_1yr_ct) LIKE ' %' OR MAX(ord_1yr_ct) == 0) THEN MAX(ord_1yr_ct)  ELSE 'GOOD' END as ord_1yr_ct_min_max_compare,
CASE WHEN MIN(avg_date_diff)  == MAX( avg_date_diff) THEN MAX(avg_date_diff) WHEN (MIN(avg_date_diff) IS NULL OR MIN(avg_date_diff) == '' OR MIN(avg_date_diff) LIKE ' %' OR MIN(avg_date_diff) == 0) AND (MAX(avg_date_diff) IS NULL OR MAX(avg_date_diff) == '' OR MAX(avg_date_diff) LIKE ' %' OR MAX(avg_date_diff) == 0) THEN MAX(avg_date_diff)  ELSE 'GOOD' END as avg_date_diff_min_max_compare,
CASE WHEN MIN(ord_before_ct)  == MAX( ord_before_ct) THEN MAX(ord_before_ct) WHEN (MIN(ord_before_ct) IS NULL OR MIN(ord_before_ct) == '' OR MIN(ord_before_ct) LIKE ' %' OR MIN(ord_before_ct) == 0) AND (MAX(ord_before_ct) IS NULL OR MAX(ord_before_ct) == '' OR MAX(ord_before_ct) LIKE ' %' OR MAX(ord_before_ct) == 0) THEN MAX(ord_before_ct)  ELSE 'GOOD' END as ord_before_ct_min_max_compare,
CASE WHEN MIN(max_date_diff)  == MAX( max_date_diff) THEN MAX(max_date_diff) WHEN (MIN(max_date_diff) IS NULL OR MIN(max_date_diff) == '' OR MIN(max_date_diff) LIKE ' %' OR MIN(max_date_diff) == 0) AND (MAX(max_date_diff) IS NULL OR MAX(max_date_diff) == '' OR MAX(max_date_diff) LIKE ' %' OR MAX(max_date_diff) == 0) THEN MAX(max_date_diff)  ELSE 'GOOD' END as max_date_diff_min_max_compare,
CASE WHEN MIN(min_date_diff)  == MAX( min_date_diff) THEN MAX(min_date_diff) WHEN (MIN(min_date_diff) IS NULL OR MIN(min_date_diff) == '' OR MIN(min_date_diff) LIKE ' %' OR MIN(min_date_diff) == 0) AND (MAX(min_date_diff) IS NULL OR MAX(min_date_diff) == '' OR MAX(min_date_diff) LIKE ' %' OR MAX(min_date_diff) == 0) THEN MAX(min_date_diff)  ELSE 'GOOD' END as min_date_diff_min_max_compare,
CASE WHEN MIN(ord_3mon_ct)  == MAX( ord_3mon_ct) THEN MAX(ord_3mon_ct) WHEN (MIN(ord_3mon_ct) IS NULL OR MIN(ord_3mon_ct) == '' OR MIN(ord_3mon_ct) LIKE ' %' OR MIN(ord_3mon_ct) == 0) AND (MAX(ord_3mon_ct) IS NULL OR MAX(ord_3mon_ct) == '' OR MAX(ord_3mon_ct) LIKE ' %' OR MAX(ord_3mon_ct) == 0) THEN MAX(ord_3mon_ct)  ELSE 'GOOD' END as ord_3mon_ct_min_max_compare,
CASE WHEN MIN(ord_1yr_amt)  == MAX( ord_1yr_amt) THEN MAX(ord_1yr_amt) WHEN (MIN(ord_1yr_amt) IS NULL OR MIN(ord_1yr_amt) == '' OR MIN(ord_1yr_amt) LIKE ' %' OR MIN(ord_1yr_amt) == 0) AND (MAX(ord_1yr_amt) IS NULL OR MAX(ord_1yr_amt) == '' OR MAX(ord_1yr_amt) LIKE ' %' OR MAX(ord_1yr_amt) == 0) THEN MAX(ord_1yr_amt)  ELSE 'GOOD' END as ord_1yr_amt_min_max_compare,
CASE WHEN MIN(ord_before_amt)  == MAX( ord_before_amt) THEN MAX(ord_before_amt) WHEN (MIN(ord_before_amt) IS NULL OR MIN(ord_before_amt) == '' OR MIN(ord_before_amt) LIKE ' %' OR MIN(ord_before_amt) == 0) AND (MAX(ord_before_amt) IS NULL OR MAX(ord_before_amt) == '' OR MAX(ord_before_amt) LIKE ' %' OR MAX(ord_before_amt) == 0) THEN MAX(ord_before_amt)  ELSE 'GOOD' END as ord_before_amt_min_max_compare,
CASE WHEN MIN(ord_3mon_amt)  == MAX( ord_3mon_amt) THEN MAX(ord_3mon_amt) WHEN (MIN(ord_3mon_amt) IS NULL OR MIN(ord_3mon_amt) == '' OR MIN(ord_3mon_amt) LIKE ' %' OR MIN(ord_3mon_amt) == 0) AND (MAX(ord_3mon_amt) IS NULL OR MAX(ord_3mon_amt) == '' OR MAX(ord_3mon_amt) LIKE ' %' OR MAX(ord_3mon_amt) == 0) THEN MAX(ord_3mon_amt)  ELSE 'GOOD' END as ord_3mon_amt_min_max_compare,
CASE WHEN MIN(ord_6mon_amt)  == MAX( ord_6mon_amt) THEN MAX(ord_6mon_amt) WHEN (MIN(ord_6mon_amt) IS NULL OR MIN(ord_6mon_amt) == '' OR MIN(ord_6mon_amt) LIKE ' %' OR MIN(ord_6mon_amt) == 0) AND (MAX(ord_6mon_amt) IS NULL OR MAX(ord_6mon_amt) == '' OR MAX(ord_6mon_amt) LIKE ' %' OR MAX(ord_6mon_amt) == 0) THEN MAX(ord_6mon_amt)  ELSE 'GOOD' END as ord_6mon_amt_min_max_compare,
CASE WHEN MIN(pay_ratio_1yr)  == MAX( pay_ratio_1yr) THEN MAX(pay_ratio_1yr) WHEN (MIN(pay_ratio_1yr) IS NULL OR MIN(pay_ratio_1yr) == '' OR MIN(pay_ratio_1yr) LIKE ' %' OR MIN(pay_ratio_1yr) == 0) AND (MAX(pay_ratio_1yr) IS NULL OR MAX(pay_ratio_1yr) == '' OR MAX(pay_ratio_1yr) LIKE ' %' OR MAX(pay_ratio_1yr) == 0) THEN MAX(pay_ratio_1yr)  ELSE 'GOOD' END as pay_ratio_1yr_min_max_compare,
CASE WHEN MIN(pay_ratio_bf)  == MAX( pay_ratio_bf) THEN MAX(pay_ratio_bf) WHEN (MIN(pay_ratio_bf) IS NULL OR MIN(pay_ratio_bf) == '' OR MIN(pay_ratio_bf) LIKE ' %' OR MIN(pay_ratio_bf) == 0) AND (MAX(pay_ratio_bf) IS NULL OR MAX(pay_ratio_bf) == '' OR MAX(pay_ratio_bf) LIKE ' %' OR MAX(pay_ratio_bf) == 0) THEN MAX(pay_ratio_bf)  ELSE 'GOOD' END as pay_ratio_bf_min_max_compare,
CASE WHEN MIN(pay_ratio_3mon)  == MAX( pay_ratio_3mon) THEN MAX(pay_ratio_3mon) WHEN (MIN(pay_ratio_3mon) IS NULL OR MIN(pay_ratio_3mon) == '' OR MIN(pay_ratio_3mon) LIKE ' %' OR MIN(pay_ratio_3mon) == 0) AND (MAX(pay_ratio_3mon) IS NULL OR MAX(pay_ratio_3mon) == '' OR MAX(pay_ratio_3mon) LIKE ' %' OR MAX(pay_ratio_3mon) == 0) THEN MAX(pay_ratio_3mon)  ELSE 'GOOD' END as pay_ratio_3mon_min_max_compare,
CASE WHEN MIN(pay_ratio_6mon)  == MAX( pay_ratio_6mon) THEN MAX(pay_ratio_6mon) WHEN (MIN(pay_ratio_6mon) IS NULL OR MIN(pay_ratio_6mon) == '' OR MIN(pay_ratio_6mon) LIKE ' %' OR MIN(pay_ratio_6mon) == 0) AND (MAX(pay_ratio_6mon) IS NULL OR MAX(pay_ratio_6mon) == '' OR MAX(pay_ratio_6mon) LIKE ' %' OR MAX(pay_ratio_6mon) == 0) THEN MAX(pay_ratio_6mon)  ELSE 'GOOD' END as pay_ratio_6mon_min_max_compare,
CASE WHEN MIN(avg_pay_date_diff)  == MAX( avg_pay_date_diff) THEN MAX(avg_pay_date_diff) WHEN (MIN(avg_pay_date_diff) IS NULL OR MIN(avg_pay_date_diff) == '' OR MIN(avg_pay_date_diff) LIKE ' %' OR MIN(avg_pay_date_diff) == 0) AND (MAX(avg_pay_date_diff) IS NULL OR MAX(avg_pay_date_diff) == '' OR MAX(avg_pay_date_diff) LIKE ' %' OR MAX(avg_pay_date_diff) == 0) THEN MAX(avg_pay_date_diff)  ELSE 'GOOD' END as avg_pay_date_diff_min_max_compare,
CASE WHEN MIN(max_pay_date_diff)  == MAX( max_pay_date_diff) THEN MAX(max_pay_date_diff) WHEN (MIN(max_pay_date_diff) IS NULL OR MIN(max_pay_date_diff) == '' OR MIN(max_pay_date_diff) LIKE ' %' OR MIN(max_pay_date_diff) == 0) AND (MAX(max_pay_date_diff) IS NULL OR MAX(max_pay_date_diff) == '' OR MAX(max_pay_date_diff) LIKE ' %' OR MAX(max_pay_date_diff) == 0) THEN MAX(max_pay_date_diff)  ELSE 'GOOD' END as max_pay_date_diff_min_max_compare,
CASE WHEN MIN(trans_src_b_6mon)  == MAX( trans_src_b_6mon) THEN MAX(trans_src_b_6mon) WHEN (MIN(trans_src_b_6mon) IS NULL OR MIN(trans_src_b_6mon) == '' OR MIN(trans_src_b_6mon) LIKE ' %' OR MIN(trans_src_b_6mon) == 0) AND (MAX(trans_src_b_6mon) IS NULL OR MAX(trans_src_b_6mon) == '' OR MAX(trans_src_b_6mon) LIKE ' %' OR MAX(trans_src_b_6mon) == 0) THEN MAX(trans_src_b_6mon)  ELSE 'GOOD' END as trans_src_b_6mon_min_max_compare,
CASE WHEN MIN(trans_src_b_3mon)  == MAX( trans_src_b_3mon) THEN MAX(trans_src_b_3mon) WHEN (MIN(trans_src_b_3mon) IS NULL OR MIN(trans_src_b_3mon) == '' OR MIN(trans_src_b_3mon) LIKE ' %' OR MIN(trans_src_b_3mon) == 0) AND (MAX(trans_src_b_3mon) IS NULL OR MAX(trans_src_b_3mon) == '' OR MAX(trans_src_b_3mon) LIKE ' %' OR MAX(trans_src_b_3mon) == 0) THEN MAX(trans_src_b_3mon)  ELSE 'GOOD' END as trans_src_b_3mon_min_max_compare,
CASE WHEN MIN(trans_src_1_3mon)  == MAX( trans_src_1_3mon) THEN MAX(trans_src_1_3mon) WHEN (MIN(trans_src_1_3mon) IS NULL OR MIN(trans_src_1_3mon) == '' OR MIN(trans_src_1_3mon) LIKE ' %' OR MIN(trans_src_1_3mon) == 0) AND (MAX(trans_src_1_3mon) IS NULL OR MAX(trans_src_1_3mon) == '' OR MAX(trans_src_1_3mon) LIKE ' %' OR MAX(trans_src_1_3mon) == 0) THEN MAX(trans_src_1_3mon)  ELSE 'GOOD' END as trans_src_1_3mon_min_max_compare,
CASE WHEN MIN(trans_src_1_6mon)  == MAX( trans_src_1_6mon) THEN MAX(trans_src_1_6mon) WHEN (MIN(trans_src_1_6mon) IS NULL OR MIN(trans_src_1_6mon) == '' OR MIN(trans_src_1_6mon) LIKE ' %' OR MIN(trans_src_1_6mon) == 0) AND (MAX(trans_src_1_6mon) IS NULL OR MAX(trans_src_1_6mon) == '' OR MAX(trans_src_1_6mon) LIKE ' %' OR MAX(trans_src_1_6mon) == 0) THEN MAX(trans_src_1_6mon)  ELSE 'GOOD' END as trans_src_1_6mon_min_max_compare,
CASE WHEN MIN(nono_ct_1yr)  == MAX( nono_ct_1yr) THEN MAX(nono_ct_1yr) WHEN (MIN(nono_ct_1yr) IS NULL OR MIN(nono_ct_1yr) == '' OR MIN(nono_ct_1yr) LIKE ' %' OR MIN(nono_ct_1yr) == 0) AND (MAX(nono_ct_1yr) IS NULL OR MAX(nono_ct_1yr) == '' OR MAX(nono_ct_1yr) LIKE ' %' OR MAX(nono_ct_1yr) == 0) THEN MAX(nono_ct_1yr)  ELSE 'GOOD' END as nono_ct_1yr_min_max_compare,
CASE WHEN MIN(nono_ct_2yr)  == MAX( nono_ct_2yr) THEN MAX(nono_ct_2yr) WHEN (MIN(nono_ct_2yr) IS NULL OR MIN(nono_ct_2yr) == '' OR MIN(nono_ct_2yr) LIKE ' %' OR MIN(nono_ct_2yr) == 0) AND (MAX(nono_ct_2yr) IS NULL OR MAX(nono_ct_2yr) == '' OR MAX(nono_ct_2yr) LIKE ' %' OR MAX(nono_ct_2yr) == 0) THEN MAX(nono_ct_2yr)  ELSE 'GOOD' END as nono_ct_2yr_min_max_compare,
CASE WHEN MIN(nono_ct_3mon)  == MAX( nono_ct_3mon) THEN MAX(nono_ct_3mon) WHEN (MIN(nono_ct_3mon) IS NULL OR MIN(nono_ct_3mon) == '' OR MIN(nono_ct_3mon) LIKE ' %' OR MIN(nono_ct_3mon) == 0) AND (MAX(nono_ct_3mon) IS NULL OR MAX(nono_ct_3mon) == '' OR MAX(nono_ct_3mon) LIKE ' %' OR MAX(nono_ct_3mon) == 0) THEN MAX(nono_ct_3mon)  ELSE 'GOOD' END as nono_ct_3mon_min_max_compare,
CASE WHEN MIN(paydy2)  == MAX( paydy2) THEN MAX(paydy2) WHEN (MIN(paydy2) IS NULL OR MIN(paydy2) == '' OR MIN(paydy2) LIKE ' %' OR MIN(paydy2) == 0) AND (MAX(paydy2) IS NULL OR MAX(paydy2) == '' OR MAX(paydy2) LIKE ' %' OR MAX(paydy2) == 0) THEN MAX(paydy2)  ELSE 'GOOD' END as paydy2_min_max_compare,
CASE WHEN MIN(pchamos)  == MAX( pchamos) THEN MAX(pchamos) WHEN (MIN(pchamos) IS NULL OR MIN(pchamos) == '' OR MIN(pchamos) LIKE ' %' OR MIN(pchamos) == 0) AND (MAX(pchamos) IS NULL OR MAX(pchamos) == '' OR MAX(pchamos) LIKE ' %' OR MAX(pchamos) == 0) THEN MAX(pchamos)  ELSE 'GOOD' END as pchamos_min_max_compare,
CASE WHEN MIN(pd_doll6)  == MAX( pd_doll6) THEN MAX(pd_doll6) WHEN (MIN(pd_doll6) IS NULL OR MIN(pd_doll6) == '' OR MIN(pd_doll6) LIKE ' %' OR MIN(pd_doll6) == 0) AND (MAX(pd_doll6) IS NULL OR MAX(pd_doll6) == '' OR MAX(pd_doll6) LIKE ' %' OR MAX(pd_doll6) == 0) THEN MAX(pd_doll6)  ELSE 'GOOD' END as pd_doll6_min_max_compare,
CASE WHEN MIN(pdmdsit4yr)  == MAX( pdmdsit4yr) THEN MAX(pdmdsit4yr) WHEN (MIN(pdmdsit4yr) IS NULL OR MIN(pdmdsit4yr) == '' OR MIN(pdmdsit4yr) LIKE ' %' OR MIN(pdmdsit4yr) == 0) AND (MAX(pdmdsit4yr) IS NULL OR MAX(pdmdsit4yr) == '' OR MAX(pdmdsit4yr) LIKE ' %' OR MAX(pdmdsit4yr) == 0) THEN MAX(pdmdsit4yr)  ELSE 'GOOD' END as pdmdsit4yr_min_max_compare,
CASE WHEN MIN(pdollar3_6)  == MAX( pdollar3_6) THEN MAX(pdollar3_6) WHEN (MIN(pdollar3_6) IS NULL OR MIN(pdollar3_6) == '' OR MIN(pdollar3_6) LIKE ' %' OR MIN(pdollar3_6) == 0) AND (MAX(pdollar3_6) IS NULL OR MAX(pdollar3_6) == '' OR MAX(pdollar3_6) LIKE ' %' OR MAX(pdollar3_6) == 0) THEN MAX(pdollar3_6)  ELSE 'GOOD' END as pdollar3_6_min_max_compare,
CASE WHEN MIN(pholtv1)  == MAX( pholtv1) THEN MAX(pholtv1) WHEN (MIN(pholtv1) IS NULL OR MIN(pholtv1) == '' OR MIN(pholtv1) LIKE ' %' OR MIN(pholtv1) == 0) AND (MAX(pholtv1) IS NULL OR MAX(pholtv1) == '' OR MAX(pholtv1) LIKE ' %' OR MAX(pholtv1) == 0) THEN MAX(pholtv1)  ELSE 'GOOD' END as pholtv1_min_max_compare,
CASE WHEN MIN(pnoltv3)  == MAX( pnoltv3) THEN MAX(pnoltv3) WHEN (MIN(pnoltv3) IS NULL OR MIN(pnoltv3) == '' OR MIN(pnoltv3) LIKE ' %' OR MIN(pnoltv3) == 0) AND (MAX(pnoltv3) IS NULL OR MAX(pnoltv3) == '' OR MAX(pnoltv3) LIKE ' %' OR MAX(pnoltv3) == 0) THEN MAX(pnoltv3)  ELSE 'GOOD' END as pnoltv3_min_max_compare,
CASE WHEN MIN(poltv12)  == MAX( poltv12) THEN MAX(poltv12) WHEN (MIN(poltv12) IS NULL OR MIN(poltv12) == '' OR MIN(poltv12) LIKE ' %' OR MIN(poltv12) == 0) AND (MAX(poltv12) IS NULL OR MAX(poltv12) == '' OR MAX(poltv12) LIKE ' %' OR MAX(poltv12) == 0) THEN MAX(poltv12)  ELSE 'GOOD' END as poltv12_min_max_compare,
CASE WHEN MIN(poltv3)  == MAX( poltv3) THEN MAX(poltv3) WHEN (MIN(poltv3) IS NULL OR MIN(poltv3) == '' OR MIN(poltv3) LIKE ' %' OR MIN(poltv3) == 0) AND (MAX(poltv3) IS NULL OR MAX(poltv3) == '' OR MAX(poltv3) LIKE ' %' OR MAX(poltv3) == 0) THEN MAX(poltv3)  ELSE 'GOOD' END as poltv3_min_max_compare,
CASE WHEN MIN(ptdbtt13)  == MAX( ptdbtt13) THEN MAX(ptdbtt13) WHEN (MIN(ptdbtt13) IS NULL OR MIN(ptdbtt13) == '' OR MIN(ptdbtt13) LIKE ' %' OR MIN(ptdbtt13) == 0) AND (MAX(ptdbtt13) IS NULL OR MAX(ptdbtt13) == '' OR MAX(ptdbtt13) LIKE ' %' OR MAX(ptdbtt13) == 0) THEN MAX(ptdbtt13)  ELSE 'GOOD' END as ptdbtt13_min_max_compare,
CASE WHEN MIN(ptdbtt7)  == MAX( ptdbtt7) THEN MAX(ptdbtt7) WHEN (MIN(ptdbtt7) IS NULL OR MIN(ptdbtt7) == '' OR MIN(ptdbtt7) LIKE ' %' OR MIN(ptdbtt7) == 0) AND (MAX(ptdbtt7) IS NULL OR MAX(ptdbtt7) == '' OR MAX(ptdbtt7) LIKE ' %' OR MAX(ptdbtt7) == 0) THEN MAX(ptdbtt7)  ELSE 'GOOD' END as ptdbtt7_min_max_compare,
CASE WHEN MIN(pure_mer_eff_ct)  == MAX( pure_mer_eff_ct) THEN MAX(pure_mer_eff_ct) WHEN (MIN(pure_mer_eff_ct) IS NULL OR MIN(pure_mer_eff_ct) == '' OR MIN(pure_mer_eff_ct) LIKE ' %' OR MIN(pure_mer_eff_ct) == 0) AND (MAX(pure_mer_eff_ct) IS NULL OR MAX(pure_mer_eff_ct) == '' OR MAX(pure_mer_eff_ct) LIKE ' %' OR MAX(pure_mer_eff_ct) == 0) THEN MAX(pure_mer_eff_ct)  ELSE 'GOOD' END as pure_mer_eff_ct_min_max_compare,
CASE WHEN MIN(quat1_np_eff)  == MAX( quat1_np_eff) THEN MAX(quat1_np_eff) WHEN (MIN(quat1_np_eff) IS NULL OR MIN(quat1_np_eff) == '' OR MIN(quat1_np_eff) LIKE ' %' OR MIN(quat1_np_eff) == 0) AND (MAX(quat1_np_eff) IS NULL OR MAX(quat1_np_eff) == '' OR MAX(quat1_np_eff) LIKE ' %' OR MAX(quat1_np_eff) == 0) THEN MAX(quat1_np_eff)  ELSE 'GOOD' END as quat1_np_eff_min_max_compare,
CASE WHEN MIN(quat1_rat_hs_rev)  == MAX( quat1_rat_hs_rev) THEN MAX(quat1_rat_hs_rev) WHEN (MIN(quat1_rat_hs_rev) IS NULL OR MIN(quat1_rat_hs_rev) == '' OR MIN(quat1_rat_hs_rev) LIKE ' %' OR MIN(quat1_rat_hs_rev) == 0) AND (MAX(quat1_rat_hs_rev) IS NULL OR MAX(quat1_rat_hs_rev) == '' OR MAX(quat1_rat_hs_rev) LIKE ' %' OR MAX(quat1_rat_hs_rev) == 0) THEN MAX(quat1_rat_hs_rev)  ELSE 'GOOD' END as quat1_rat_hs_rev_min_max_compare,
CASE WHEN MIN(quat2_tt_rev)  == MAX( quat2_tt_rev) THEN MAX(quat2_tt_rev) WHEN (MIN(quat2_tt_rev) IS NULL OR MIN(quat2_tt_rev) == '' OR MIN(quat2_tt_rev) LIKE ' %' OR MIN(quat2_tt_rev) == 0) AND (MAX(quat2_tt_rev) IS NULL OR MAX(quat2_tt_rev) == '' OR MAX(quat2_tt_rev) LIKE ' %' OR MAX(quat2_tt_rev) == 0) THEN MAX(quat2_tt_rev)  ELSE 'GOOD' END as quat2_tt_rev_min_max_compare,
CASE WHEN MIN(quat3_hs_eff)  == MAX( quat3_hs_eff) THEN MAX(quat3_hs_eff) WHEN (MIN(quat3_hs_eff) IS NULL OR MIN(quat3_hs_eff) == '' OR MIN(quat3_hs_eff) LIKE ' %' OR MIN(quat3_hs_eff) == 0) AND (MAX(quat3_hs_eff) IS NULL OR MAX(quat3_hs_eff) == '' OR MAX(quat3_hs_eff) LIKE ' %' OR MAX(quat3_hs_eff) == 0) THEN MAX(quat3_hs_eff)  ELSE 'GOOD' END as quat3_hs_eff_min_max_compare,
CASE WHEN MIN(qut1)  == MAX( qut1) THEN MAX(qut1) WHEN (MIN(qut1) IS NULL OR MIN(qut1) == '' OR MIN(qut1) LIKE ' %' OR MIN(qut1) == 0) AND (MAX(qut1) IS NULL OR MAX(qut1) == '' OR MAX(qut1) LIKE ' %' OR MAX(qut1) == 0) THEN MAX(qut1)  ELSE 'GOOD' END as qut1_min_max_compare,
CASE WHEN MIN(rgm6)  == MAX( rgm6) THEN MAX(rgm6) WHEN (MIN(rgm6) IS NULL OR MIN(rgm6) == '' OR MIN(rgm6) LIKE ' %' OR MIN(rgm6) == 0) AND (MAX(rgm6) IS NULL OR MAX(rgm6) == '' OR MAX(rgm6) LIKE ' %' OR MAX(rgm6) == 0) THEN MAX(rgm6)  ELSE 'GOOD' END as rgm6_min_max_compare,
CASE WHEN MIN(rtacor612)  == MAX( rtacor612) THEN MAX(rtacor612) WHEN (MIN(rtacor612) IS NULL OR MIN(rtacor612) == '' OR MIN(rtacor612) LIKE ' %' OR MIN(rtacor612) == 0) AND (MAX(rtacor612) IS NULL OR MAX(rtacor612) == '' OR MAX(rtacor612) LIKE ' %' OR MAX(rtacor612) == 0) THEN MAX(rtacor612)  ELSE 'GOOD' END as rtacor612_min_max_compare,
CASE WHEN MIN(scan1y)  == MAX( scan1y) THEN MAX(scan1y) WHEN (MIN(scan1y) IS NULL OR MIN(scan1y) == '' OR MIN(scan1y) LIKE ' %' OR MIN(scan1y) == 0) AND (MAX(scan1y) IS NULL OR MAX(scan1y) == '' OR MAX(scan1y) LIKE ' %' OR MAX(scan1y) == 0) THEN MAX(scan1y)  ELSE 'GOOD' END as scan1y_min_max_compare,
CASE WHEN MIN(scq_hs_eff)  == MAX( scq_hs_eff) THEN MAX(scq_hs_eff) WHEN (MIN(scq_hs_eff) IS NULL OR MIN(scq_hs_eff) == '' OR MIN(scq_hs_eff) LIKE ' %' OR MIN(scq_hs_eff) == 0) AND (MAX(scq_hs_eff) IS NULL OR MAX(scq_hs_eff) == '' OR MAX(scq_hs_eff) LIKE ' %' OR MAX(scq_hs_eff) == 0) THEN MAX(scq_hs_eff)  ELSE 'GOOD' END as scq_hs_eff_min_max_compare,
CASE WHEN MIN(scq_np_rat)  == MAX( scq_np_rat) THEN MAX(scq_np_rat) WHEN (MIN(scq_np_rat) IS NULL OR MIN(scq_np_rat) == '' OR MIN(scq_np_rat) LIKE ' %' OR MIN(scq_np_rat) == 0) AND (MAX(scq_np_rat) IS NULL OR MAX(scq_np_rat) == '' OR MAX(scq_np_rat) LIKE ' %' OR MAX(scq_np_rat) == 0) THEN MAX(scq_np_rat)  ELSE 'GOOD' END as scq_np_rat_min_max_compare,
CASE WHEN MIN(scqq_tt_ent)  == MAX( scqq_tt_ent) THEN MAX(scqq_tt_ent) WHEN (MIN(scqq_tt_ent) IS NULL OR MIN(scqq_tt_ent) == '' OR MIN(scqq_tt_ent) LIKE ' %' OR MIN(scqq_tt_ent) == 0) AND (MAX(scqq_tt_ent) IS NULL OR MAX(scqq_tt_ent) == '' OR MAX(scqq_tt_ent) LIKE ' %' OR MAX(scqq_tt_ent) == 0) THEN MAX(scqq_tt_ent)  ELSE 'GOOD' END as scqq_tt_ent_min_max_compare,
CASE WHEN MIN(sefft3m)  == MAX( sefft3m) THEN MAX(sefft3m) WHEN (MIN(sefft3m) IS NULL OR MIN(sefft3m) == '' OR MIN(sefft3m) LIKE ' %' OR MIN(sefft3m) == 0) AND (MAX(sefft3m) IS NULL OR MAX(sefft3m) == '' OR MAX(sefft3m) LIKE ' %' OR MAX(sefft3m) == 0) THEN MAX(sefft3m)  ELSE 'GOOD' END as sefft3m_min_max_compare,
CASE WHEN MIN(sefft9m)  == MAX( sefft9m) THEN MAX(sefft9m) WHEN (MIN(sefft9m) IS NULL OR MIN(sefft9m) == '' OR MIN(sefft9m) LIKE ' %' OR MIN(sefft9m) == 0) AND (MAX(sefft9m) IS NULL OR MAX(sefft9m) == '' OR MAX(sefft9m) LIKE ' %' OR MAX(sefft9m) == 0) THEN MAX(sefft9m)  ELSE 'GOOD' END as sefft9m_min_max_compare,
CASE WHEN MIN(sefrat1)  == MAX( sefrat1) THEN MAX(sefrat1) WHEN (MIN(sefrat1) IS NULL OR MIN(sefrat1) == '' OR MIN(sefrat1) LIKE ' %' OR MIN(sefrat1) == 0) AND (MAX(sefrat1) IS NULL OR MAX(sefrat1) == '' OR MAX(sefrat1) LIKE ' %' OR MAX(sefrat1) == 0) THEN MAX(sefrat1)  ELSE 'GOOD' END as sefrat1_min_max_compare,
CASE WHEN MIN(sefrat4)  == MAX( sefrat4) THEN MAX(sefrat4) WHEN (MIN(sefrat4) IS NULL OR MIN(sefrat4) == '' OR MIN(sefrat4) LIKE ' %' OR MIN(sefrat4) == 0) AND (MAX(sefrat4) IS NULL OR MAX(sefrat4) == '' OR MAX(sefrat4) LIKE ' %' OR MAX(sefrat4) == 0) THEN MAX(sefrat4)  ELSE 'GOOD' END as sefrat4_min_max_compare,
CASE WHEN MIN(selection_dt)  == MAX( selection_dt) THEN MAX(selection_dt) WHEN (MIN(selection_dt) IS NULL OR MIN(selection_dt) == '' OR MIN(selection_dt) LIKE ' %' OR MIN(selection_dt) == 0) AND (MAX(selection_dt) IS NULL OR MAX(selection_dt) == '' OR MAX(selection_dt) LIKE ' %' OR MAX(selection_dt) == 0) THEN MAX(selection_dt)  ELSE 'GOOD' END as selection_dt_min_max_compare,
CASE WHEN MIN(snono3m)  == MAX( snono3m) THEN MAX(snono3m) WHEN (MIN(snono3m) IS NULL OR MIN(snono3m) == '' OR MIN(snono3m) LIKE ' %' OR MIN(snono3m) == 0) AND (MAX(snono3m) IS NULL OR MAX(snono3m) == '' OR MAX(snono3m) LIKE ' %' OR MAX(snono3m) == 0) THEN MAX(snono3m)  ELSE 'GOOD' END as snono3m_min_max_compare,
CASE WHEN MIN(tavgord1)  == MAX( tavgord1) THEN MAX(tavgord1) WHEN (MIN(tavgord1) IS NULL OR MIN(tavgord1) == '' OR MIN(tavgord1) LIKE ' %' OR MIN(tavgord1) == 0) AND (MAX(tavgord1) IS NULL OR MAX(tavgord1) == '' OR MAX(tavgord1) LIKE ' %' OR MAX(tavgord1) == 0) THEN MAX(tavgord1)  ELSE 'GOOD' END as tavgord1_min_max_compare,
CASE WHEN MIN(tdays1)  == MAX( tdays1) THEN MAX(tdays1) WHEN (MIN(tdays1) IS NULL OR MIN(tdays1) == '' OR MIN(tdays1) LIKE ' %' OR MIN(tdays1) == 0) AND (MAX(tdays1) IS NULL OR MAX(tdays1) == '' OR MAX(tdays1) LIKE ' %' OR MAX(tdays1) == 0) THEN MAX(tdays1)  ELSE 'GOOD' END as tdays1_min_max_compare,
CASE WHEN MIN(tdays2)  == MAX( tdays2) THEN MAX(tdays2) WHEN (MIN(tdays2) IS NULL OR MIN(tdays2) == '' OR MIN(tdays2) LIKE ' %' OR MIN(tdays2) == 0) AND (MAX(tdays2) IS NULL OR MAX(tdays2) == '' OR MAX(tdays2) LIKE ' %' OR MAX(tdays2) == 0) THEN MAX(tdays2)  ELSE 'GOOD' END as tdays2_min_max_compare,
CASE WHEN MIN(tdays3)  == MAX( tdays3) THEN MAX(tdays3) WHEN (MIN(tdays3) IS NULL OR MIN(tdays3) == '' OR MIN(tdays3) LIKE ' %' OR MIN(tdays3) == 0) AND (MAX(tdays3) IS NULL OR MAX(tdays3) == '' OR MAX(tdays3) LIKE ' %' OR MAX(tdays3) == 0) THEN MAX(tdays3)  ELSE 'GOOD' END as tdays3_min_max_compare,
CASE WHEN MIN(tlpchmos)  == MAX( tlpchmos) THEN MAX(tlpchmos) WHEN (MIN(tlpchmos) IS NULL OR MIN(tlpchmos) == '' OR MIN(tlpchmos) LIKE ' %' OR MIN(tlpchmos) == 0) AND (MAX(tlpchmos) IS NULL OR MAX(tlpchmos) == '' OR MAX(tlpchmos) LIKE ' %' OR MAX(tlpchmos) == 0) THEN MAX(tlpchmos)  ELSE 'GOOD' END as tlpchmos_min_max_compare,
CASE WHEN MIN(tononrat)  == MAX( tononrat) THEN MAX(tononrat) WHEN (MIN(tononrat) IS NULL OR MIN(tononrat) == '' OR MIN(tononrat) LIKE ' %' OR MIN(tononrat) == 0) AND (MAX(tononrat) IS NULL OR MAX(tononrat) == '' OR MAX(tononrat) LIKE ' %' OR MAX(tononrat) == 0) THEN MAX(tononrat)  ELSE 'GOOD' END as tononrat_min_max_compare,
CASE WHEN MIN(tordint)  == MAX( tordint) THEN MAX(tordint) WHEN (MIN(tordint) IS NULL OR MIN(tordint) == '' OR MIN(tordint) LIKE ' %' OR MIN(tordint) == 0) AND (MAX(tordint) IS NULL OR MAX(tordint) == '' OR MAX(tordint) LIKE ' %' OR MAX(tordint) == 0) THEN MAX(tordint)  ELSE 'GOOD' END as tordint_min_max_compare,
CASE WHEN MIN(total_paid_amount_last_7days)  == MAX( total_paid_amount_last_7days) THEN MAX(total_paid_amount_last_7days) WHEN (MIN(total_paid_amount_last_7days) IS NULL OR MIN(total_paid_amount_last_7days) == '' OR MIN(total_paid_amount_last_7days) LIKE ' %' OR MIN(total_paid_amount_last_7days) == 0) AND (MAX(total_paid_amount_last_7days) IS NULL OR MAX(total_paid_amount_last_7days) == '' OR MAX(total_paid_amount_last_7days) LIKE ' %' OR MAX(total_paid_amount_last_7days) == 0) THEN MAX(total_paid_amount_last_7days)  ELSE 'GOOD' END as total_paid_amount_last_7days_min_max_compare,
CASE WHEN MIN(totbyr1)  == MAX( totbyr1) THEN MAX(totbyr1) WHEN (MIN(totbyr1) IS NULL OR MIN(totbyr1) == '' OR MIN(totbyr1) LIKE ' %' OR MIN(totbyr1) == 0) AND (MAX(totbyr1) IS NULL OR MAX(totbyr1) == '' OR MAX(totbyr1) LIKE ' %' OR MAX(totbyr1) == 0) THEN MAX(totbyr1)  ELSE 'GOOD' END as totbyr1_min_max_compare,
CASE WHEN MIN(totdt1)  == MAX( totdt1) THEN MAX(totdt1) WHEN (MIN(totdt1) IS NULL OR MIN(totdt1) == '' OR MIN(totdt1) LIKE ' %' OR MIN(totdt1) == 0) AND (MAX(totdt1) IS NULL OR MAX(totdt1) == '' OR MAX(totdt1) LIKE ' %' OR MAX(totdt1) == 0) THEN MAX(totdt1)  ELSE 'GOOD' END as totdt1_min_max_compare,
CASE WHEN MIN(totdt3)  == MAX( totdt3) THEN MAX(totdt3) WHEN (MIN(totdt3) IS NULL OR MIN(totdt3) == '' OR MIN(totdt3) LIKE ' %' OR MIN(totdt3) == 0) AND (MAX(totdt3) IS NULL OR MAX(totdt3) == '' OR MAX(totdt3) LIKE ' %' OR MAX(totdt3) == 0) THEN MAX(totdt3)  ELSE 'GOOD' END as totdt3_min_max_compare,
CASE WHEN MIN(totnph6)  == MAX( totnph6) THEN MAX(totnph6) WHEN (MIN(totnph6) IS NULL OR MIN(totnph6) == '' OR MIN(totnph6) LIKE ' %' OR MIN(totnph6) == 0) AND (MAX(totnph6) IS NULL OR MAX(totnph6) == '' OR MAX(totnph6) LIKE ' %' OR MAX(totnph6) == 0) THEN MAX(totnph6)  ELSE 'GOOD' END as totnph6_min_max_compare,
CASE WHEN MIN(tprd3)  == MAX( tprd3) THEN MAX(tprd3) WHEN (MIN(tprd3) IS NULL OR MIN(tprd3) == '' OR MIN(tprd3) LIKE ' %' OR MIN(tprd3) == 0) AND (MAX(tprd3) IS NULL OR MAX(tprd3) == '' OR MAX(tprd3) LIKE ' %' OR MAX(tprd3) == 0) THEN MAX(tprd3)  ELSE 'GOOD' END as tprd3_min_max_compare,
CASE WHEN MIN(trdys5)  == MAX( trdys5) THEN MAX(trdys5) WHEN (MIN(trdys5) IS NULL OR MIN(trdys5) == '' OR MIN(trdys5) LIKE ' %' OR MIN(trdys5) == 0) AND (MAX(trdys5) IS NULL OR MAX(trdys5) == '' OR MAX(trdys5) LIKE ' %' OR MAX(trdys5) == 0) THEN MAX(trdys5)  ELSE 'GOOD' END as trdys5_min_max_compare,
CASE WHEN MIN(uncctr)  == MAX( uncctr) THEN MAX(uncctr) WHEN (MIN(uncctr) IS NULL OR MIN(uncctr) == '' OR MIN(uncctr) LIKE ' %' OR MIN(uncctr) == 0) AND (MAX(uncctr) IS NULL OR MAX(uncctr) == '' OR MAX(uncctr) LIKE ' %' OR MAX(uncctr) == 0) THEN MAX(uncctr)  ELSE 'GOOD' END as uncctr_min_max_compare,
CASE WHEN MIN(unefrat)  == MAX( unefrat) THEN MAX(unefrat) WHEN (MIN(unefrat) IS NULL OR MIN(unefrat) == '' OR MIN(unefrat) LIKE ' %' OR MIN(unefrat) == 0) AND (MAX(unefrat) IS NULL OR MAX(unefrat) == '' OR MAX(unefrat) LIKE ' %' OR MAX(unefrat) == 0) THEN MAX(unefrat)  ELSE 'GOOD' END as unefrat_min_max_compare,
CASE WHEN MIN(vars601)  == MAX( vars601) THEN MAX(vars601) WHEN (MIN(vars601) IS NULL OR MIN(vars601) == '' OR MIN(vars601) LIKE ' %' OR MIN(vars601) == 0) AND (MAX(vars601) IS NULL OR MAX(vars601) == '' OR MAX(vars601) LIKE ' %' OR MAX(vars601) == 0) THEN MAX(vars601)  ELSE 'GOOD' END as vars601_min_max_compare,
CASE WHEN MIN(xplcdys1)  == MAX( xplcdys1) THEN MAX(xplcdys1) WHEN (MIN(xplcdys1) IS NULL OR MIN(xplcdys1) == '' OR MIN(xplcdys1) LIKE ' %' OR MIN(xplcdys1) == 0) AND (MAX(xplcdys1) IS NULL OR MAX(xplcdys1) == '' OR MAX(xplcdys1) LIKE ' %' OR MAX(xplcdys1) == 0) THEN MAX(xplcdys1)  ELSE 'GOOD' END as xplcdys1_min_max_compare,
CASE WHEN MIN(zint)  == MAX( zint) THEN MAX(zint) WHEN (MIN(zint) IS NULL OR MIN(zint) == '' OR MIN(zint) LIKE ' %' OR MIN(zint) == 0) AND (MAX(zint) IS NULL OR MAX(zint) == '' OR MAX(zint) LIKE ' %' OR MAX(zint) == 0) THEN MAX(zint)  ELSE 'GOOD' END as zint_min_max_compare,
CASE WHEN MIN(zopen_no_payment)  == MAX( zopen_no_payment) THEN MAX(zopen_no_payment) WHEN (MIN(zopen_no_payment) IS NULL OR MIN(zopen_no_payment) == '' OR MIN(zopen_no_payment) LIKE ' %' OR MIN(zopen_no_payment) == 0) AND (MAX(zopen_no_payment) IS NULL OR MAX(zopen_no_payment) == '' OR MAX(zopen_no_payment) LIKE ' %' OR MAX(zopen_no_payment) == 0) THEN MAX(zopen_no_payment)  ELSE 'GOOD' END as zopen_no_payment_min_max_compare,
CASE WHEN MIN(ztvgint)  == MAX( ztvgint) THEN MAX(ztvgint) WHEN (MIN(ztvgint) IS NULL OR MIN(ztvgint) == '' OR MIN(ztvgint) LIKE ' %' OR MIN(ztvgint) == 0) AND (MAX(ztvgint) IS NULL OR MAX(ztvgint) == '' OR MAX(ztvgint) LIKE ' %' OR MAX(ztvgint) == 0) THEN MAX(ztvgint)  ELSE 'GOOD' END as ztvgint_min_max_compare,
CASE WHEN MIN(week)  == MAX( week) THEN MAX(week) WHEN (MIN(week) IS NULL OR MIN(week) == '' OR MIN(week) LIKE ' %' OR MIN(week) == 0) AND (MAX(week) IS NULL OR MAX(week) == '' OR MAX(week) LIKE ' %' OR MAX(week) == 0) THEN MAX(week)  ELSE 'GOOD' END as week_min_max_compare,
CASE WHEN MIN(delivery_week)  == MAX( delivery_week) THEN MAX(delivery_week) WHEN (MIN(delivery_week) IS NULL OR MIN(delivery_week) == '' OR MIN(delivery_week) LIKE ' %' OR MIN(delivery_week) == 0) AND (MAX(delivery_week) IS NULL OR MAX(delivery_week) == '' OR MAX(delivery_week) LIKE ' %' OR MAX(delivery_week) == 0) THEN MAX(delivery_week)  ELSE 'GOOD' END as delivery_week_min_max_compare,
CASE WHEN MIN(mailid)  == MAX( mailid) THEN MAX(mailid) WHEN (MIN(mailid) IS NULL OR MIN(mailid) == '' OR MIN(mailid) LIKE ' %' OR MIN(mailid) == 0) AND (MAX(mailid) IS NULL OR MAX(mailid) == '' OR MAX(mailid) LIKE ' %' OR MAX(mailid) == 0) THEN MAX(mailid)  ELSE 'GOOD' END as mailid_min_max_compare,
CASE WHEN MIN(volume)  == MAX( volume) THEN MAX(volume) WHEN (MIN(volume) IS NULL OR MIN(volume) == '' OR MIN(volume) LIKE ' %' OR MIN(volume) == 0) AND (MAX(volume) IS NULL OR MAX(volume) == '' OR MAX(volume) LIKE ' %' OR MAX(volume) == 0) THEN MAX(volume)  ELSE 'GOOD' END as volume_min_max_compare,
CASE WHEN MIN(pull)  == MAX( pull) THEN MAX(pull) WHEN (MIN(pull) IS NULL OR MIN(pull) == '' OR MIN(pull) LIKE ' %' OR MIN(pull) == 0) AND (MAX(pull) IS NULL OR MAX(pull) == '' OR MAX(pull) LIKE ' %' OR MAX(pull) == 0) THEN MAX(pull)  ELSE 'GOOD' END as pull_min_max_compare,
CASE WHEN MIN(main_mail)  == MAX( main_mail) THEN MAX(main_mail) WHEN (MIN(main_mail) IS NULL OR MIN(main_mail) == '' OR MIN(main_mail) LIKE ' %' OR MIN(main_mail) == 0) AND (MAX(main_mail) IS NULL OR MAX(main_mail) == '' OR MAX(main_mail) LIKE ' %' OR MAX(main_mail) == 0) THEN MAX(main_mail)  ELSE 'GOOD' END as main_mail_min_max_compare,
CASE WHEN MIN(fourc)  == MAX( fourc) THEN MAX(fourc) WHEN (MIN(fourc) IS NULL OR MIN(fourc) == '' OR MIN(fourc) LIKE ' %' OR MIN(fourc) == 0) AND (MAX(fourc) IS NULL OR MAX(fourc) == '' OR MAX(fourc) LIKE ' %' OR MAX(fourc) == 0) THEN MAX(fourc)  ELSE 'GOOD' END as fourc_min_max_compare,
CASE WHEN MIN(mid_high_price)  == MAX( mid_high_price) THEN MAX(mid_high_price) WHEN (MIN(mid_high_price) IS NULL OR MIN(mid_high_price) == '' OR MIN(mid_high_price) LIKE ' %' OR MIN(mid_high_price) == 0) AND (MAX(mid_high_price) IS NULL OR MAX(mid_high_price) == '' OR MAX(mid_high_price) LIKE ' %' OR MAX(mid_high_price) == 0) THEN MAX(mid_high_price)  ELSE 'GOOD' END as mid_high_price_min_max_compare,
CASE WHEN MIN(multiflyer)  == MAX( multiflyer) THEN MAX(multiflyer) WHEN (MIN(multiflyer) IS NULL OR MIN(multiflyer) == '' OR MIN(multiflyer) LIKE ' %' OR MIN(multiflyer) == 0) AND (MAX(multiflyer) IS NULL OR MAX(multiflyer) == '' OR MAX(multiflyer) LIKE ' %' OR MAX(multiflyer) == 0) THEN MAX(multiflyer)  ELSE 'GOOD' END as multiflyer_min_max_compare,
CASE WHEN MIN(ti)  == MAX( ti) THEN MAX(ti) WHEN (MIN(ti) IS NULL OR MIN(ti) == '' OR MIN(ti) LIKE ' %' OR MIN(ti) == 0) AND (MAX(ti) IS NULL OR MAX(ti) == '' OR MAX(ti) LIKE ' %' OR MAX(ti) == 0) THEN MAX(ti)  ELSE 'GOOD' END as ti_min_max_compare,
CASE WHEN MIN(tv)  == MAX( tv) THEN MAX(tv) WHEN (MIN(tv) IS NULL OR MIN(tv) == '' OR MIN(tv) LIKE ' %' OR MIN(tv) == 0) AND (MAX(tv) IS NULL OR MAX(tv) == '' OR MAX(tv) LIKE ' %' OR MAX(tv) == 0) THEN MAX(tv)  ELSE 'GOOD' END as tv_min_max_compare,
CASE WHEN MIN(x_mailing)  == MAX( x_mailing) THEN MAX(x_mailing) WHEN (MIN(x_mailing) IS NULL OR MIN(x_mailing) == '' OR MIN(x_mailing) LIKE ' %' OR MIN(x_mailing) == 0) AND (MAX(x_mailing) IS NULL OR MAX(x_mailing) == '' OR MAX(x_mailing) LIKE ' %' OR MAX(x_mailing) == 0) THEN MAX(x_mailing)  ELSE 'GOOD' END as x_mailing_min_max_compare,
CASE WHEN MIN(gm)  == MAX( gm) THEN MAX(gm) WHEN (MIN(gm) IS NULL OR MIN(gm) == '' OR MIN(gm) LIKE ' %' OR MIN(gm) == 0) AND (MAX(gm) IS NULL OR MAX(gm) == '' OR MAX(gm) LIKE ' %' OR MAX(gm) == 0) THEN MAX(gm)  ELSE 'GOOD' END as gm_min_max_compare
FROM UAT_im_calc_engine.agg_oflnsel_hybridccr ;



MOD321 Variables
================
select count(*) from uat_im_calc_engine.agg_oflnsel_hybridmod321 ;

select cust_id, count(*) from  uat_im_calc_engine.agg_oflnsel_hybridmod321 
group by cust_id having count(*) > 1
order by cust_id
;

!ls -l /mapr/JMAPRCLUP01.CLASSIC.PCHAD.COM/im/calcengine/uat/hot/oflnsel/aggdata/agg_oflnsel_hybridmod321 ;

describe uat_im_calc_engine.agg_oflnsel_hybridmod321  ;

select constantvalueinfo.paradigm, substr(from_unixtime(unix_timestamp(cast(cast(selection_dt as int) as string),'yyyyDDD')),1,10)
from uat_im_calc_engine.agg_oflnsel_hybridmod321 limit 2 ;


set hive.strict.checks.cartesian.product=false ;
select mod321_distinct_custds_cnt,modsro_mf_current_distinct_custds_cnt,presel_distinct_custds_cnt,
mod321_custds_cnt,modsro_mf_current_custds_cnt,presel_custds_cnt
from
(select count(*) as mod321_custds_cnt, count(distinct cust_id) as mod321_distinct_custds_cnt from 
UAT_im_calc_engine.agg_oflnsel_hybridmod321 ) as ccr,
(select count(*) as modsro_mf_current_custds_cnt,count(distinct cust_id) as modsro_mf_current_distinct_custds_cnt 
from uat_sa_calc_engine_exchange.oflnsel_hdl_mod321_current) as modsro_mf_current,
(select count(*) as presel_custds_cnt, count(distinct cust_id) as presel_distinct_custds_cnt from 
uat_sa_calc_engine_exchange.oflnsel_hdl_preselectionfile where mod321_ind = '1') as presel
;

SELECT COUNT(*) AS TABLE_COUNT,
case when COUNT(*) ==  SUM(CASE WHEN constantvalueinfo IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS constantvalueinfo_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN doleff2y IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS doleff2y_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN eff_ctr IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS eff_ctr_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN hspay3mo IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS hspay3mo_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN int4 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS int4_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN mag24 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS mag24_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN navint IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS navint_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nefft6m IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nefft6m_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nmis1y IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nmis1y_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nmis2y IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nmis2y_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN ord24 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS ord24_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN ord3 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS ord3_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN ord6 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS ord6_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN poltv12 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS poltv12_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN poltv3 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS poltv3_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN rgm6 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS rgm6_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN sefrat4 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS sefrat4_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN sord2y IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS sord2y_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN spppn2y IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS spppn2y_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN totnnon1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS totnnon1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN vars601 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS vars601_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npordys4 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npordys4_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npordys7 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npordys7_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npefslnn IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npefslnn_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN off_ord_dys IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS off_ord_dys_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN tdays1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS tdays1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN doleff1y IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS doleff1y_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN pnoltv1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS pnoltv1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nppdord IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nppdord_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nent24 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nent24_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN ordda3 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS ordda3_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN tdays2 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS tdays2_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN pdo3 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS pdo3_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npcumcch IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npcumcch_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npavgeff IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npavgeff_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npdoleft IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npdoleft_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN abe12 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS abe12_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN tprd1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS tprd1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN tprfudys IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS tprfudys_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npnnyr2p IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npnnyr2p_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN ordda4 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS ordda4_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN topdor6 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS topdor6_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nppdy1sq IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nppdy1sq_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN trdys5 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS trdys5_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN scqqord IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS scqqord_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN avgpw IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS avgpw_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nret12ms IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nret12ms_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nret7mo IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nret7mo_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN neff24 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS neff24_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN tdys1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS tdys1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN geo_loc IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS geo_loc_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN selection_dt IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS selection_dt_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN poltv1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS poltv1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN cust_id IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS cust_id_AllNULL_Ind
FROM uat_im_calc_engine.agg_oflnsel_hybridmod321;


SELECT COUNT(*) AS TABLE_COUNT,
CASE WHEN MIN(doleff2y)  == MAX( doleff2y) THEN MAX(doleff2y) WHEN (MIN(doleff2y) IS NULL OR MIN(doleff2y) == '' OR MIN(doleff2y) LIKE ' %' OR MIN(doleff2y) == 0) AND (MAX(doleff2y) IS NULL OR MAX(doleff2y) == '' OR MAX(doleff2y) LIKE ' %' OR MAX(doleff2y) == 0) THEN MAX(doleff2y)  ELSE 'GOOD' END as doleff2y_min_max_compare,
CASE WHEN MIN(eff_ctr)  == MAX( eff_ctr) THEN MAX(eff_ctr) WHEN (MIN(eff_ctr) IS NULL OR MIN(eff_ctr) == '' OR MIN(eff_ctr) LIKE ' %' OR MIN(eff_ctr) == 0) AND (MAX(eff_ctr) IS NULL OR MAX(eff_ctr) == '' OR MAX(eff_ctr) LIKE ' %' OR MAX(eff_ctr) == 0) THEN MAX(eff_ctr)  ELSE 'GOOD' END as eff_ctr_min_max_compare,
CASE WHEN MIN(hspay3mo)  == MAX( hspay3mo) THEN MAX(hspay3mo) WHEN (MIN(hspay3mo) IS NULL OR MIN(hspay3mo) == '' OR MIN(hspay3mo) LIKE ' %' OR MIN(hspay3mo) == 0) AND (MAX(hspay3mo) IS NULL OR MAX(hspay3mo) == '' OR MAX(hspay3mo) LIKE ' %' OR MAX(hspay3mo) == 0) THEN MAX(hspay3mo)  ELSE 'GOOD' END as hspay3mo_min_max_compare,
CASE WHEN MIN(int4)  == MAX( int4) THEN MAX(int4) WHEN (MIN(int4) IS NULL OR MIN(int4) == '' OR MIN(int4) LIKE ' %' OR MIN(int4) == 0) AND (MAX(int4) IS NULL OR MAX(int4) == '' OR MAX(int4) LIKE ' %' OR MAX(int4) == 0) THEN MAX(int4)  ELSE 'GOOD' END as int4_min_max_compare,
CASE WHEN MIN(mag24)  == MAX( mag24) THEN MAX(mag24) WHEN (MIN(mag24) IS NULL OR MIN(mag24) == '' OR MIN(mag24) LIKE ' %' OR MIN(mag24) == 0) AND (MAX(mag24) IS NULL OR MAX(mag24) == '' OR MAX(mag24) LIKE ' %' OR MAX(mag24) == 0) THEN MAX(mag24)  ELSE 'GOOD' END as mag24_min_max_compare,
CASE WHEN MIN(navint)  == MAX( navint) THEN MAX(navint) WHEN (MIN(navint) IS NULL OR MIN(navint) == '' OR MIN(navint) LIKE ' %' OR MIN(navint) == 0) AND (MAX(navint) IS NULL OR MAX(navint) == '' OR MAX(navint) LIKE ' %' OR MAX(navint) == 0) THEN MAX(navint)  ELSE 'GOOD' END as navint_min_max_compare,
CASE WHEN MIN(nefft6m)  == MAX( nefft6m) THEN MAX(nefft6m) WHEN (MIN(nefft6m) IS NULL OR MIN(nefft6m) == '' OR MIN(nefft6m) LIKE ' %' OR MIN(nefft6m) == 0) AND (MAX(nefft6m) IS NULL OR MAX(nefft6m) == '' OR MAX(nefft6m) LIKE ' %' OR MAX(nefft6m) == 0) THEN MAX(nefft6m)  ELSE 'GOOD' END as nefft6m_min_max_compare,
CASE WHEN MIN(nmis1y)  == MAX( nmis1y) THEN MAX(nmis1y) WHEN (MIN(nmis1y) IS NULL OR MIN(nmis1y) == '' OR MIN(nmis1y) LIKE ' %' OR MIN(nmis1y) == 0) AND (MAX(nmis1y) IS NULL OR MAX(nmis1y) == '' OR MAX(nmis1y) LIKE ' %' OR MAX(nmis1y) == 0) THEN MAX(nmis1y)  ELSE 'GOOD' END as nmis1y_min_max_compare,
CASE WHEN MIN(nmis2y)  == MAX( nmis2y) THEN MAX(nmis2y) WHEN (MIN(nmis2y) IS NULL OR MIN(nmis2y) == '' OR MIN(nmis2y) LIKE ' %' OR MIN(nmis2y) == 0) AND (MAX(nmis2y) IS NULL OR MAX(nmis2y) == '' OR MAX(nmis2y) LIKE ' %' OR MAX(nmis2y) == 0) THEN MAX(nmis2y)  ELSE 'GOOD' END as nmis2y_min_max_compare,
CASE WHEN MIN(ord24)  == MAX( ord24) THEN MAX(ord24) WHEN (MIN(ord24) IS NULL OR MIN(ord24) == '' OR MIN(ord24) LIKE ' %' OR MIN(ord24) == 0) AND (MAX(ord24) IS NULL OR MAX(ord24) == '' OR MAX(ord24) LIKE ' %' OR MAX(ord24) == 0) THEN MAX(ord24)  ELSE 'GOOD' END as ord24_min_max_compare,
CASE WHEN MIN(ord3)  == MAX( ord3) THEN MAX(ord3) WHEN (MIN(ord3) IS NULL OR MIN(ord3) == '' OR MIN(ord3) LIKE ' %' OR MIN(ord3) == 0) AND (MAX(ord3) IS NULL OR MAX(ord3) == '' OR MAX(ord3) LIKE ' %' OR MAX(ord3) == 0) THEN MAX(ord3)  ELSE 'GOOD' END as ord3_min_max_compare,
CASE WHEN MIN(ord6)  == MAX( ord6) THEN MAX(ord6) WHEN (MIN(ord6) IS NULL OR MIN(ord6) == '' OR MIN(ord6) LIKE ' %' OR MIN(ord6) == 0) AND (MAX(ord6) IS NULL OR MAX(ord6) == '' OR MAX(ord6) LIKE ' %' OR MAX(ord6) == 0) THEN MAX(ord6)  ELSE 'GOOD' END as ord6_min_max_compare,
CASE WHEN MIN(poltv12)  == MAX( poltv12) THEN MAX(poltv12) WHEN (MIN(poltv12) IS NULL OR MIN(poltv12) == '' OR MIN(poltv12) LIKE ' %' OR MIN(poltv12) == 0) AND (MAX(poltv12) IS NULL OR MAX(poltv12) == '' OR MAX(poltv12) LIKE ' %' OR MAX(poltv12) == 0) THEN MAX(poltv12)  ELSE 'GOOD' END as poltv12_min_max_compare,
CASE WHEN MIN(poltv3)  == MAX( poltv3) THEN MAX(poltv3) WHEN (MIN(poltv3) IS NULL OR MIN(poltv3) == '' OR MIN(poltv3) LIKE ' %' OR MIN(poltv3) == 0) AND (MAX(poltv3) IS NULL OR MAX(poltv3) == '' OR MAX(poltv3) LIKE ' %' OR MAX(poltv3) == 0) THEN MAX(poltv3)  ELSE 'GOOD' END as poltv3_min_max_compare,
CASE WHEN MIN(rgm6)  == MAX( rgm6) THEN MAX(rgm6) WHEN (MIN(rgm6) IS NULL OR MIN(rgm6) == '' OR MIN(rgm6) LIKE ' %' OR MIN(rgm6) == 0) AND (MAX(rgm6) IS NULL OR MAX(rgm6) == '' OR MAX(rgm6) LIKE ' %' OR MAX(rgm6) == 0) THEN MAX(rgm6)  ELSE 'GOOD' END as rgm6_min_max_compare,
CASE WHEN MIN(sefrat4)  == MAX( sefrat4) THEN MAX(sefrat4) WHEN (MIN(sefrat4) IS NULL OR MIN(sefrat4) == '' OR MIN(sefrat4) LIKE ' %' OR MIN(sefrat4) == 0) AND (MAX(sefrat4) IS NULL OR MAX(sefrat4) == '' OR MAX(sefrat4) LIKE ' %' OR MAX(sefrat4) == 0) THEN MAX(sefrat4)  ELSE 'GOOD' END as sefrat4_min_max_compare,
CASE WHEN MIN(sord2y)  == MAX( sord2y) THEN MAX(sord2y) WHEN (MIN(sord2y) IS NULL OR MIN(sord2y) == '' OR MIN(sord2y) LIKE ' %' OR MIN(sord2y) == 0) AND (MAX(sord2y) IS NULL OR MAX(sord2y) == '' OR MAX(sord2y) LIKE ' %' OR MAX(sord2y) == 0) THEN MAX(sord2y)  ELSE 'GOOD' END as sord2y_min_max_compare,
CASE WHEN MIN(spppn2y)  == MAX( spppn2y) THEN MAX(spppn2y) WHEN (MIN(spppn2y) IS NULL OR MIN(spppn2y) == '' OR MIN(spppn2y) LIKE ' %' OR MIN(spppn2y) == 0) AND (MAX(spppn2y) IS NULL OR MAX(spppn2y) == '' OR MAX(spppn2y) LIKE ' %' OR MAX(spppn2y) == 0) THEN MAX(spppn2y)  ELSE 'GOOD' END as spppn2y_min_max_compare,
CASE WHEN MIN(totnnon1)  == MAX( totnnon1) THEN MAX(totnnon1) WHEN (MIN(totnnon1) IS NULL OR MIN(totnnon1) == '' OR MIN(totnnon1) LIKE ' %' OR MIN(totnnon1) == 0) AND (MAX(totnnon1) IS NULL OR MAX(totnnon1) == '' OR MAX(totnnon1) LIKE ' %' OR MAX(totnnon1) == 0) THEN MAX(totnnon1)  ELSE 'GOOD' END as totnnon1_min_max_compare,
CASE WHEN MIN(vars601)  == MAX( vars601) THEN MAX(vars601) WHEN (MIN(vars601) IS NULL OR MIN(vars601) == '' OR MIN(vars601) LIKE ' %' OR MIN(vars601) == 0) AND (MAX(vars601) IS NULL OR MAX(vars601) == '' OR MAX(vars601) LIKE ' %' OR MAX(vars601) == 0) THEN MAX(vars601)  ELSE 'GOOD' END as vars601_min_max_compare,
CASE WHEN MIN(npordys4)  == MAX( npordys4) THEN MAX(npordys4) WHEN (MIN(npordys4) IS NULL OR MIN(npordys4) == '' OR MIN(npordys4) LIKE ' %' OR MIN(npordys4) == 0) AND (MAX(npordys4) IS NULL OR MAX(npordys4) == '' OR MAX(npordys4) LIKE ' %' OR MAX(npordys4) == 0) THEN MAX(npordys4)  ELSE 'GOOD' END as npordys4_min_max_compare,
CASE WHEN MIN(npordys7)  == MAX( npordys7) THEN MAX(npordys7) WHEN (MIN(npordys7) IS NULL OR MIN(npordys7) == '' OR MIN(npordys7) LIKE ' %' OR MIN(npordys7) == 0) AND (MAX(npordys7) IS NULL OR MAX(npordys7) == '' OR MAX(npordys7) LIKE ' %' OR MAX(npordys7) == 0) THEN MAX(npordys7)  ELSE 'GOOD' END as npordys7_min_max_compare,
CASE WHEN MIN(npefslnn)  == MAX( npefslnn) THEN MAX(npefslnn) WHEN (MIN(npefslnn) IS NULL OR MIN(npefslnn) == '' OR MIN(npefslnn) LIKE ' %' OR MIN(npefslnn) == 0) AND (MAX(npefslnn) IS NULL OR MAX(npefslnn) == '' OR MAX(npefslnn) LIKE ' %' OR MAX(npefslnn) == 0) THEN MAX(npefslnn)  ELSE 'GOOD' END as npefslnn_min_max_compare,
CASE WHEN MIN(off_ord_dys)  == MAX( off_ord_dys) THEN MAX(off_ord_dys) WHEN (MIN(off_ord_dys) IS NULL OR MIN(off_ord_dys) == '' OR MIN(off_ord_dys) LIKE ' %' OR MIN(off_ord_dys) == 0) AND (MAX(off_ord_dys) IS NULL OR MAX(off_ord_dys) == '' OR MAX(off_ord_dys) LIKE ' %' OR MAX(off_ord_dys) == 0) THEN MAX(off_ord_dys)  ELSE 'GOOD' END as off_ord_dys_min_max_compare,
CASE WHEN MIN(tdays1)  == MAX( tdays1) THEN MAX(tdays1) WHEN (MIN(tdays1) IS NULL OR MIN(tdays1) == '' OR MIN(tdays1) LIKE ' %' OR MIN(tdays1) == 0) AND (MAX(tdays1) IS NULL OR MAX(tdays1) == '' OR MAX(tdays1) LIKE ' %' OR MAX(tdays1) == 0) THEN MAX(tdays1)  ELSE 'GOOD' END as tdays1_min_max_compare,
CASE WHEN MIN(doleff1y)  == MAX( doleff1y) THEN MAX(doleff1y) WHEN (MIN(doleff1y) IS NULL OR MIN(doleff1y) == '' OR MIN(doleff1y) LIKE ' %' OR MIN(doleff1y) == 0) AND (MAX(doleff1y) IS NULL OR MAX(doleff1y) == '' OR MAX(doleff1y) LIKE ' %' OR MAX(doleff1y) == 0) THEN MAX(doleff1y)  ELSE 'GOOD' END as doleff1y_min_max_compare,
CASE WHEN MIN(pnoltv1)  == MAX( pnoltv1) THEN MAX(pnoltv1) WHEN (MIN(pnoltv1) IS NULL OR MIN(pnoltv1) == '' OR MIN(pnoltv1) LIKE ' %' OR MIN(pnoltv1) == 0) AND (MAX(pnoltv1) IS NULL OR MAX(pnoltv1) == '' OR MAX(pnoltv1) LIKE ' %' OR MAX(pnoltv1) == 0) THEN MAX(pnoltv1)  ELSE 'GOOD' END as pnoltv1_min_max_compare,
CASE WHEN MIN(nppdord)  == MAX( nppdord) THEN MAX(nppdord) WHEN (MIN(nppdord) IS NULL OR MIN(nppdord) == '' OR MIN(nppdord) LIKE ' %' OR MIN(nppdord) == 0) AND (MAX(nppdord) IS NULL OR MAX(nppdord) == '' OR MAX(nppdord) LIKE ' %' OR MAX(nppdord) == 0) THEN MAX(nppdord)  ELSE 'GOOD' END as nppdord_min_max_compare,
CASE WHEN MIN(nent24)  == MAX( nent24) THEN MAX(nent24) WHEN (MIN(nent24) IS NULL OR MIN(nent24) == '' OR MIN(nent24) LIKE ' %' OR MIN(nent24) == 0) AND (MAX(nent24) IS NULL OR MAX(nent24) == '' OR MAX(nent24) LIKE ' %' OR MAX(nent24) == 0) THEN MAX(nent24)  ELSE 'GOOD' END as nent24_min_max_compare,
CASE WHEN MIN(ordda3)  == MAX( ordda3) THEN MAX(ordda3) WHEN (MIN(ordda3) IS NULL OR MIN(ordda3) == '' OR MIN(ordda3) LIKE ' %' OR MIN(ordda3) == 0) AND (MAX(ordda3) IS NULL OR MAX(ordda3) == '' OR MAX(ordda3) LIKE ' %' OR MAX(ordda3) == 0) THEN MAX(ordda3)  ELSE 'GOOD' END as ordda3_min_max_compare,
CASE WHEN MIN(tdays2)  == MAX( tdays2) THEN MAX(tdays2) WHEN (MIN(tdays2) IS NULL OR MIN(tdays2) == '' OR MIN(tdays2) LIKE ' %' OR MIN(tdays2) == 0) AND (MAX(tdays2) IS NULL OR MAX(tdays2) == '' OR MAX(tdays2) LIKE ' %' OR MAX(tdays2) == 0) THEN MAX(tdays2)  ELSE 'GOOD' END as tdays2_min_max_compare,
CASE WHEN MIN(pdo3)  == MAX( pdo3) THEN MAX(pdo3) WHEN (MIN(pdo3) IS NULL OR MIN(pdo3) == '' OR MIN(pdo3) LIKE ' %' OR MIN(pdo3) == 0) AND (MAX(pdo3) IS NULL OR MAX(pdo3) == '' OR MAX(pdo3) LIKE ' %' OR MAX(pdo3) == 0) THEN MAX(pdo3)  ELSE 'GOOD' END as pdo3_min_max_compare,
CASE WHEN MIN(npcumcch)  == MAX( npcumcch) THEN MAX(npcumcch) WHEN (MIN(npcumcch) IS NULL OR MIN(npcumcch) == '' OR MIN(npcumcch) LIKE ' %' OR MIN(npcumcch) == 0) AND (MAX(npcumcch) IS NULL OR MAX(npcumcch) == '' OR MAX(npcumcch) LIKE ' %' OR MAX(npcumcch) == 0) THEN MAX(npcumcch)  ELSE 'GOOD' END as npcumcch_min_max_compare,
CASE WHEN MIN(npavgeff)  == MAX( npavgeff) THEN MAX(npavgeff) WHEN (MIN(npavgeff) IS NULL OR MIN(npavgeff) == '' OR MIN(npavgeff) LIKE ' %' OR MIN(npavgeff) == 0) AND (MAX(npavgeff) IS NULL OR MAX(npavgeff) == '' OR MAX(npavgeff) LIKE ' %' OR MAX(npavgeff) == 0) THEN MAX(npavgeff)  ELSE 'GOOD' END as npavgeff_min_max_compare,
CASE WHEN MIN(npdoleft)  == MAX( npdoleft) THEN MAX(npdoleft) WHEN (MIN(npdoleft) IS NULL OR MIN(npdoleft) == '' OR MIN(npdoleft) LIKE ' %' OR MIN(npdoleft) == 0) AND (MAX(npdoleft) IS NULL OR MAX(npdoleft) == '' OR MAX(npdoleft) LIKE ' %' OR MAX(npdoleft) == 0) THEN MAX(npdoleft)  ELSE 'GOOD' END as npdoleft_min_max_compare,
CASE WHEN MIN(abe12)  == MAX( abe12) THEN MAX(abe12) WHEN (MIN(abe12) IS NULL OR MIN(abe12) == '' OR MIN(abe12) LIKE ' %' OR MIN(abe12) == 0) AND (MAX(abe12) IS NULL OR MAX(abe12) == '' OR MAX(abe12) LIKE ' %' OR MAX(abe12) == 0) THEN MAX(abe12)  ELSE 'GOOD' END as abe12_min_max_compare,
CASE WHEN MIN(tprd1)  == MAX( tprd1) THEN MAX(tprd1) WHEN (MIN(tprd1) IS NULL OR MIN(tprd1) == '' OR MIN(tprd1) LIKE ' %' OR MIN(tprd1) == 0) AND (MAX(tprd1) IS NULL OR MAX(tprd1) == '' OR MAX(tprd1) LIKE ' %' OR MAX(tprd1) == 0) THEN MAX(tprd1)  ELSE 'GOOD' END as tprd1_min_max_compare,
CASE WHEN MIN(tprfudys)  == MAX( tprfudys) THEN MAX(tprfudys) WHEN (MIN(tprfudys) IS NULL OR MIN(tprfudys) == '' OR MIN(tprfudys) LIKE ' %' OR MIN(tprfudys) == 0) AND (MAX(tprfudys) IS NULL OR MAX(tprfudys) == '' OR MAX(tprfudys) LIKE ' %' OR MAX(tprfudys) == 0) THEN MAX(tprfudys)  ELSE 'GOOD' END as tprfudys_min_max_compare,
CASE WHEN MIN(npnnyr2p)  == MAX( npnnyr2p) THEN MAX(npnnyr2p) WHEN (MIN(npnnyr2p) IS NULL OR MIN(npnnyr2p) == '' OR MIN(npnnyr2p) LIKE ' %' OR MIN(npnnyr2p) == 0) AND (MAX(npnnyr2p) IS NULL OR MAX(npnnyr2p) == '' OR MAX(npnnyr2p) LIKE ' %' OR MAX(npnnyr2p) == 0) THEN MAX(npnnyr2p)  ELSE 'GOOD' END as npnnyr2p_min_max_compare,
CASE WHEN MIN(ordda4)  == MAX( ordda4) THEN MAX(ordda4) WHEN (MIN(ordda4) IS NULL OR MIN(ordda4) == '' OR MIN(ordda4) LIKE ' %' OR MIN(ordda4) == 0) AND (MAX(ordda4) IS NULL OR MAX(ordda4) == '' OR MAX(ordda4) LIKE ' %' OR MAX(ordda4) == 0) THEN MAX(ordda4)  ELSE 'GOOD' END as ordda4_min_max_compare,
CASE WHEN MIN(topdor6)  == MAX( topdor6) THEN MAX(topdor6) WHEN (MIN(topdor6) IS NULL OR MIN(topdor6) == '' OR MIN(topdor6) LIKE ' %' OR MIN(topdor6) == 0) AND (MAX(topdor6) IS NULL OR MAX(topdor6) == '' OR MAX(topdor6) LIKE ' %' OR MAX(topdor6) == 0) THEN MAX(topdor6)  ELSE 'GOOD' END as topdor6_min_max_compare,
CASE WHEN MIN(nppdy1sq)  == MAX( nppdy1sq) THEN MAX(nppdy1sq) WHEN (MIN(nppdy1sq) IS NULL OR MIN(nppdy1sq) == '' OR MIN(nppdy1sq) LIKE ' %' OR MIN(nppdy1sq) == 0) AND (MAX(nppdy1sq) IS NULL OR MAX(nppdy1sq) == '' OR MAX(nppdy1sq) LIKE ' %' OR MAX(nppdy1sq) == 0) THEN MAX(nppdy1sq)  ELSE 'GOOD' END as nppdy1sq_min_max_compare,
CASE WHEN MIN(trdys5)  == MAX( trdys5) THEN MAX(trdys5) WHEN (MIN(trdys5) IS NULL OR MIN(trdys5) == '' OR MIN(trdys5) LIKE ' %' OR MIN(trdys5) == 0) AND (MAX(trdys5) IS NULL OR MAX(trdys5) == '' OR MAX(trdys5) LIKE ' %' OR MAX(trdys5) == 0) THEN MAX(trdys5)  ELSE 'GOOD' END as trdys5_min_max_compare,
CASE WHEN MIN(scqqord)  == MAX( scqqord) THEN MAX(scqqord) WHEN (MIN(scqqord) IS NULL OR MIN(scqqord) == '' OR MIN(scqqord) LIKE ' %' OR MIN(scqqord) == 0) AND (MAX(scqqord) IS NULL OR MAX(scqqord) == '' OR MAX(scqqord) LIKE ' %' OR MAX(scqqord) == 0) THEN MAX(scqqord)  ELSE 'GOOD' END as scqqord_min_max_compare,
CASE WHEN MIN(avgpw)  == MAX( avgpw) THEN MAX(avgpw) WHEN (MIN(avgpw) IS NULL OR MIN(avgpw) == '' OR MIN(avgpw) LIKE ' %' OR MIN(avgpw) == 0) AND (MAX(avgpw) IS NULL OR MAX(avgpw) == '' OR MAX(avgpw) LIKE ' %' OR MAX(avgpw) == 0) THEN MAX(avgpw)  ELSE 'GOOD' END as avgpw_min_max_compare,
CASE WHEN MIN(nret12ms)  == MAX( nret12ms) THEN MAX(nret12ms) WHEN (MIN(nret12ms) IS NULL OR MIN(nret12ms) == '' OR MIN(nret12ms) LIKE ' %' OR MIN(nret12ms) == 0) AND (MAX(nret12ms) IS NULL OR MAX(nret12ms) == '' OR MAX(nret12ms) LIKE ' %' OR MAX(nret12ms) == 0) THEN MAX(nret12ms)  ELSE 'GOOD' END as nret12ms_min_max_compare,
CASE WHEN MIN(nret7mo)  == MAX( nret7mo) THEN MAX(nret7mo) WHEN (MIN(nret7mo) IS NULL OR MIN(nret7mo) == '' OR MIN(nret7mo) LIKE ' %' OR MIN(nret7mo) == 0) AND (MAX(nret7mo) IS NULL OR MAX(nret7mo) == '' OR MAX(nret7mo) LIKE ' %' OR MAX(nret7mo) == 0) THEN MAX(nret7mo)  ELSE 'GOOD' END as nret7mo_min_max_compare,
CASE WHEN MIN(neff24)  == MAX( neff24) THEN MAX(neff24) WHEN (MIN(neff24) IS NULL OR MIN(neff24) == '' OR MIN(neff24) LIKE ' %' OR MIN(neff24) == 0) AND (MAX(neff24) IS NULL OR MAX(neff24) == '' OR MAX(neff24) LIKE ' %' OR MAX(neff24) == 0) THEN MAX(neff24)  ELSE 'GOOD' END as neff24_min_max_compare,
CASE WHEN MIN(tdys1)  == MAX( tdys1) THEN MAX(tdys1) WHEN (MIN(tdys1) IS NULL OR MIN(tdys1) == '' OR MIN(tdys1) LIKE ' %' OR MIN(tdys1) == 0) AND (MAX(tdys1) IS NULL OR MAX(tdys1) == '' OR MAX(tdys1) LIKE ' %' OR MAX(tdys1) == 0) THEN MAX(tdys1)  ELSE 'GOOD' END as tdys1_min_max_compare,
CASE WHEN MIN(geo_loc)  == MAX( geo_loc) THEN MAX(geo_loc) WHEN (MIN(geo_loc) IS NULL OR MIN(geo_loc) == '' OR MIN(geo_loc) LIKE ' %' OR MIN(geo_loc) == 0) AND (MAX(geo_loc) IS NULL OR MAX(geo_loc) == '' OR MAX(geo_loc) LIKE ' %' OR MAX(geo_loc) == 0) THEN MAX(geo_loc)  ELSE 'GOOD' END as geo_loc_min_max_compare,
CASE WHEN MIN(selection_dt)  == MAX( selection_dt) THEN MAX(selection_dt) WHEN (MIN(selection_dt) IS NULL OR MIN(selection_dt) == '' OR MIN(selection_dt) LIKE ' %' OR MIN(selection_dt) == 0) AND (MAX(selection_dt) IS NULL OR MAX(selection_dt) == '' OR MAX(selection_dt) LIKE ' %' OR MAX(selection_dt) == 0) THEN MAX(selection_dt)  ELSE 'GOOD' END as selection_dt_min_max_compare,
CASE WHEN MIN(poltv1)  == MAX( poltv1) THEN MAX(poltv1) WHEN (MIN(poltv1) IS NULL OR MIN(poltv1) == '' OR MIN(poltv1) LIKE ' %' OR MIN(poltv1) == 0) AND (MAX(poltv1) IS NULL OR MAX(poltv1) == '' OR MAX(poltv1) LIKE ' %' OR MAX(poltv1) == 0) THEN MAX(poltv1)  ELSE 'GOOD' END as poltv1_min_max_compare,
CASE WHEN MIN(cust_id)  == MAX( cust_id) THEN MAX(cust_id) WHEN (MIN(cust_id) IS NULL OR MIN(cust_id) == '' OR MIN(cust_id) LIKE ' %' OR MIN(cust_id) == 0) AND (MAX(cust_id) IS NULL OR MAX(cust_id) == '' OR MAX(cust_id) LIKE ' %' OR MAX(cust_id) == 0) THEN MAX(cust_id)  ELSE 'GOOD' END as cust_id_min_max_compare
FROM uat_im_calc_engine.agg_oflnsel_hybridmod321;





MOD321B Variables
=================
select count(*) from uat_im_calc_engine.agg_oflnsel_hybridmod321b ;

select cust_id, count(*) from  uat_im_calc_engine.agg_oflnsel_hybridmod321b 
group by cust_id having count(*) > 1
order by cust_id
;

!ls -l /mapr/JMAPRCLUP01.CLASSIC.PCHAD.COM/im/calcengine/uat/hot/oflnsel/aggdata/agg_oflnsel_hybridmod321b ;

describe uat_im_calc_engine.agg_oflnsel_hybridmod321 ;

select substr(from_unixtime(unix_timestamp(cast(cast(selection_dt as int) as string),'yyyyDDD')),1,10)
from uat_im_calc_engine.agg_oflnsel_hybridmod321b limit 2 ;

set hive.strict.checks.cartesian.product=false ;
select mod321b_distinct_custds_cnt,modsro_mf_current_distinct_custds_cnt,presel_distinct_custds_cnt,
mod321b_custds_cnt,modsro_mf_current_custds_cnt,presel_custds_cnt
from
(select count(*) as mod321b_custds_cnt, count(distinct cust_id) as mod321b_distinct_custds_cnt from 
UAT_im_calc_engine.agg_oflnsel_hybridmod321b ) as ccr,
(select count(*) as modsro_mf_current_custds_cnt,count(distinct orig_cust_id) as modsro_mf_current_distinct_custds_cnt 
from uat_im_dms_flat_variables.dmsm10_dmdo002_current where  TRIM(dash_cust_ind)='B') as modsro_mf_current,
(select count(*) as presel_custds_cnt, count(distinct cust_id) as presel_distinct_custds_cnt from 
uat_sa_calc_engine_exchange.oflnsel_hdl_preselectionfile where modb_ind = 1) as presel
;


SELECT COUNT(*) AS TABLE_COUNT,
case when COUNT(*) ==  SUM(CASE WHEN file_description IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS file_description_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN run_timestamp IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS run_timestamp_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN selection_dt IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS selection_dt_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN cust_part_seq_no IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS cust_part_seq_no_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN cust_id IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS cust_id_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN geo_loc IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS geo_loc_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN abe12 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS abe12_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN avgpw IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS avgpw_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN doleff1y IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS doleff1y_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN doleff2y IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS doleff2y_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN eff_ctr IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS eff_ctr_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN hspay3mo IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS hspay3mo_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN int4 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS int4_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN mag24 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS mag24_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN navint IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS navint_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nefft6m IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nefft6m_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN neff24 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS neff24_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nent24 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nent24_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nmis1y IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nmis1y_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nmis2y IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nmis2y_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npavgeff IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npavgeff_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npcumcch IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npcumcch_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npdoleft IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npdoleft_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npefslnn IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npefslnn_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npnnyr2p IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npnnyr2p_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npordys4 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npordys4_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npordys7 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npordys7_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nppdord IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nppdord_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nppdy1sq IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nppdy1sq_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nret7mo IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nret7mo_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nret12ms IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nret12ms_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN off_ord_dys IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS off_ord_dys_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN ordda3 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS ordda3_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN ordda4 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS ordda4_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN ord3 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS ord3_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN ord6 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS ord6_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN ord24 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS ord24_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN pdo3 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS pdo3_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN pnoltv1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS pnoltv1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN poltv3 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS poltv3_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN poltv12 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS poltv12_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN rgm6 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS rgm6_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN scqqord IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS scqqord_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN sefrat4 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS sefrat4_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN sord2y IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS sord2y_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN spppn2y IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS spppn2y_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN tdays1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS tdays1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN tdays2 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS tdays2_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN topdor6 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS topdor6_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN totnnon1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS totnnon1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN tprd1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS tprd1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN tprfudys IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS tprfudys_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN trdys5 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS trdys5_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN tdys1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS tdys1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN vars601 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS vars601_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN poltv1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS poltv1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN s2 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS s2_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN scqq_rat_tt_rev IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS scqq_rat_tt_rev_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nefft1y IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nefft1y_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npbydf1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npbydf1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN ndays1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS ndays1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npprdy1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npprdy1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN max_days_delinq IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS max_days_delinq_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npuncctr IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npuncctr_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npordt1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npordt1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN purchx IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS purchx_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nppdsodl IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nppdsodl_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npprod IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npprod_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN dash_cust_ind IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS dash_cust_ind_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN selection_date IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS selection_date_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN curr_tt_paid IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS curr_tt_paid_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN curr_tt_rev IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS curr_tt_rev_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN ent1224 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS ent1224_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN hnopdys1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS hnopdys1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nopbill12 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nopbill12_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npnonrat IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npnonrat_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npprd1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npprd1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npttnt3 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npttnt3_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npvclrat IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npvclrat_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN ntranrat1y IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS ntranrat1y_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN num_effs_mnth IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS num_effs_mnth_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN q3_tt_effort IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS q3_tt_effort_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN quat1_tt_eff IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS quat1_tt_eff_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN sefft6m IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS sefft6m_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN sefrat1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS sefrat1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN tdays3 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS tdays3_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN tvclpro IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS tvclpro_AllNULL_Ind
from uat_im_calc_engine.agg_oflnsel_hybridmod321b ;



SELECT COUNT(*) AS TABLE_COUNT,
CASE WHEN MIN(file_description)  == MAX( file_description) THEN MAX(file_description) WHEN (MIN(file_description) IS NULL OR MIN(file_description) == '' OR MIN(file_description) LIKE ' %' OR MIN(file_description) == 0) AND (MAX(file_description) IS NULL OR MAX(file_description) == '' OR MAX(file_description) LIKE ' %' OR MAX(file_description) == 0) THEN MAX(file_description)  ELSE 'GOOD' END as file_description_min_max_compare,
CASE WHEN MIN(run_timestamp)  == MAX( run_timestamp) THEN MAX(run_timestamp) WHEN (MIN(run_timestamp) IS NULL OR MIN(run_timestamp) == '' OR MIN(run_timestamp) LIKE ' %' OR MIN(run_timestamp) == 0) AND (MAX(run_timestamp) IS NULL OR MAX(run_timestamp) == '' OR MAX(run_timestamp) LIKE ' %' OR MAX(run_timestamp) == 0) THEN MAX(run_timestamp)  ELSE 'GOOD' END as run_timestamp_min_max_compare,
CASE WHEN MIN(selection_dt)  == MAX( selection_dt) THEN MAX(selection_dt) WHEN (MIN(selection_dt) IS NULL OR MIN(selection_dt) == '' OR MIN(selection_dt) LIKE ' %' OR MIN(selection_dt) == 0) AND (MAX(selection_dt) IS NULL OR MAX(selection_dt) == '' OR MAX(selection_dt) LIKE ' %' OR MAX(selection_dt) == 0) THEN MAX(selection_dt)  ELSE 'GOOD' END as selection_dt_min_max_compare,
CASE WHEN MIN(cust_part_seq_no)  == MAX( cust_part_seq_no) THEN MAX(cust_part_seq_no) WHEN (MIN(cust_part_seq_no) IS NULL OR MIN(cust_part_seq_no) == '' OR MIN(cust_part_seq_no) LIKE ' %' OR MIN(cust_part_seq_no) == 0) AND (MAX(cust_part_seq_no) IS NULL OR MAX(cust_part_seq_no) == '' OR MAX(cust_part_seq_no) LIKE ' %' OR MAX(cust_part_seq_no) == 0) THEN MAX(cust_part_seq_no)  ELSE 'GOOD' END as cust_part_seq_no_min_max_compare,
CASE WHEN MIN(cust_id)  == MAX( cust_id) THEN MAX(cust_id) WHEN (MIN(cust_id) IS NULL OR MIN(cust_id) == '' OR MIN(cust_id) LIKE ' %' OR MIN(cust_id) == 0) AND (MAX(cust_id) IS NULL OR MAX(cust_id) == '' OR MAX(cust_id) LIKE ' %' OR MAX(cust_id) == 0) THEN MAX(cust_id)  ELSE 'GOOD' END as cust_id_min_max_compare,
CASE WHEN MIN(geo_loc)  == MAX( geo_loc) THEN MAX(geo_loc) WHEN (MIN(geo_loc) IS NULL OR MIN(geo_loc) == '' OR MIN(geo_loc) LIKE ' %' OR MIN(geo_loc) == 0) AND (MAX(geo_loc) IS NULL OR MAX(geo_loc) == '' OR MAX(geo_loc) LIKE ' %' OR MAX(geo_loc) == 0) THEN MAX(geo_loc)  ELSE 'GOOD' END as geo_loc_min_max_compare,
CASE WHEN MIN(abe12)  == MAX( abe12) THEN MAX(abe12) WHEN (MIN(abe12) IS NULL OR MIN(abe12) == '' OR MIN(abe12) LIKE ' %' OR MIN(abe12) == 0) AND (MAX(abe12) IS NULL OR MAX(abe12) == '' OR MAX(abe12) LIKE ' %' OR MAX(abe12) == 0) THEN MAX(abe12)  ELSE 'GOOD' END as abe12_min_max_compare,
CASE WHEN MIN(avgpw)  == MAX( avgpw) THEN MAX(avgpw) WHEN (MIN(avgpw) IS NULL OR MIN(avgpw) == '' OR MIN(avgpw) LIKE ' %' OR MIN(avgpw) == 0) AND (MAX(avgpw) IS NULL OR MAX(avgpw) == '' OR MAX(avgpw) LIKE ' %' OR MAX(avgpw) == 0) THEN MAX(avgpw)  ELSE 'GOOD' END as avgpw_min_max_compare,
CASE WHEN MIN(doleff1y)  == MAX( doleff1y) THEN MAX(doleff1y) WHEN (MIN(doleff1y) IS NULL OR MIN(doleff1y) == '' OR MIN(doleff1y) LIKE ' %' OR MIN(doleff1y) == 0) AND (MAX(doleff1y) IS NULL OR MAX(doleff1y) == '' OR MAX(doleff1y) LIKE ' %' OR MAX(doleff1y) == 0) THEN MAX(doleff1y)  ELSE 'GOOD' END as doleff1y_min_max_compare,
CASE WHEN MIN(doleff2y)  == MAX( doleff2y) THEN MAX(doleff2y) WHEN (MIN(doleff2y) IS NULL OR MIN(doleff2y) == '' OR MIN(doleff2y) LIKE ' %' OR MIN(doleff2y) == 0) AND (MAX(doleff2y) IS NULL OR MAX(doleff2y) == '' OR MAX(doleff2y) LIKE ' %' OR MAX(doleff2y) == 0) THEN MAX(doleff2y)  ELSE 'GOOD' END as doleff2y_min_max_compare,
CASE WHEN MIN(eff_ctr)  == MAX( eff_ctr) THEN MAX(eff_ctr) WHEN (MIN(eff_ctr) IS NULL OR MIN(eff_ctr) == '' OR MIN(eff_ctr) LIKE ' %' OR MIN(eff_ctr) == 0) AND (MAX(eff_ctr) IS NULL OR MAX(eff_ctr) == '' OR MAX(eff_ctr) LIKE ' %' OR MAX(eff_ctr) == 0) THEN MAX(eff_ctr)  ELSE 'GOOD' END as eff_ctr_min_max_compare,
CASE WHEN MIN(hspay3mo)  == MAX( hspay3mo) THEN MAX(hspay3mo) WHEN (MIN(hspay3mo) IS NULL OR MIN(hspay3mo) == '' OR MIN(hspay3mo) LIKE ' %' OR MIN(hspay3mo) == 0) AND (MAX(hspay3mo) IS NULL OR MAX(hspay3mo) == '' OR MAX(hspay3mo) LIKE ' %' OR MAX(hspay3mo) == 0) THEN MAX(hspay3mo)  ELSE 'GOOD' END as hspay3mo_min_max_compare,
CASE WHEN MIN(int4)  == MAX( int4) THEN MAX(int4) WHEN (MIN(int4) IS NULL OR MIN(int4) == '' OR MIN(int4) LIKE ' %' OR MIN(int4) == 0) AND (MAX(int4) IS NULL OR MAX(int4) == '' OR MAX(int4) LIKE ' %' OR MAX(int4) == 0) THEN MAX(int4)  ELSE 'GOOD' END as int4_min_max_compare,
CASE WHEN MIN(mag24)  == MAX( mag24) THEN MAX(mag24) WHEN (MIN(mag24) IS NULL OR MIN(mag24) == '' OR MIN(mag24) LIKE ' %' OR MIN(mag24) == 0) AND (MAX(mag24) IS NULL OR MAX(mag24) == '' OR MAX(mag24) LIKE ' %' OR MAX(mag24) == 0) THEN MAX(mag24)  ELSE 'GOOD' END as mag24_min_max_compare,
CASE WHEN MIN(navint)  == MAX( navint) THEN MAX(navint) WHEN (MIN(navint) IS NULL OR MIN(navint) == '' OR MIN(navint) LIKE ' %' OR MIN(navint) == 0) AND (MAX(navint) IS NULL OR MAX(navint) == '' OR MAX(navint) LIKE ' %' OR MAX(navint) == 0) THEN MAX(navint)  ELSE 'GOOD' END as navint_min_max_compare,
CASE WHEN MIN(nefft6m)  == MAX( nefft6m) THEN MAX(nefft6m) WHEN (MIN(nefft6m) IS NULL OR MIN(nefft6m) == '' OR MIN(nefft6m) LIKE ' %' OR MIN(nefft6m) == 0) AND (MAX(nefft6m) IS NULL OR MAX(nefft6m) == '' OR MAX(nefft6m) LIKE ' %' OR MAX(nefft6m) == 0) THEN MAX(nefft6m)  ELSE 'GOOD' END as nefft6m_min_max_compare,
CASE WHEN MIN(neff24)  == MAX( neff24) THEN MAX(neff24) WHEN (MIN(neff24) IS NULL OR MIN(neff24) == '' OR MIN(neff24) LIKE ' %' OR MIN(neff24) == 0) AND (MAX(neff24) IS NULL OR MAX(neff24) == '' OR MAX(neff24) LIKE ' %' OR MAX(neff24) == 0) THEN MAX(neff24)  ELSE 'GOOD' END as neff24_min_max_compare,
CASE WHEN MIN(nent24)  == MAX( nent24) THEN MAX(nent24) WHEN (MIN(nent24) IS NULL OR MIN(nent24) == '' OR MIN(nent24) LIKE ' %' OR MIN(nent24) == 0) AND (MAX(nent24) IS NULL OR MAX(nent24) == '' OR MAX(nent24) LIKE ' %' OR MAX(nent24) == 0) THEN MAX(nent24)  ELSE 'GOOD' END as nent24_min_max_compare,
CASE WHEN MIN(nmis1y)  == MAX( nmis1y) THEN MAX(nmis1y) WHEN (MIN(nmis1y) IS NULL OR MIN(nmis1y) == '' OR MIN(nmis1y) LIKE ' %' OR MIN(nmis1y) == 0) AND (MAX(nmis1y) IS NULL OR MAX(nmis1y) == '' OR MAX(nmis1y) LIKE ' %' OR MAX(nmis1y) == 0) THEN MAX(nmis1y)  ELSE 'GOOD' END as nmis1y_min_max_compare,
CASE WHEN MIN(nmis2y)  == MAX( nmis2y) THEN MAX(nmis2y) WHEN (MIN(nmis2y) IS NULL OR MIN(nmis2y) == '' OR MIN(nmis2y) LIKE ' %' OR MIN(nmis2y) == 0) AND (MAX(nmis2y) IS NULL OR MAX(nmis2y) == '' OR MAX(nmis2y) LIKE ' %' OR MAX(nmis2y) == 0) THEN MAX(nmis2y)  ELSE 'GOOD' END as nmis2y_min_max_compare,
CASE WHEN MIN(npavgeff)  == MAX( npavgeff) THEN MAX(npavgeff) WHEN (MIN(npavgeff) IS NULL OR MIN(npavgeff) == '' OR MIN(npavgeff) LIKE ' %' OR MIN(npavgeff) == 0) AND (MAX(npavgeff) IS NULL OR MAX(npavgeff) == '' OR MAX(npavgeff) LIKE ' %' OR MAX(npavgeff) == 0) THEN MAX(npavgeff)  ELSE 'GOOD' END as npavgeff_min_max_compare,
CASE WHEN MIN(npcumcch)  == MAX( npcumcch) THEN MAX(npcumcch) WHEN (MIN(npcumcch) IS NULL OR MIN(npcumcch) == '' OR MIN(npcumcch) LIKE ' %' OR MIN(npcumcch) == 0) AND (MAX(npcumcch) IS NULL OR MAX(npcumcch) == '' OR MAX(npcumcch) LIKE ' %' OR MAX(npcumcch) == 0) THEN MAX(npcumcch)  ELSE 'GOOD' END as npcumcch_min_max_compare,
CASE WHEN MIN(npdoleft)  == MAX( npdoleft) THEN MAX(npdoleft) WHEN (MIN(npdoleft) IS NULL OR MIN(npdoleft) == '' OR MIN(npdoleft) LIKE ' %' OR MIN(npdoleft) == 0) AND (MAX(npdoleft) IS NULL OR MAX(npdoleft) == '' OR MAX(npdoleft) LIKE ' %' OR MAX(npdoleft) == 0) THEN MAX(npdoleft)  ELSE 'GOOD' END as npdoleft_min_max_compare,
CASE WHEN MIN(npefslnn)  == MAX( npefslnn) THEN MAX(npefslnn) WHEN (MIN(npefslnn) IS NULL OR MIN(npefslnn) == '' OR MIN(npefslnn) LIKE ' %' OR MIN(npefslnn) == 0) AND (MAX(npefslnn) IS NULL OR MAX(npefslnn) == '' OR MAX(npefslnn) LIKE ' %' OR MAX(npefslnn) == 0) THEN MAX(npefslnn)  ELSE 'GOOD' END as npefslnn_min_max_compare,
CASE WHEN MIN(npnnyr2p)  == MAX( npnnyr2p) THEN MAX(npnnyr2p) WHEN (MIN(npnnyr2p) IS NULL OR MIN(npnnyr2p) == '' OR MIN(npnnyr2p) LIKE ' %' OR MIN(npnnyr2p) == 0) AND (MAX(npnnyr2p) IS NULL OR MAX(npnnyr2p) == '' OR MAX(npnnyr2p) LIKE ' %' OR MAX(npnnyr2p) == 0) THEN MAX(npnnyr2p)  ELSE 'GOOD' END as npnnyr2p_min_max_compare,
CASE WHEN MIN(npordys4)  == MAX( npordys4) THEN MAX(npordys4) WHEN (MIN(npordys4) IS NULL OR MIN(npordys4) == '' OR MIN(npordys4) LIKE ' %' OR MIN(npordys4) == 0) AND (MAX(npordys4) IS NULL OR MAX(npordys4) == '' OR MAX(npordys4) LIKE ' %' OR MAX(npordys4) == 0) THEN MAX(npordys4)  ELSE 'GOOD' END as npordys4_min_max_compare,
CASE WHEN MIN(npordys7)  == MAX( npordys7) THEN MAX(npordys7) WHEN (MIN(npordys7) IS NULL OR MIN(npordys7) == '' OR MIN(npordys7) LIKE ' %' OR MIN(npordys7) == 0) AND (MAX(npordys7) IS NULL OR MAX(npordys7) == '' OR MAX(npordys7) LIKE ' %' OR MAX(npordys7) == 0) THEN MAX(npordys7)  ELSE 'GOOD' END as npordys7_min_max_compare,
CASE WHEN MIN(nppdord)  == MAX( nppdord) THEN MAX(nppdord) WHEN (MIN(nppdord) IS NULL OR MIN(nppdord) == '' OR MIN(nppdord) LIKE ' %' OR MIN(nppdord) == 0) AND (MAX(nppdord) IS NULL OR MAX(nppdord) == '' OR MAX(nppdord) LIKE ' %' OR MAX(nppdord) == 0) THEN MAX(nppdord)  ELSE 'GOOD' END as nppdord_min_max_compare,
CASE WHEN MIN(nppdy1sq)  == MAX( nppdy1sq) THEN MAX(nppdy1sq) WHEN (MIN(nppdy1sq) IS NULL OR MIN(nppdy1sq) == '' OR MIN(nppdy1sq) LIKE ' %' OR MIN(nppdy1sq) == 0) AND (MAX(nppdy1sq) IS NULL OR MAX(nppdy1sq) == '' OR MAX(nppdy1sq) LIKE ' %' OR MAX(nppdy1sq) == 0) THEN MAX(nppdy1sq)  ELSE 'GOOD' END as nppdy1sq_min_max_compare,
CASE WHEN MIN(nret7mo)  == MAX( nret7mo) THEN MAX(nret7mo) WHEN (MIN(nret7mo) IS NULL OR MIN(nret7mo) == '' OR MIN(nret7mo) LIKE ' %' OR MIN(nret7mo) == 0) AND (MAX(nret7mo) IS NULL OR MAX(nret7mo) == '' OR MAX(nret7mo) LIKE ' %' OR MAX(nret7mo) == 0) THEN MAX(nret7mo)  ELSE 'GOOD' END as nret7mo_min_max_compare,
CASE WHEN MIN(nret12ms)  == MAX( nret12ms) THEN MAX(nret12ms) WHEN (MIN(nret12ms) IS NULL OR MIN(nret12ms) == '' OR MIN(nret12ms) LIKE ' %' OR MIN(nret12ms) == 0) AND (MAX(nret12ms) IS NULL OR MAX(nret12ms) == '' OR MAX(nret12ms) LIKE ' %' OR MAX(nret12ms) == 0) THEN MAX(nret12ms)  ELSE 'GOOD' END as nret12ms_min_max_compare,
CASE WHEN MIN(off_ord_dys)  == MAX( off_ord_dys) THEN MAX(off_ord_dys) WHEN (MIN(off_ord_dys) IS NULL OR MIN(off_ord_dys) == '' OR MIN(off_ord_dys) LIKE ' %' OR MIN(off_ord_dys) == 0) AND (MAX(off_ord_dys) IS NULL OR MAX(off_ord_dys) == '' OR MAX(off_ord_dys) LIKE ' %' OR MAX(off_ord_dys) == 0) THEN MAX(off_ord_dys)  ELSE 'GOOD' END as off_ord_dys_min_max_compare,
CASE WHEN MIN(ordda3)  == MAX( ordda3) THEN MAX(ordda3) WHEN (MIN(ordda3) IS NULL OR MIN(ordda3) == '' OR MIN(ordda3) LIKE ' %' OR MIN(ordda3) == 0) AND (MAX(ordda3) IS NULL OR MAX(ordda3) == '' OR MAX(ordda3) LIKE ' %' OR MAX(ordda3) == 0) THEN MAX(ordda3)  ELSE 'GOOD' END as ordda3_min_max_compare,
CASE WHEN MIN(ordda4)  == MAX( ordda4) THEN MAX(ordda4) WHEN (MIN(ordda4) IS NULL OR MIN(ordda4) == '' OR MIN(ordda4) LIKE ' %' OR MIN(ordda4) == 0) AND (MAX(ordda4) IS NULL OR MAX(ordda4) == '' OR MAX(ordda4) LIKE ' %' OR MAX(ordda4) == 0) THEN MAX(ordda4)  ELSE 'GOOD' END as ordda4_min_max_compare,
CASE WHEN MIN(ord3)  == MAX( ord3) THEN MAX(ord3) WHEN (MIN(ord3) IS NULL OR MIN(ord3) == '' OR MIN(ord3) LIKE ' %' OR MIN(ord3) == 0) AND (MAX(ord3) IS NULL OR MAX(ord3) == '' OR MAX(ord3) LIKE ' %' OR MAX(ord3) == 0) THEN MAX(ord3)  ELSE 'GOOD' END as ord3_min_max_compare,
CASE WHEN MIN(ord6)  == MAX( ord6) THEN MAX(ord6) WHEN (MIN(ord6) IS NULL OR MIN(ord6) == '' OR MIN(ord6) LIKE ' %' OR MIN(ord6) == 0) AND (MAX(ord6) IS NULL OR MAX(ord6) == '' OR MAX(ord6) LIKE ' %' OR MAX(ord6) == 0) THEN MAX(ord6)  ELSE 'GOOD' END as ord6_min_max_compare,
CASE WHEN MIN(ord24)  == MAX( ord24) THEN MAX(ord24) WHEN (MIN(ord24) IS NULL OR MIN(ord24) == '' OR MIN(ord24) LIKE ' %' OR MIN(ord24) == 0) AND (MAX(ord24) IS NULL OR MAX(ord24) == '' OR MAX(ord24) LIKE ' %' OR MAX(ord24) == 0) THEN MAX(ord24)  ELSE 'GOOD' END as ord24_min_max_compare,
CASE WHEN MIN(pdo3)  == MAX( pdo3) THEN MAX(pdo3) WHEN (MIN(pdo3) IS NULL OR MIN(pdo3) == '' OR MIN(pdo3) LIKE ' %' OR MIN(pdo3) == 0) AND (MAX(pdo3) IS NULL OR MAX(pdo3) == '' OR MAX(pdo3) LIKE ' %' OR MAX(pdo3) == 0) THEN MAX(pdo3)  ELSE 'GOOD' END as pdo3_min_max_compare,
CASE WHEN MIN(pnoltv1)  == MAX( pnoltv1) THEN MAX(pnoltv1) WHEN (MIN(pnoltv1) IS NULL OR MIN(pnoltv1) == '' OR MIN(pnoltv1) LIKE ' %' OR MIN(pnoltv1) == 0) AND (MAX(pnoltv1) IS NULL OR MAX(pnoltv1) == '' OR MAX(pnoltv1) LIKE ' %' OR MAX(pnoltv1) == 0) THEN MAX(pnoltv1)  ELSE 'GOOD' END as pnoltv1_min_max_compare,
CASE WHEN MIN(poltv3)  == MAX( poltv3) THEN MAX(poltv3) WHEN (MIN(poltv3) IS NULL OR MIN(poltv3) == '' OR MIN(poltv3) LIKE ' %' OR MIN(poltv3) == 0) AND (MAX(poltv3) IS NULL OR MAX(poltv3) == '' OR MAX(poltv3) LIKE ' %' OR MAX(poltv3) == 0) THEN MAX(poltv3)  ELSE 'GOOD' END as poltv3_min_max_compare,
CASE WHEN MIN(poltv12)  == MAX( poltv12) THEN MAX(poltv12) WHEN (MIN(poltv12) IS NULL OR MIN(poltv12) == '' OR MIN(poltv12) LIKE ' %' OR MIN(poltv12) == 0) AND (MAX(poltv12) IS NULL OR MAX(poltv12) == '' OR MAX(poltv12) LIKE ' %' OR MAX(poltv12) == 0) THEN MAX(poltv12)  ELSE 'GOOD' END as poltv12_min_max_compare,
CASE WHEN MIN(rgm6)  == MAX( rgm6) THEN MAX(rgm6) WHEN (MIN(rgm6) IS NULL OR MIN(rgm6) == '' OR MIN(rgm6) LIKE ' %' OR MIN(rgm6) == 0) AND (MAX(rgm6) IS NULL OR MAX(rgm6) == '' OR MAX(rgm6) LIKE ' %' OR MAX(rgm6) == 0) THEN MAX(rgm6)  ELSE 'GOOD' END as rgm6_min_max_compare,
CASE WHEN MIN(scqqord)  == MAX( scqqord) THEN MAX(scqqord) WHEN (MIN(scqqord) IS NULL OR MIN(scqqord) == '' OR MIN(scqqord) LIKE ' %' OR MIN(scqqord) == 0) AND (MAX(scqqord) IS NULL OR MAX(scqqord) == '' OR MAX(scqqord) LIKE ' %' OR MAX(scqqord) == 0) THEN MAX(scqqord)  ELSE 'GOOD' END as scqqord_min_max_compare,
CASE WHEN MIN(sefrat4)  == MAX( sefrat4) THEN MAX(sefrat4) WHEN (MIN(sefrat4) IS NULL OR MIN(sefrat4) == '' OR MIN(sefrat4) LIKE ' %' OR MIN(sefrat4) == 0) AND (MAX(sefrat4) IS NULL OR MAX(sefrat4) == '' OR MAX(sefrat4) LIKE ' %' OR MAX(sefrat4) == 0) THEN MAX(sefrat4)  ELSE 'GOOD' END as sefrat4_min_max_compare,
CASE WHEN MIN(sord2y)  == MAX( sord2y) THEN MAX(sord2y) WHEN (MIN(sord2y) IS NULL OR MIN(sord2y) == '' OR MIN(sord2y) LIKE ' %' OR MIN(sord2y) == 0) AND (MAX(sord2y) IS NULL OR MAX(sord2y) == '' OR MAX(sord2y) LIKE ' %' OR MAX(sord2y) == 0) THEN MAX(sord2y)  ELSE 'GOOD' END as sord2y_min_max_compare,
CASE WHEN MIN(spppn2y)  == MAX( spppn2y) THEN MAX(spppn2y) WHEN (MIN(spppn2y) IS NULL OR MIN(spppn2y) == '' OR MIN(spppn2y) LIKE ' %' OR MIN(spppn2y) == 0) AND (MAX(spppn2y) IS NULL OR MAX(spppn2y) == '' OR MAX(spppn2y) LIKE ' %' OR MAX(spppn2y) == 0) THEN MAX(spppn2y)  ELSE 'GOOD' END as spppn2y_min_max_compare,
CASE WHEN MIN(tdays1)  == MAX( tdays1) THEN MAX(tdays1) WHEN (MIN(tdays1) IS NULL OR MIN(tdays1) == '' OR MIN(tdays1) LIKE ' %' OR MIN(tdays1) == 0) AND (MAX(tdays1) IS NULL OR MAX(tdays1) == '' OR MAX(tdays1) LIKE ' %' OR MAX(tdays1) == 0) THEN MAX(tdays1)  ELSE 'GOOD' END as tdays1_min_max_compare,
CASE WHEN MIN(tdays2)  == MAX( tdays2) THEN MAX(tdays2) WHEN (MIN(tdays2) IS NULL OR MIN(tdays2) == '' OR MIN(tdays2) LIKE ' %' OR MIN(tdays2) == 0) AND (MAX(tdays2) IS NULL OR MAX(tdays2) == '' OR MAX(tdays2) LIKE ' %' OR MAX(tdays2) == 0) THEN MAX(tdays2)  ELSE 'GOOD' END as tdays2_min_max_compare,
CASE WHEN MIN(topdor6)  == MAX( topdor6) THEN MAX(topdor6) WHEN (MIN(topdor6) IS NULL OR MIN(topdor6) == '' OR MIN(topdor6) LIKE ' %' OR MIN(topdor6) == 0) AND (MAX(topdor6) IS NULL OR MAX(topdor6) == '' OR MAX(topdor6) LIKE ' %' OR MAX(topdor6) == 0) THEN MAX(topdor6)  ELSE 'GOOD' END as topdor6_min_max_compare,
CASE WHEN MIN(totnnon1)  == MAX( totnnon1) THEN MAX(totnnon1) WHEN (MIN(totnnon1) IS NULL OR MIN(totnnon1) == '' OR MIN(totnnon1) LIKE ' %' OR MIN(totnnon1) == 0) AND (MAX(totnnon1) IS NULL OR MAX(totnnon1) == '' OR MAX(totnnon1) LIKE ' %' OR MAX(totnnon1) == 0) THEN MAX(totnnon1)  ELSE 'GOOD' END as totnnon1_min_max_compare,
CASE WHEN MIN(tprd1)  == MAX( tprd1) THEN MAX(tprd1) WHEN (MIN(tprd1) IS NULL OR MIN(tprd1) == '' OR MIN(tprd1) LIKE ' %' OR MIN(tprd1) == 0) AND (MAX(tprd1) IS NULL OR MAX(tprd1) == '' OR MAX(tprd1) LIKE ' %' OR MAX(tprd1) == 0) THEN MAX(tprd1)  ELSE 'GOOD' END as tprd1_min_max_compare,
CASE WHEN MIN(tprfudys)  == MAX( tprfudys) THEN MAX(tprfudys) WHEN (MIN(tprfudys) IS NULL OR MIN(tprfudys) == '' OR MIN(tprfudys) LIKE ' %' OR MIN(tprfudys) == 0) AND (MAX(tprfudys) IS NULL OR MAX(tprfudys) == '' OR MAX(tprfudys) LIKE ' %' OR MAX(tprfudys) == 0) THEN MAX(tprfudys)  ELSE 'GOOD' END as tprfudys_min_max_compare,
CASE WHEN MIN(trdys5)  == MAX( trdys5) THEN MAX(trdys5) WHEN (MIN(trdys5) IS NULL OR MIN(trdys5) == '' OR MIN(trdys5) LIKE ' %' OR MIN(trdys5) == 0) AND (MAX(trdys5) IS NULL OR MAX(trdys5) == '' OR MAX(trdys5) LIKE ' %' OR MAX(trdys5) == 0) THEN MAX(trdys5)  ELSE 'GOOD' END as trdys5_min_max_compare,
CASE WHEN MIN(tdys1)  == MAX( tdys1) THEN MAX(tdys1) WHEN (MIN(tdys1) IS NULL OR MIN(tdys1) == '' OR MIN(tdys1) LIKE ' %' OR MIN(tdys1) == 0) AND (MAX(tdys1) IS NULL OR MAX(tdys1) == '' OR MAX(tdys1) LIKE ' %' OR MAX(tdys1) == 0) THEN MAX(tdys1)  ELSE 'GOOD' END as tdys1_min_max_compare,
CASE WHEN MIN(vars601)  == MAX( vars601) THEN MAX(vars601) WHEN (MIN(vars601) IS NULL OR MIN(vars601) == '' OR MIN(vars601) LIKE ' %' OR MIN(vars601) == 0) AND (MAX(vars601) IS NULL OR MAX(vars601) == '' OR MAX(vars601) LIKE ' %' OR MAX(vars601) == 0) THEN MAX(vars601)  ELSE 'GOOD' END as vars601_min_max_compare,
CASE WHEN MIN(poltv1)  == MAX( poltv1) THEN MAX(poltv1) WHEN (MIN(poltv1) IS NULL OR MIN(poltv1) == '' OR MIN(poltv1) LIKE ' %' OR MIN(poltv1) == 0) AND (MAX(poltv1) IS NULL OR MAX(poltv1) == '' OR MAX(poltv1) LIKE ' %' OR MAX(poltv1) == 0) THEN MAX(poltv1)  ELSE 'GOOD' END as poltv1_min_max_compare,
CASE WHEN MIN(s2)  == MAX( s2) THEN MAX(s2) WHEN (MIN(s2) IS NULL OR MIN(s2) == '' OR MIN(s2) LIKE ' %' OR MIN(s2) == 0) AND (MAX(s2) IS NULL OR MAX(s2) == '' OR MAX(s2) LIKE ' %' OR MAX(s2) == 0) THEN MAX(s2)  ELSE 'GOOD' END as s2_min_max_compare,
CASE WHEN MIN(scqq_rat_tt_rev)  == MAX( scqq_rat_tt_rev) THEN MAX(scqq_rat_tt_rev) WHEN (MIN(scqq_rat_tt_rev) IS NULL OR MIN(scqq_rat_tt_rev) == '' OR MIN(scqq_rat_tt_rev) LIKE ' %' OR MIN(scqq_rat_tt_rev) == 0) AND (MAX(scqq_rat_tt_rev) IS NULL OR MAX(scqq_rat_tt_rev) == '' OR MAX(scqq_rat_tt_rev) LIKE ' %' OR MAX(scqq_rat_tt_rev) == 0) THEN MAX(scqq_rat_tt_rev)  ELSE 'GOOD' END as scqq_rat_tt_rev_min_max_compare,
CASE WHEN MIN(nefft1y)  == MAX( nefft1y) THEN MAX(nefft1y) WHEN (MIN(nefft1y) IS NULL OR MIN(nefft1y) == '' OR MIN(nefft1y) LIKE ' %' OR MIN(nefft1y) == 0) AND (MAX(nefft1y) IS NULL OR MAX(nefft1y) == '' OR MAX(nefft1y) LIKE ' %' OR MAX(nefft1y) == 0) THEN MAX(nefft1y)  ELSE 'GOOD' END as nefft1y_min_max_compare,
CASE WHEN MIN(npbydf1)  == MAX( npbydf1) THEN MAX(npbydf1) WHEN (MIN(npbydf1) IS NULL OR MIN(npbydf1) == '' OR MIN(npbydf1) LIKE ' %' OR MIN(npbydf1) == 0) AND (MAX(npbydf1) IS NULL OR MAX(npbydf1) == '' OR MAX(npbydf1) LIKE ' %' OR MAX(npbydf1) == 0) THEN MAX(npbydf1)  ELSE 'GOOD' END as npbydf1_min_max_compare,
CASE WHEN MIN(ndays1)  == MAX( ndays1) THEN MAX(ndays1) WHEN (MIN(ndays1) IS NULL OR MIN(ndays1) == '' OR MIN(ndays1) LIKE ' %' OR MIN(ndays1) == 0) AND (MAX(ndays1) IS NULL OR MAX(ndays1) == '' OR MAX(ndays1) LIKE ' %' OR MAX(ndays1) == 0) THEN MAX(ndays1)  ELSE 'GOOD' END as ndays1_min_max_compare,
CASE WHEN MIN(npprdy1)  == MAX( npprdy1) THEN MAX(npprdy1) WHEN (MIN(npprdy1) IS NULL OR MIN(npprdy1) == '' OR MIN(npprdy1) LIKE ' %' OR MIN(npprdy1) == 0) AND (MAX(npprdy1) IS NULL OR MAX(npprdy1) == '' OR MAX(npprdy1) LIKE ' %' OR MAX(npprdy1) == 0) THEN MAX(npprdy1)  ELSE 'GOOD' END as npprdy1_min_max_compare,
CASE WHEN MIN(max_days_delinq)  == MAX( max_days_delinq) THEN MAX(max_days_delinq) WHEN (MIN(max_days_delinq) IS NULL OR MIN(max_days_delinq) == '' OR MIN(max_days_delinq) LIKE ' %' OR MIN(max_days_delinq) == 0) AND (MAX(max_days_delinq) IS NULL OR MAX(max_days_delinq) == '' OR MAX(max_days_delinq) LIKE ' %' OR MAX(max_days_delinq) == 0) THEN MAX(max_days_delinq)  ELSE 'GOOD' END as max_days_delinq_min_max_compare,
CASE WHEN MIN(npuncctr)  == MAX( npuncctr) THEN MAX(npuncctr) WHEN (MIN(npuncctr) IS NULL OR MIN(npuncctr) == '' OR MIN(npuncctr) LIKE ' %' OR MIN(npuncctr) == 0) AND (MAX(npuncctr) IS NULL OR MAX(npuncctr) == '' OR MAX(npuncctr) LIKE ' %' OR MAX(npuncctr) == 0) THEN MAX(npuncctr)  ELSE 'GOOD' END as npuncctr_min_max_compare,
CASE WHEN MIN(npordt1)  == MAX( npordt1) THEN MAX(npordt1) WHEN (MIN(npordt1) IS NULL OR MIN(npordt1) == '' OR MIN(npordt1) LIKE ' %' OR MIN(npordt1) == 0) AND (MAX(npordt1) IS NULL OR MAX(npordt1) == '' OR MAX(npordt1) LIKE ' %' OR MAX(npordt1) == 0) THEN MAX(npordt1)  ELSE 'GOOD' END as npordt1_min_max_compare,
CASE WHEN MIN(purchx)  == MAX( purchx) THEN MAX(purchx) WHEN (MIN(purchx) IS NULL OR MIN(purchx) == '' OR MIN(purchx) LIKE ' %' OR MIN(purchx) == 0) AND (MAX(purchx) IS NULL OR MAX(purchx) == '' OR MAX(purchx) LIKE ' %' OR MAX(purchx) == 0) THEN MAX(purchx)  ELSE 'GOOD' END as purchx_min_max_compare,
CASE WHEN MIN(nppdsodl)  == MAX( nppdsodl) THEN MAX(nppdsodl) WHEN (MIN(nppdsodl) IS NULL OR MIN(nppdsodl) == '' OR MIN(nppdsodl) LIKE ' %' OR MIN(nppdsodl) == 0) AND (MAX(nppdsodl) IS NULL OR MAX(nppdsodl) == '' OR MAX(nppdsodl) LIKE ' %' OR MAX(nppdsodl) == 0) THEN MAX(nppdsodl)  ELSE 'GOOD' END as nppdsodl_min_max_compare,
CASE WHEN MIN(npprod)  == MAX( npprod) THEN MAX(npprod) WHEN (MIN(npprod) IS NULL OR MIN(npprod) == '' OR MIN(npprod) LIKE ' %' OR MIN(npprod) == 0) AND (MAX(npprod) IS NULL OR MAX(npprod) == '' OR MAX(npprod) LIKE ' %' OR MAX(npprod) == 0) THEN MAX(npprod)  ELSE 'GOOD' END as npprod_min_max_compare,
CASE WHEN MIN(dash_cust_ind)  == MAX( dash_cust_ind) THEN MAX(dash_cust_ind) WHEN (MIN(dash_cust_ind) IS NULL OR MIN(dash_cust_ind) == '' OR MIN(dash_cust_ind) LIKE ' %' OR MIN(dash_cust_ind) == 0) AND (MAX(dash_cust_ind) IS NULL OR MAX(dash_cust_ind) == '' OR MAX(dash_cust_ind) LIKE ' %' OR MAX(dash_cust_ind) == 0) THEN MAX(dash_cust_ind)  ELSE 'GOOD' END as dash_cust_ind_min_max_compare,
CASE WHEN MIN(selection_date)  == MAX( selection_date) THEN MAX(selection_date) WHEN (MIN(selection_date) IS NULL OR MIN(selection_date) == '' OR MIN(selection_date) LIKE ' %' OR MIN(selection_date) == 0) AND (MAX(selection_date) IS NULL OR MAX(selection_date) == '' OR MAX(selection_date) LIKE ' %' OR MAX(selection_date) == 0) THEN MAX(selection_date)  ELSE 'GOOD' END as selection_date_min_max_compare,
CASE WHEN MIN(curr_tt_paid)  == MAX( curr_tt_paid) THEN MAX(curr_tt_paid) WHEN (MIN(curr_tt_paid) IS NULL OR MIN(curr_tt_paid) == '' OR MIN(curr_tt_paid) LIKE ' %' OR MIN(curr_tt_paid) == 0) AND (MAX(curr_tt_paid) IS NULL OR MAX(curr_tt_paid) == '' OR MAX(curr_tt_paid) LIKE ' %' OR MAX(curr_tt_paid) == 0) THEN MAX(curr_tt_paid)  ELSE 'GOOD' END as curr_tt_paid_min_max_compare,
CASE WHEN MIN(curr_tt_rev)  == MAX( curr_tt_rev) THEN MAX(curr_tt_rev) WHEN (MIN(curr_tt_rev) IS NULL OR MIN(curr_tt_rev) == '' OR MIN(curr_tt_rev) LIKE ' %' OR MIN(curr_tt_rev) == 0) AND (MAX(curr_tt_rev) IS NULL OR MAX(curr_tt_rev) == '' OR MAX(curr_tt_rev) LIKE ' %' OR MAX(curr_tt_rev) == 0) THEN MAX(curr_tt_rev)  ELSE 'GOOD' END as curr_tt_rev_min_max_compare,
CASE WHEN MIN(ent1224)  == MAX( ent1224) THEN MAX(ent1224) WHEN (MIN(ent1224) IS NULL OR MIN(ent1224) == '' OR MIN(ent1224) LIKE ' %' OR MIN(ent1224) == 0) AND (MAX(ent1224) IS NULL OR MAX(ent1224) == '' OR MAX(ent1224) LIKE ' %' OR MAX(ent1224) == 0) THEN MAX(ent1224)  ELSE 'GOOD' END as ent1224_min_max_compare,
CASE WHEN MIN(hnopdys1)  == MAX( hnopdys1) THEN MAX(hnopdys1) WHEN (MIN(hnopdys1) IS NULL OR MIN(hnopdys1) == '' OR MIN(hnopdys1) LIKE ' %' OR MIN(hnopdys1) == 0) AND (MAX(hnopdys1) IS NULL OR MAX(hnopdys1) == '' OR MAX(hnopdys1) LIKE ' %' OR MAX(hnopdys1) == 0) THEN MAX(hnopdys1)  ELSE 'GOOD' END as hnopdys1_min_max_compare,
CASE WHEN MIN(nopbill12)  == MAX( nopbill12) THEN MAX(nopbill12) WHEN (MIN(nopbill12) IS NULL OR MIN(nopbill12) == '' OR MIN(nopbill12) LIKE ' %' OR MIN(nopbill12) == 0) AND (MAX(nopbill12) IS NULL OR MAX(nopbill12) == '' OR MAX(nopbill12) LIKE ' %' OR MAX(nopbill12) == 0) THEN MAX(nopbill12)  ELSE 'GOOD' END as nopbill12_min_max_compare,
CASE WHEN MIN(npnonrat)  == MAX( npnonrat) THEN MAX(npnonrat) WHEN (MIN(npnonrat) IS NULL OR MIN(npnonrat) == '' OR MIN(npnonrat) LIKE ' %' OR MIN(npnonrat) == 0) AND (MAX(npnonrat) IS NULL OR MAX(npnonrat) == '' OR MAX(npnonrat) LIKE ' %' OR MAX(npnonrat) == 0) THEN MAX(npnonrat)  ELSE 'GOOD' END as npnonrat_min_max_compare,
CASE WHEN MIN(npprd1)  == MAX( npprd1) THEN MAX(npprd1) WHEN (MIN(npprd1) IS NULL OR MIN(npprd1) == '' OR MIN(npprd1) LIKE ' %' OR MIN(npprd1) == 0) AND (MAX(npprd1) IS NULL OR MAX(npprd1) == '' OR MAX(npprd1) LIKE ' %' OR MAX(npprd1) == 0) THEN MAX(npprd1)  ELSE 'GOOD' END as npprd1_min_max_compare,
CASE WHEN MIN(npttnt3)  == MAX( npttnt3) THEN MAX(npttnt3) WHEN (MIN(npttnt3) IS NULL OR MIN(npttnt3) == '' OR MIN(npttnt3) LIKE ' %' OR MIN(npttnt3) == 0) AND (MAX(npttnt3) IS NULL OR MAX(npttnt3) == '' OR MAX(npttnt3) LIKE ' %' OR MAX(npttnt3) == 0) THEN MAX(npttnt3)  ELSE 'GOOD' END as npttnt3_min_max_compare,
CASE WHEN MIN(npvclrat)  == MAX( npvclrat) THEN MAX(npvclrat) WHEN (MIN(npvclrat) IS NULL OR MIN(npvclrat) == '' OR MIN(npvclrat) LIKE ' %' OR MIN(npvclrat) == 0) AND (MAX(npvclrat) IS NULL OR MAX(npvclrat) == '' OR MAX(npvclrat) LIKE ' %' OR MAX(npvclrat) == 0) THEN MAX(npvclrat)  ELSE 'GOOD' END as npvclrat_min_max_compare,
CASE WHEN MIN(ntranrat1y)  == MAX( ntranrat1y) THEN MAX(ntranrat1y) WHEN (MIN(ntranrat1y) IS NULL OR MIN(ntranrat1y) == '' OR MIN(ntranrat1y) LIKE ' %' OR MIN(ntranrat1y) == 0) AND (MAX(ntranrat1y) IS NULL OR MAX(ntranrat1y) == '' OR MAX(ntranrat1y) LIKE ' %' OR MAX(ntranrat1y) == 0) THEN MAX(ntranrat1y)  ELSE 'GOOD' END as ntranrat1y_min_max_compare,
CASE WHEN MIN(num_effs_mnth)  == MAX( num_effs_mnth) THEN MAX(num_effs_mnth) WHEN (MIN(num_effs_mnth) IS NULL OR MIN(num_effs_mnth) == '' OR MIN(num_effs_mnth) LIKE ' %' OR MIN(num_effs_mnth) == 0) AND (MAX(num_effs_mnth) IS NULL OR MAX(num_effs_mnth) == '' OR MAX(num_effs_mnth) LIKE ' %' OR MAX(num_effs_mnth) == 0) THEN MAX(num_effs_mnth)  ELSE 'GOOD' END as num_effs_mnth_min_max_compare,
CASE WHEN MIN(q3_tt_effort)  == MAX( q3_tt_effort) THEN MAX(q3_tt_effort) WHEN (MIN(q3_tt_effort) IS NULL OR MIN(q3_tt_effort) == '' OR MIN(q3_tt_effort) LIKE ' %' OR MIN(q3_tt_effort) == 0) AND (MAX(q3_tt_effort) IS NULL OR MAX(q3_tt_effort) == '' OR MAX(q3_tt_effort) LIKE ' %' OR MAX(q3_tt_effort) == 0) THEN MAX(q3_tt_effort)  ELSE 'GOOD' END as q3_tt_effort_min_max_compare,
CASE WHEN MIN(quat1_tt_eff)  == MAX( quat1_tt_eff) THEN MAX(quat1_tt_eff) WHEN (MIN(quat1_tt_eff) IS NULL OR MIN(quat1_tt_eff) == '' OR MIN(quat1_tt_eff) LIKE ' %' OR MIN(quat1_tt_eff) == 0) AND (MAX(quat1_tt_eff) IS NULL OR MAX(quat1_tt_eff) == '' OR MAX(quat1_tt_eff) LIKE ' %' OR MAX(quat1_tt_eff) == 0) THEN MAX(quat1_tt_eff)  ELSE 'GOOD' END as quat1_tt_eff_min_max_compare,
CASE WHEN MIN(sefft6m)  == MAX( sefft6m) THEN MAX(sefft6m) WHEN (MIN(sefft6m) IS NULL OR MIN(sefft6m) == '' OR MIN(sefft6m) LIKE ' %' OR MIN(sefft6m) == 0) AND (MAX(sefft6m) IS NULL OR MAX(sefft6m) == '' OR MAX(sefft6m) LIKE ' %' OR MAX(sefft6m) == 0) THEN MAX(sefft6m)  ELSE 'GOOD' END as sefft6m_min_max_compare,
CASE WHEN MIN(sefrat1)  == MAX( sefrat1) THEN MAX(sefrat1) WHEN (MIN(sefrat1) IS NULL OR MIN(sefrat1) == '' OR MIN(sefrat1) LIKE ' %' OR MIN(sefrat1) == 0) AND (MAX(sefrat1) IS NULL OR MAX(sefrat1) == '' OR MAX(sefrat1) LIKE ' %' OR MAX(sefrat1) == 0) THEN MAX(sefrat1)  ELSE 'GOOD' END as sefrat1_min_max_compare,
CASE WHEN MIN(tdays3)  == MAX( tdays3) THEN MAX(tdays3) WHEN (MIN(tdays3) IS NULL OR MIN(tdays3) == '' OR MIN(tdays3) LIKE ' %' OR MIN(tdays3) == 0) AND (MAX(tdays3) IS NULL OR MAX(tdays3) == '' OR MAX(tdays3) LIKE ' %' OR MAX(tdays3) == 0) THEN MAX(tdays3)  ELSE 'GOOD' END as tdays3_min_max_compare,
CASE WHEN MIN(tvclpro)  == MAX( tvclpro) THEN MAX(tvclpro) WHEN (MIN(tvclpro) IS NULL OR MIN(tvclpro) == '' OR MIN(tvclpro) LIKE ' %' OR MIN(tvclpro) == 0) AND (MAX(tvclpro) IS NULL OR MAX(tvclpro) == '' OR MAX(tvclpro) LIKE ' %' OR MAX(tvclpro) == 0) THEN MAX(tvclpro)  ELSE 'GOOD' END as tvclpro_min_max_compare
from uat_im_calc_engine.agg_oflnsel_hybridmod321b ;



CCR Scores
==========
select count(*) from uat_im_calc_engine_exchange.oflnsel_hybridccr_scores;

select cust_id,count(*) 
from uat_im_calc_engine_exchange.oflnsel_hybridccr_scores 
group by cust_id
having count(*) > 1
order by cust_id
;


!ls -l /mapr/JMAPRCLUP01.CLASSIC.PCHAD.COM/exchange/analytics/uat/scores/oflnsel_hybridccr_scores ;

describe uat_im_calc_engine_exchange.oflnsel_hybridccr_scores ;

select substr(from_unixtime(unix_timestamp(cast(cast(selection_dt as int) as string),'yyyyDDD')),1,10) as selection_dt,count(*) from uat_im_calc_engine_exchange.oflnsel_hybridccr_scores
group by  substr(from_unixtime(unix_timestamp(cast(cast(selection_dt as int) as string),'yyyyDDD')),1,10) ;

select mailid,count(*) 
from uat_im_calc_engine_exchange.oflnsel_hybridccr_scores 
group by mailid
order by mailid
;


SELECT COUNT(*) AS TABLE_COUNT,
case when COUNT(*) ==  SUM(CASE WHEN cust_id IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS cust_id_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN selection_dt IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS selection_dt_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN score IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS score_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN rank IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS rank_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN score_date IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS score_date_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN model_nm IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS model_nm_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN mailid IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS mailid_AllNULL_Ind
from uat_im_calc_engine_exchange.oflnsel_hybridccr_scores ;

SELECT COUNT(*) AS TABLE_COUNT,
CASE WHEN MIN(cust_id)  == MAX( cust_id) THEN MAX(cust_id) WHEN (MIN(cust_id) IS NULL OR MIN(cust_id) == '' OR MIN(cust_id) LIKE ' %' OR MIN(cust_id) == 0) AND (MAX(cust_id) IS NULL OR MAX(cust_id) == '' OR MAX(cust_id) LIKE ' %' OR MAX(cust_id) == 0) THEN MAX(cust_id)  ELSE 'GOOD' END as cust_id_min_max_compare,
CASE WHEN MIN(selection_dt)  == MAX( selection_dt) THEN MAX(selection_dt) WHEN (MIN(selection_dt) IS NULL OR MIN(selection_dt) == '' OR MIN(selection_dt) LIKE ' %' OR MIN(selection_dt) == 0) AND (MAX(selection_dt) IS NULL OR MAX(selection_dt) == '' OR MAX(selection_dt) LIKE ' %' OR MAX(selection_dt) == 0) THEN MAX(selection_dt)  ELSE 'GOOD' END as selection_dt_min_max_compare,
CASE WHEN MIN(score)  == MAX( score) THEN MAX(score) WHEN (MIN(score) IS NULL OR MIN(score) == '' OR MIN(score) LIKE ' %' OR MIN(score) == 0) AND (MAX(score) IS NULL OR MAX(score) == '' OR MAX(score) LIKE ' %' OR MAX(score) == 0) THEN MAX(score)  ELSE 'GOOD' END as score_min_max_compare,
CASE WHEN MIN(rank)  == MAX( rank) THEN MAX(rank) WHEN (MIN(rank) IS NULL OR MIN(rank) == '' OR MIN(rank) LIKE ' %' OR MIN(rank) == 0) AND (MAX(rank) IS NULL OR MAX(rank) == '' OR MAX(rank) LIKE ' %' OR MAX(rank) == 0) THEN MAX(rank)  ELSE 'GOOD' END as rank_min_max_compare,
CASE WHEN MIN(score_date)  == MAX( score_date) THEN MAX(score_date) WHEN (MIN(score_date) IS NULL OR MIN(score_date) == '' OR MIN(score_date) LIKE ' %' OR MIN(score_date) == 0) AND (MAX(score_date) IS NULL OR MAX(score_date) == '' OR MAX(score_date) LIKE ' %' OR MAX(score_date) == 0) THEN MAX(score_date)  ELSE 'GOOD' END as score_date_min_max_compare,
CASE WHEN MIN(model_nm)  == MAX( model_nm) THEN MAX(model_nm) WHEN (MIN(model_nm) IS NULL OR MIN(model_nm) == '' OR MIN(model_nm) LIKE ' %' OR MIN(model_nm) == 0) AND (MAX(model_nm) IS NULL OR MAX(model_nm) == '' OR MAX(model_nm) LIKE ' %' OR MAX(model_nm) == 0) THEN MAX(model_nm)  ELSE 'GOOD' END as model_nm_min_max_compare,
CASE WHEN MIN(mailid)  == MAX( mailid) THEN MAX(mailid) WHEN (MIN(mailid) IS NULL OR MIN(mailid) == '' OR MIN(mailid) LIKE ' %' OR MIN(mailid) == 0) AND (MAX(mailid) IS NULL OR MAX(mailid) == '' OR MAX(mailid) LIKE ' %' OR MAX(mailid) == 0) THEN MAX(mailid)  ELSE 'GOOD' END as mailid_min_max_compare
from uat_im_calc_engine_exchange.oflnsel_hybridccr_scores ;


select model_nm, selection_dt, rank, mailid,score_date,count(*) 
from uat_im_calc_engine_exchange.oflnsel_hybridccr_scores 
group by model_nm, selection_dt, rank, mailid,score_date 
order by model_nm, selection_dt, rank, mailid,score_date ;





MOD321 Scores
=============
select count(*) from uat_im_calc_engine_exchange.oflnsel_hybridmod321_scores;

select cust_id,count(*) 
from uat_im_calc_engine_exchange.oflnsel_hybridmod321_scores 
group by cust_id
having count(*) > 1
order by cust_id
;


!ls -l /mapr/JMAPRCLUP01.CLASSIC.PCHAD.COM/exchange/analytics/uat/scores/oflnsel_hybridmod321_scores ;

describe uat_im_calc_engine_exchange.oflnsel_hybridmod321_scores;

select substr(from_unixtime(unix_timestamp(cast(cast(selection_dt as int) as string),'yyyyDDD')),1,10) as selection_dt,paradigm,count(*) from uat_im_calc_engine_exchange.oflnsel_hybridmod321_scores
group by  substr(from_unixtime(unix_timestamp(cast(cast(selection_dt as int) as string),'yyyyDDD')),1,10),paradigm ;


SELECT COUNT(*) AS TABLE_COUNT,
case when COUNT(*) ==  SUM(CASE WHEN cust_id IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS cust_id_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN model_nm IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS model_nm_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN geographic_loc IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS geographic_loc_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN score_no IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS score_no_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN customer_strength IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS customer_strength_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN selection_dt IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS selection_dt_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN mailing_ct IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS mailing_ct_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN paradigm IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS paradigm_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN score_date IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS score_date_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN mag_total IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS mag_total_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN merch_general IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS merch_general_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN total_mag_merch IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS total_mag_merch_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN auto_ship IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS auto_ship_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN top_coincident_x IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS top_coincident_x_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN top_main_x IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS top_main_x_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN deeper_main_x IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS deeper_main_x_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN valid_mail_count IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS valid_mail_count_AllNULL_Ind
from uat_im_calc_engine_exchange.oflnsel_hybridmod321_scores ;


SELECT COUNT(*) AS TABLE_COUNT,
CASE WHEN MIN(cust_id)  == MAX( cust_id) THEN MAX(cust_id) WHEN (MIN(cust_id) IS NULL OR MIN(cust_id) == '' OR MIN(cust_id) LIKE ' %' OR MIN(cust_id) == 0) AND (MAX(cust_id) IS NULL OR MAX(cust_id) == '' OR MAX(cust_id) LIKE ' %' OR MAX(cust_id) == 0) THEN MAX(cust_id)  ELSE 'GOOD' END as cust_id_min_max_compare,
CASE WHEN MIN(model_nm)  == MAX( model_nm) THEN MAX(model_nm) WHEN (MIN(model_nm) IS NULL OR MIN(model_nm) == '' OR MIN(model_nm) LIKE ' %' OR MIN(model_nm) == 0) AND (MAX(model_nm) IS NULL OR MAX(model_nm) == '' OR MAX(model_nm) LIKE ' %' OR MAX(model_nm) == 0) THEN MAX(model_nm)  ELSE 'GOOD' END as model_nm_min_max_compare,
CASE WHEN MIN(geographic_loc)  == MAX( geographic_loc) THEN MAX(geographic_loc) WHEN (MIN(geographic_loc) IS NULL OR MIN(geographic_loc) == '' OR MIN(geographic_loc) LIKE ' %' OR MIN(geographic_loc) == 0) AND (MAX(geographic_loc) IS NULL OR MAX(geographic_loc) == '' OR MAX(geographic_loc) LIKE ' %' OR MAX(geographic_loc) == 0) THEN MAX(geographic_loc)  ELSE 'GOOD' END as geographic_loc_min_max_compare,
CASE WHEN MIN(score_no)  == MAX( score_no) THEN MAX(score_no) WHEN (MIN(score_no) IS NULL OR MIN(score_no) == '' OR MIN(score_no) LIKE ' %' OR MIN(score_no) == 0) AND (MAX(score_no) IS NULL OR MAX(score_no) == '' OR MAX(score_no) LIKE ' %' OR MAX(score_no) == 0) THEN MAX(score_no)  ELSE 'GOOD' END as score_no_min_max_compare,
CASE WHEN MIN(customer_strength)  == MAX( customer_strength) THEN MAX(customer_strength) WHEN (MIN(customer_strength) IS NULL OR MIN(customer_strength) == '' OR MIN(customer_strength) LIKE ' %' OR MIN(customer_strength) == 0) AND (MAX(customer_strength) IS NULL OR MAX(customer_strength) == '' OR MAX(customer_strength) LIKE ' %' OR MAX(customer_strength) == 0) THEN MAX(customer_strength)  ELSE 'GOOD' END as customer_strength_min_max_compare,
CASE WHEN MIN(selection_dt)  == MAX( selection_dt) THEN MAX(selection_dt) WHEN (MIN(selection_dt) IS NULL OR MIN(selection_dt) == '' OR MIN(selection_dt) LIKE ' %' OR MIN(selection_dt) == 0) AND (MAX(selection_dt) IS NULL OR MAX(selection_dt) == '' OR MAX(selection_dt) LIKE ' %' OR MAX(selection_dt) == 0) THEN MAX(selection_dt)  ELSE 'GOOD' END as selection_dt_min_max_compare,
CASE WHEN MIN(mailing_ct)  == MAX( mailing_ct) THEN MAX(mailing_ct) WHEN (MIN(mailing_ct) IS NULL OR MIN(mailing_ct) == '' OR MIN(mailing_ct) LIKE ' %' OR MIN(mailing_ct) == 0) AND (MAX(mailing_ct) IS NULL OR MAX(mailing_ct) == '' OR MAX(mailing_ct) LIKE ' %' OR MAX(mailing_ct) == 0) THEN MAX(mailing_ct)  ELSE 'GOOD' END as mailing_ct_min_max_compare,
CASE WHEN MIN(paradigm)  == MAX( paradigm) THEN MAX(paradigm) WHEN (MIN(paradigm) IS NULL OR MIN(paradigm) == '' OR MIN(paradigm) LIKE ' %' OR MIN(paradigm) == 0) AND (MAX(paradigm) IS NULL OR MAX(paradigm) == '' OR MAX(paradigm) LIKE ' %' OR MAX(paradigm) == 0) THEN MAX(paradigm)  ELSE 'GOOD' END as paradigm_min_max_compare,
CASE WHEN MIN(score_date)  == MAX( score_date) THEN MAX(score_date) WHEN (MIN(score_date) IS NULL OR MIN(score_date) == '' OR MIN(score_date) LIKE ' %' OR MIN(score_date) == 0) AND (MAX(score_date) IS NULL OR MAX(score_date) == '' OR MAX(score_date) LIKE ' %' OR MAX(score_date) == 0) THEN MAX(score_date)  ELSE 'GOOD' END as score_date_min_max_compare,
CASE WHEN MIN(mag_total)  == MAX( mag_total) THEN MAX(mag_total) WHEN (MIN(mag_total) IS NULL OR MIN(mag_total) == '' OR MIN(mag_total) LIKE ' %' OR MIN(mag_total) == 0) AND (MAX(mag_total) IS NULL OR MAX(mag_total) == '' OR MAX(mag_total) LIKE ' %' OR MAX(mag_total) == 0) THEN MAX(mag_total)  ELSE 'GOOD' END as mag_total_min_max_compare,
CASE WHEN MIN(merch_general)  == MAX( merch_general) THEN MAX(merch_general) WHEN (MIN(merch_general) IS NULL OR MIN(merch_general) == '' OR MIN(merch_general) LIKE ' %' OR MIN(merch_general) == 0) AND (MAX(merch_general) IS NULL OR MAX(merch_general) == '' OR MAX(merch_general) LIKE ' %' OR MAX(merch_general) == 0) THEN MAX(merch_general)  ELSE 'GOOD' END as merch_general_min_max_compare,
CASE WHEN MIN(total_mag_merch)  == MAX( total_mag_merch) THEN MAX(total_mag_merch) WHEN (MIN(total_mag_merch) IS NULL OR MIN(total_mag_merch) == '' OR MIN(total_mag_merch) LIKE ' %' OR MIN(total_mag_merch) == 0) AND (MAX(total_mag_merch) IS NULL OR MAX(total_mag_merch) == '' OR MAX(total_mag_merch) LIKE ' %' OR MAX(total_mag_merch) == 0) THEN MAX(total_mag_merch)  ELSE 'GOOD' END as total_mag_merch_min_max_compare,
CASE WHEN MIN(auto_ship)  == MAX( auto_ship) THEN MAX(auto_ship) WHEN (MIN(auto_ship) IS NULL OR MIN(auto_ship) == '' OR MIN(auto_ship) LIKE ' %' OR MIN(auto_ship) == 0) AND (MAX(auto_ship) IS NULL OR MAX(auto_ship) == '' OR MAX(auto_ship) LIKE ' %' OR MAX(auto_ship) == 0) THEN MAX(auto_ship)  ELSE 'GOOD' END as auto_ship_min_max_compare,
CASE WHEN MIN(top_coincident_x)  == MAX( top_coincident_x) THEN MAX(top_coincident_x) WHEN (MIN(top_coincident_x) IS NULL OR MIN(top_coincident_x) == '' OR MIN(top_coincident_x) LIKE ' %' OR MIN(top_coincident_x) == 0) AND (MAX(top_coincident_x) IS NULL OR MAX(top_coincident_x) == '' OR MAX(top_coincident_x) LIKE ' %' OR MAX(top_coincident_x) == 0) THEN MAX(top_coincident_x)  ELSE 'GOOD' END as top_coincident_x_min_max_compare,
CASE WHEN MIN(top_main_x)  == MAX( top_main_x) THEN MAX(top_main_x) WHEN (MIN(top_main_x) IS NULL OR MIN(top_main_x) == '' OR MIN(top_main_x) LIKE ' %' OR MIN(top_main_x) == 0) AND (MAX(top_main_x) IS NULL OR MAX(top_main_x) == '' OR MAX(top_main_x) LIKE ' %' OR MAX(top_main_x) == 0) THEN MAX(top_main_x)  ELSE 'GOOD' END as top_main_x_min_max_compare,
CASE WHEN MIN(deeper_main_x)  == MAX( deeper_main_x) THEN MAX(deeper_main_x) WHEN (MIN(deeper_main_x) IS NULL OR MIN(deeper_main_x) == '' OR MIN(deeper_main_x) LIKE ' %' OR MIN(deeper_main_x) == 0) AND (MAX(deeper_main_x) IS NULL OR MAX(deeper_main_x) == '' OR MAX(deeper_main_x) LIKE ' %' OR MAX(deeper_main_x) == 0) THEN MAX(deeper_main_x)  ELSE 'GOOD' END as deeper_main_x_min_max_compare,
CASE WHEN MIN(valid_mail_count)  == MAX( valid_mail_count) THEN MAX(valid_mail_count) WHEN (MIN(valid_mail_count) IS NULL OR MIN(valid_mail_count) == '' OR MIN(valid_mail_count) LIKE ' %' OR MIN(valid_mail_count) == 0) AND (MAX(valid_mail_count) IS NULL OR MAX(valid_mail_count) == '' OR MAX(valid_mail_count) LIKE ' %' OR MAX(valid_mail_count) == 0) THEN MAX(valid_mail_count)  ELSE 'GOOD' END as valid_mail_count_min_max_compare
from uat_im_calc_engine_exchange.oflnsel_hybridmod321_scores ;




select model_nm,geographic_loc,selection_dt,customer_strength,mailing_ct,paradigm,score_date,mag_total,merch_general,total_mag_merch,auto_ship,top_coincident_x,top_main_x,deeper_main_x,valid_mail_count,count(*) 
from uat_im_calc_engine_exchange.oflnsel_hybridmod321_scores 
group by model_nm,geographic_loc,selection_dt,customer_strength,mailing_ct,paradigm,score_date,mag_total,merch_general,total_mag_merch,auto_ship,top_coincident_x,top_main_x,deeper_main_x,valid_mail_count
order by model_nm,geographic_loc,selection_dt,customer_strength,mailing_ct,paradigm,score_date,mag_total,merch_general,total_mag_merch,auto_ship,top_coincident_x,top_main_x,deeper_main_x,valid_mail_count ;




MOD321b Scores
===============
select count(*) from uat_im_calc_engine_exchange.oflnsel_hybridmodb_scores ;

select effort_id,cust_id,count(*) from uat_im_calc_engine_exchange.oflnsel_hybridmodb_scores
group by effort_id,cust_id
having count(*) > 1
order by effort_id,cust_id
;

!ls -l /mapr/JMAPRCLUP01.CLASSIC.PCHAD.COM/exchange/analytics/uat/scores/oflnsel_hybridmodb_scores ;

describe uat_im_calc_engine_exchange.oflnsel_hybridmodb_scores ;


select substr(from_unixtime(unix_timestamp(cast(cast(selection_dt as int) as string),'yyyyDDD')),1,10) as selection_dt,count(*) from uat_im_calc_engine_exchange.oflnsel_hybridmodb_scores
group by  substr(from_unixtime(unix_timestamp(cast(cast(selection_dt as int) as string),'yyyyDDD')),1,10) ;

select effort_id,count(*) from uat_im_calc_engine_exchange.oflnsel_hybridmodb_scores 
group by effort_id
order by effort_id ;


SELECT COUNT(*) AS TABLE_COUNT,
case when COUNT(*) ==  SUM(CASE WHEN cust_id IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS cust_id_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN effort_id IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS effort_id_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN suffix IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS suffix_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN rank IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS rank_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN score IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS score_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN selection_dt IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS selection_dt_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN score_date IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS score_date_AllNULL_Ind
from uat_im_calc_engine_exchange.oflnsel_hybridmodb_scores ;


SELECT COUNT(*) AS TABLE_COUNT,
CASE WHEN MIN(cust_id)  == MAX( cust_id) THEN MAX(cust_id) WHEN (MIN(cust_id) IS NULL OR MIN(cust_id) == '' OR MIN(cust_id) LIKE ' %' OR MIN(cust_id) == 0) AND (MAX(cust_id) IS NULL OR MAX(cust_id) == '' OR MAX(cust_id) LIKE ' %' OR MAX(cust_id) == 0) THEN MAX(cust_id)  ELSE 'GOOD' END as cust_id_min_max_compare,
CASE WHEN MIN(effort_id)  == MAX( effort_id) THEN MAX(effort_id) WHEN (MIN(effort_id) IS NULL OR MIN(effort_id) == '' OR MIN(effort_id) LIKE ' %' OR MIN(effort_id) == 0) AND (MAX(effort_id) IS NULL OR MAX(effort_id) == '' OR MAX(effort_id) LIKE ' %' OR MAX(effort_id) == 0) THEN MAX(effort_id)  ELSE 'GOOD' END as effort_id_min_max_compare,
CASE WHEN MIN(suffix)  == MAX( suffix) THEN MAX(suffix) WHEN (MIN(suffix) IS NULL OR MIN(suffix) == '' OR MIN(suffix) LIKE ' %' OR MIN(suffix) == 0) AND (MAX(suffix) IS NULL OR MAX(suffix) == '' OR MAX(suffix) LIKE ' %' OR MAX(suffix) == 0) THEN MAX(suffix)  ELSE 'GOOD' END as suffix_min_max_compare,
CASE WHEN MIN(rank)  == MAX( rank) THEN MAX(rank) WHEN (MIN(rank) IS NULL OR MIN(rank) == '' OR MIN(rank) LIKE ' %' OR MIN(rank) == 0) AND (MAX(rank) IS NULL OR MAX(rank) == '' OR MAX(rank) LIKE ' %' OR MAX(rank) == 0) THEN MAX(rank)  ELSE 'GOOD' END as rank_min_max_compare,
CASE WHEN MIN(score)  == MAX( score) THEN MAX(score) WHEN (MIN(score) IS NULL OR MIN(score) == '' OR MIN(score) LIKE ' %' OR MIN(score) == 0) AND (MAX(score) IS NULL OR MAX(score) == '' OR MAX(score) LIKE ' %' OR MAX(score) == 0) THEN MAX(score)  ELSE 'GOOD' END as score_min_max_compare,
CASE WHEN MIN(selection_dt)  == MAX( selection_dt) THEN MAX(selection_dt) WHEN (MIN(selection_dt) IS NULL OR MIN(selection_dt) == '' OR MIN(selection_dt) LIKE ' %' OR MIN(selection_dt) == 0) AND (MAX(selection_dt) IS NULL OR MAX(selection_dt) == '' OR MAX(selection_dt) LIKE ' %' OR MAX(selection_dt) == 0) THEN MAX(selection_dt)  ELSE 'GOOD' END as selection_dt_min_max_compare,
CASE WHEN MIN(score_date)  == MAX( score_date) THEN MAX(score_date) WHEN (MIN(score_date) IS NULL OR MIN(score_date) == '' OR MIN(score_date) LIKE ' %' OR MIN(score_date) == 0) AND (MAX(score_date) IS NULL OR MAX(score_date) == '' OR MAX(score_date) LIKE ' %' OR MAX(score_date) == 0) THEN MAX(score_date)  ELSE 'GOOD' END as score_date_min_max_compare
from uat_im_calc_engine_exchange.oflnsel_hybridmodb_scores ;


select effort_id,suffix,rank,selection_dt,score_date,count(*) 
from uat_im_calc_engine_exchange.oflnsel_hybridmodb_scores
group by effort_id,suffix,rank,selection_dt,score_date
order by effort_id,suffix,rank,selection_dt,score_date ;


Hybrid Input
===============
select count(*) from uat_im_calc_engine.agg_oflnsel_hybridinput;

SELECT COUNT(*) AS TABLE_COUNT,
case when COUNT(*) ==  SUM(CASE WHEN cust_id IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS cust_id_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN cust_part_seq_no IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS cust_part_seq_no_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN extract_run_ts IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS extract_run_ts_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN campaign_cd IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS campaign_cd_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN flowchart_id IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS flowchart_id_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN flowchart_run_id IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS flowchart_run_id_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN selection_year IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS selection_year_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN selection_week IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS selection_week_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN delivery_paradigm_year IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS delivery_paradigm_year_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN delivery_paradigm_week IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS delivery_paradigm_week_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN variable_derived_dt IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS variable_derived_dt_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN selection_dt IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS selection_dt_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN line_of_business IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS line_of_business_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN effort_id IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS effort_id_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN effort_type_cd IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS effort_type_cd_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN geo_loc IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS geo_loc_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN zipcode IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS zipcode_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN cust_st_prov_cd IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS cust_st_prov_cd_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN cust_st_prov_abr IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS cust_st_prov_abr_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN stream_cd IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS stream_cd_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN distant_ind IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS distant_ind_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN mc_last_init_exist IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS mc_last_init_exist_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN mc_first_init_exist IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS mc_first_init_exist_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN dash_cust_ind IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS dash_cust_ind_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN initial_selection_segment IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS initial_selection_segment_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN initial_mailing_key IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS initial_mailing_key_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN initial_score_no IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS initial_score_no_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN initial_model_name IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS initial_model_name_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN initial_expected_value_amt IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS initial_expected_value_amt_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN random_sample_ind IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS random_sample_ind_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN force_inclusion_ind IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS force_inclusion_ind_AllNULL_Ind
from uat_im_calc_engine.agg_oflnsel_hybridinput;


select effort_id,count(distinct cust_id) as distinct_custids, 
count(*) as custids_count,count(*) - count(distinct cust_id) as  Duplicate_CustIds
from uat_im_calc_engine.agg_oflnsel_hybridinput
group by effort_id order by effort_id
;

select cust_id, effort_id, count(*) from uat_im_calc_engine.agg_oflnsel_hybridinput 
group by cust_id, effort_id having count(*) > 1
order by cust_id, effort_id
;

!ls -l /mapr/JMAPRCLUP01.CLASSIC.PCHAD.COM/im/calcengine/uat/hot/oflnsel/aggdata/agg_oflnsel_hybridinput ;

describe uat_im_calc_engine.agg_oflnsel_hybridinput ;



SELECT COUNT(*) AS TABLE_COUNT,
CASE WHEN MIN(cust_id)  == MAX( cust_id) THEN MAX(cust_id) WHEN (MIN(cust_id) IS NULL OR MIN(cust_id) == '' OR MIN(cust_id) LIKE ' %' OR MIN(cust_id) == 0) AND (MAX(cust_id) IS NULL OR MAX(cust_id) == '' OR MAX(cust_id) LIKE ' %' OR MAX(cust_id) == 0) THEN MAX(cust_id)  ELSE 'GOOD' END as cust_id_min_max_compare,
CASE WHEN MIN(cust_part_seq_no)  == MAX( cust_part_seq_no) THEN MAX(cust_part_seq_no) WHEN (MIN(cust_part_seq_no) IS NULL OR MIN(cust_part_seq_no) == '' OR MIN(cust_part_seq_no) LIKE ' %' OR MIN(cust_part_seq_no) == 0) AND (MAX(cust_part_seq_no) IS NULL OR MAX(cust_part_seq_no) == '' OR MAX(cust_part_seq_no) LIKE ' %' OR MAX(cust_part_seq_no) == 0) THEN MAX(cust_part_seq_no)  ELSE 'GOOD' END as cust_part_seq_no_min_max_compare,
CASE WHEN MIN(extract_run_ts)  == MAX( extract_run_ts) THEN MAX(extract_run_ts) WHEN (MIN(extract_run_ts) IS NULL OR MIN(extract_run_ts) == '' OR MIN(extract_run_ts) LIKE ' %' OR MIN(extract_run_ts) == 0) AND (MAX(extract_run_ts) IS NULL OR MAX(extract_run_ts) == '' OR MAX(extract_run_ts) LIKE ' %' OR MAX(extract_run_ts) == 0) THEN MAX(extract_run_ts)  ELSE 'GOOD' END as extract_run_ts_min_max_compare,
CASE WHEN MIN(campaign_cd)  == MAX( campaign_cd) THEN MAX(campaign_cd) WHEN (MIN(campaign_cd) IS NULL OR MIN(campaign_cd) == '' OR MIN(campaign_cd) LIKE ' %' OR MIN(campaign_cd) == 0) AND (MAX(campaign_cd) IS NULL OR MAX(campaign_cd) == '' OR MAX(campaign_cd) LIKE ' %' OR MAX(campaign_cd) == 0) THEN MAX(campaign_cd)  ELSE 'GOOD' END as campaign_cd_min_max_compare,
CASE WHEN MIN(flowchart_id)  == MAX( flowchart_id) THEN MAX(flowchart_id) WHEN (MIN(flowchart_id) IS NULL OR MIN(flowchart_id) == '' OR MIN(flowchart_id) LIKE ' %' OR MIN(flowchart_id) == 0) AND (MAX(flowchart_id) IS NULL OR MAX(flowchart_id) == '' OR MAX(flowchart_id) LIKE ' %' OR MAX(flowchart_id) == 0) THEN MAX(flowchart_id)  ELSE 'GOOD' END as flowchart_id_min_max_compare,
CASE WHEN MIN(flowchart_run_id)  == MAX( flowchart_run_id) THEN MAX(flowchart_run_id) WHEN (MIN(flowchart_run_id) IS NULL OR MIN(flowchart_run_id) == '' OR MIN(flowchart_run_id) LIKE ' %' OR MIN(flowchart_run_id) == 0) AND (MAX(flowchart_run_id) IS NULL OR MAX(flowchart_run_id) == '' OR MAX(flowchart_run_id) LIKE ' %' OR MAX(flowchart_run_id) == 0) THEN MAX(flowchart_run_id)  ELSE 'GOOD' END as flowchart_run_id_min_max_compare,
CASE WHEN MIN(selection_year)  == MAX( selection_year) THEN MAX(selection_year) WHEN (MIN(selection_year) IS NULL OR MIN(selection_year) == '' OR MIN(selection_year) LIKE ' %' OR MIN(selection_year) == 0) AND (MAX(selection_year) IS NULL OR MAX(selection_year) == '' OR MAX(selection_year) LIKE ' %' OR MAX(selection_year) == 0) THEN MAX(selection_year)  ELSE 'GOOD' END as selection_year_min_max_compare,
CASE WHEN MIN(selection_week)  == MAX( selection_week) THEN MAX(selection_week) WHEN (MIN(selection_week) IS NULL OR MIN(selection_week) == '' OR MIN(selection_week) LIKE ' %' OR MIN(selection_week) == 0) AND (MAX(selection_week) IS NULL OR MAX(selection_week) == '' OR MAX(selection_week) LIKE ' %' OR MAX(selection_week) == 0) THEN MAX(selection_week)  ELSE 'GOOD' END as selection_week_min_max_compare,
CASE WHEN MIN(delivery_paradigm_year)  == MAX( delivery_paradigm_year) THEN MAX(delivery_paradigm_year) WHEN (MIN(delivery_paradigm_year) IS NULL OR MIN(delivery_paradigm_year) == '' OR MIN(delivery_paradigm_year) LIKE ' %' OR MIN(delivery_paradigm_year) == 0) AND (MAX(delivery_paradigm_year) IS NULL OR MAX(delivery_paradigm_year) == '' OR MAX(delivery_paradigm_year) LIKE ' %' OR MAX(delivery_paradigm_year) == 0) THEN MAX(delivery_paradigm_year)  ELSE 'GOOD' END as delivery_paradigm_year_min_max_compare,
CASE WHEN MIN(delivery_paradigm_week)  == MAX( delivery_paradigm_week) THEN MAX(delivery_paradigm_week) WHEN (MIN(delivery_paradigm_week) IS NULL OR MIN(delivery_paradigm_week) == '' OR MIN(delivery_paradigm_week) LIKE ' %' OR MIN(delivery_paradigm_week) == 0) AND (MAX(delivery_paradigm_week) IS NULL OR MAX(delivery_paradigm_week) == '' OR MAX(delivery_paradigm_week) LIKE ' %' OR MAX(delivery_paradigm_week) == 0) THEN MAX(delivery_paradigm_week)  ELSE 'GOOD' END as delivery_paradigm_week_min_max_compare,
CASE WHEN MIN(variable_derived_dt)  == MAX( variable_derived_dt) THEN MAX(variable_derived_dt) WHEN (MIN(variable_derived_dt) IS NULL OR MIN(variable_derived_dt) == '' OR MIN(variable_derived_dt) LIKE ' %' OR MIN(variable_derived_dt) == 0) AND (MAX(variable_derived_dt) IS NULL OR MAX(variable_derived_dt) == '' OR MAX(variable_derived_dt) LIKE ' %' OR MAX(variable_derived_dt) == 0) THEN MAX(variable_derived_dt)  ELSE 'GOOD' END as variable_derived_dt_min_max_compare,
CASE WHEN MIN(selection_dt)  == MAX( selection_dt) THEN MAX(selection_dt) WHEN (MIN(selection_dt) IS NULL OR MIN(selection_dt) == '' OR MIN(selection_dt) LIKE ' %' OR MIN(selection_dt) == 0) AND (MAX(selection_dt) IS NULL OR MAX(selection_dt) == '' OR MAX(selection_dt) LIKE ' %' OR MAX(selection_dt) == 0) THEN MAX(selection_dt)  ELSE 'GOOD' END as selection_dt_min_max_compare,
CASE WHEN MIN(line_of_business)  == MAX( line_of_business) THEN MAX(line_of_business) WHEN (MIN(line_of_business) IS NULL OR MIN(line_of_business) == '' OR MIN(line_of_business) LIKE ' %' OR MIN(line_of_business) == 0) AND (MAX(line_of_business) IS NULL OR MAX(line_of_business) == '' OR MAX(line_of_business) LIKE ' %' OR MAX(line_of_business) == 0) THEN MAX(line_of_business)  ELSE 'GOOD' END as line_of_business_min_max_compare,
CASE WHEN MIN(effort_id)  == MAX( effort_id) THEN MAX(effort_id) WHEN (MIN(effort_id) IS NULL OR MIN(effort_id) == '' OR MIN(effort_id) LIKE ' %' OR MIN(effort_id) == 0) AND (MAX(effort_id) IS NULL OR MAX(effort_id) == '' OR MAX(effort_id) LIKE ' %' OR MAX(effort_id) == 0) THEN MAX(effort_id)  ELSE 'GOOD' END as effort_id_min_max_compare,
CASE WHEN MIN(effort_type_cd)  == MAX( effort_type_cd) THEN MAX(effort_type_cd) WHEN (MIN(effort_type_cd) IS NULL OR MIN(effort_type_cd) == '' OR MIN(effort_type_cd) LIKE ' %' OR MIN(effort_type_cd) == 0) AND (MAX(effort_type_cd) IS NULL OR MAX(effort_type_cd) == '' OR MAX(effort_type_cd) LIKE ' %' OR MAX(effort_type_cd) == 0) THEN MAX(effort_type_cd)  ELSE 'GOOD' END as effort_type_cd_min_max_compare,
CASE WHEN MIN(geo_loc)  == MAX( geo_loc) THEN MAX(geo_loc) WHEN (MIN(geo_loc) IS NULL OR MIN(geo_loc) == '' OR MIN(geo_loc) LIKE ' %' OR MIN(geo_loc) == 0) AND (MAX(geo_loc) IS NULL OR MAX(geo_loc) == '' OR MAX(geo_loc) LIKE ' %' OR MAX(geo_loc) == 0) THEN MAX(geo_loc)  ELSE 'GOOD' END as geo_loc_min_max_compare,
CASE WHEN MIN(zipcode)  == MAX( zipcode) THEN MAX(zipcode) WHEN (MIN(zipcode) IS NULL OR MIN(zipcode) == '' OR MIN(zipcode) LIKE ' %' OR MIN(zipcode) == 0) AND (MAX(zipcode) IS NULL OR MAX(zipcode) == '' OR MAX(zipcode) LIKE ' %' OR MAX(zipcode) == 0) THEN MAX(zipcode)  ELSE 'GOOD' END as zipcode_min_max_compare,
CASE WHEN MIN(cust_st_prov_cd)  == MAX( cust_st_prov_cd) THEN MAX(cust_st_prov_cd) WHEN (MIN(cust_st_prov_cd) IS NULL OR MIN(cust_st_prov_cd) == '' OR MIN(cust_st_prov_cd) LIKE ' %' OR MIN(cust_st_prov_cd) == 0) AND (MAX(cust_st_prov_cd) IS NULL OR MAX(cust_st_prov_cd) == '' OR MAX(cust_st_prov_cd) LIKE ' %' OR MAX(cust_st_prov_cd) == 0) THEN MAX(cust_st_prov_cd)  ELSE 'GOOD' END as cust_st_prov_cd_min_max_compare,
CASE WHEN MIN(cust_st_prov_abr)  == MAX( cust_st_prov_abr) THEN MAX(cust_st_prov_abr) WHEN (MIN(cust_st_prov_abr) IS NULL OR MIN(cust_st_prov_abr) == '' OR MIN(cust_st_prov_abr) LIKE ' %' OR MIN(cust_st_prov_abr) == 0) AND (MAX(cust_st_prov_abr) IS NULL OR MAX(cust_st_prov_abr) == '' OR MAX(cust_st_prov_abr) LIKE ' %' OR MAX(cust_st_prov_abr) == 0) THEN MAX(cust_st_prov_abr)  ELSE 'GOOD' END as cust_st_prov_abr_min_max_compare,
CASE WHEN MIN(stream_cd)  == MAX( stream_cd) THEN MAX(stream_cd) WHEN (MIN(stream_cd) IS NULL OR MIN(stream_cd) == '' OR MIN(stream_cd) LIKE ' %' OR MIN(stream_cd) == 0) AND (MAX(stream_cd) IS NULL OR MAX(stream_cd) == '' OR MAX(stream_cd) LIKE ' %' OR MAX(stream_cd) == 0) THEN MAX(stream_cd)  ELSE 'GOOD' END as stream_cd_min_max_compare,
CASE WHEN MIN(distant_ind)  == MAX( distant_ind) THEN MAX(distant_ind) WHEN (MIN(distant_ind) IS NULL OR MIN(distant_ind) == '' OR MIN(distant_ind) LIKE ' %' OR MIN(distant_ind) == 0) AND (MAX(distant_ind) IS NULL OR MAX(distant_ind) == '' OR MAX(distant_ind) LIKE ' %' OR MAX(distant_ind) == 0) THEN MAX(distant_ind)  ELSE 'GOOD' END as distant_ind_min_max_compare,
CASE WHEN MIN(mc_last_init_exist)  == MAX( mc_last_init_exist) THEN MAX(mc_last_init_exist) WHEN (MIN(mc_last_init_exist) IS NULL OR MIN(mc_last_init_exist) == '' OR MIN(mc_last_init_exist) LIKE ' %' OR MIN(mc_last_init_exist) == 0) AND (MAX(mc_last_init_exist) IS NULL OR MAX(mc_last_init_exist) == '' OR MAX(mc_last_init_exist) LIKE ' %' OR MAX(mc_last_init_exist) == 0) THEN MAX(mc_last_init_exist)  ELSE 'GOOD' END as mc_last_init_exist_min_max_compare,
CASE WHEN MIN(mc_first_init_exist)  == MAX( mc_first_init_exist) THEN MAX(mc_first_init_exist) WHEN (MIN(mc_first_init_exist) IS NULL OR MIN(mc_first_init_exist) == '' OR MIN(mc_first_init_exist) LIKE ' %' OR MIN(mc_first_init_exist) == 0) AND (MAX(mc_first_init_exist) IS NULL OR MAX(mc_first_init_exist) == '' OR MAX(mc_first_init_exist) LIKE ' %' OR MAX(mc_first_init_exist) == 0) THEN MAX(mc_first_init_exist)  ELSE 'GOOD' END as mc_first_init_exist_min_max_compare,
CASE WHEN MIN(dash_cust_ind)  == MAX( dash_cust_ind) THEN MAX(dash_cust_ind) WHEN (MIN(dash_cust_ind) IS NULL OR MIN(dash_cust_ind) == '' OR MIN(dash_cust_ind) LIKE ' %' OR MIN(dash_cust_ind) == 0) AND (MAX(dash_cust_ind) IS NULL OR MAX(dash_cust_ind) == '' OR MAX(dash_cust_ind) LIKE ' %' OR MAX(dash_cust_ind) == 0) THEN MAX(dash_cust_ind)  ELSE 'GOOD' END as dash_cust_ind_min_max_compare,
CASE WHEN MIN(initial_selection_segment)  == MAX( initial_selection_segment) THEN MAX(initial_selection_segment) WHEN (MIN(initial_selection_segment) IS NULL OR MIN(initial_selection_segment) == '' OR MIN(initial_selection_segment) LIKE ' %' OR MIN(initial_selection_segment) == 0) AND (MAX(initial_selection_segment) IS NULL OR MAX(initial_selection_segment) == '' OR MAX(initial_selection_segment) LIKE ' %' OR MAX(initial_selection_segment) == 0) THEN MAX(initial_selection_segment)  ELSE 'GOOD' END as initial_selection_segment_min_max_compare,
CASE WHEN MIN(initial_mailing_key)  == MAX( initial_mailing_key) THEN MAX(initial_mailing_key) WHEN (MIN(initial_mailing_key) IS NULL OR MIN(initial_mailing_key) == '' OR MIN(initial_mailing_key) LIKE ' %' OR MIN(initial_mailing_key) == 0) AND (MAX(initial_mailing_key) IS NULL OR MAX(initial_mailing_key) == '' OR MAX(initial_mailing_key) LIKE ' %' OR MAX(initial_mailing_key) == 0) THEN MAX(initial_mailing_key)  ELSE 'GOOD' END as initial_mailing_key_min_max_compare,
CASE WHEN MIN(initial_score_no)  == MAX( initial_score_no) THEN MAX(initial_score_no) WHEN (MIN(initial_score_no) IS NULL OR MIN(initial_score_no) == '' OR MIN(initial_score_no) LIKE ' %' OR MIN(initial_score_no) == 0) AND (MAX(initial_score_no) IS NULL OR MAX(initial_score_no) == '' OR MAX(initial_score_no) LIKE ' %' OR MAX(initial_score_no) == 0) THEN MAX(initial_score_no)  ELSE 'GOOD' END as initial_score_no_min_max_compare,
CASE WHEN MIN(initial_model_name)  == MAX( initial_model_name) THEN MAX(initial_model_name) WHEN (MIN(initial_model_name) IS NULL OR MIN(initial_model_name) == '' OR MIN(initial_model_name) LIKE ' %' OR MIN(initial_model_name) == 0) AND (MAX(initial_model_name) IS NULL OR MAX(initial_model_name) == '' OR MAX(initial_model_name) LIKE ' %' OR MAX(initial_model_name) == 0) THEN MAX(initial_model_name)  ELSE 'GOOD' END as initial_model_name_min_max_compare,
CASE WHEN MIN(initial_expected_value_amt)  == MAX( initial_expected_value_amt) THEN MAX(initial_expected_value_amt) WHEN (MIN(initial_expected_value_amt) IS NULL OR MIN(initial_expected_value_amt) == '' OR MIN(initial_expected_value_amt) LIKE ' %' OR MIN(initial_expected_value_amt) == 0) AND (MAX(initial_expected_value_amt) IS NULL OR MAX(initial_expected_value_amt) == '' OR MAX(initial_expected_value_amt) LIKE ' %' OR MAX(initial_expected_value_amt) == 0) THEN MAX(initial_expected_value_amt)  ELSE 'GOOD' END as initial_expected_value_amt_min_max_compare,
CASE WHEN MIN(random_sample_ind)  == MAX( random_sample_ind) THEN MAX(random_sample_ind) WHEN (MIN(random_sample_ind) IS NULL OR MIN(random_sample_ind) == '' OR MIN(random_sample_ind) LIKE ' %' OR MIN(random_sample_ind) == 0) AND (MAX(random_sample_ind) IS NULL OR MAX(random_sample_ind) == '' OR MAX(random_sample_ind) LIKE ' %' OR MAX(random_sample_ind) == 0) THEN MAX(random_sample_ind)  ELSE 'GOOD' END as random_sample_ind_min_max_compare,
CASE WHEN MIN(force_inclusion_ind)  == MAX( force_inclusion_ind) THEN MAX(force_inclusion_ind) WHEN (MIN(force_inclusion_ind) IS NULL OR MIN(force_inclusion_ind) == '' OR MIN(force_inclusion_ind) LIKE ' %' OR MIN(force_inclusion_ind) == 0) AND (MAX(force_inclusion_ind) IS NULL OR MAX(force_inclusion_ind) == '' OR MAX(force_inclusion_ind) LIKE ' %' OR MAX(force_inclusion_ind) == 0) THEN MAX(force_inclusion_ind)  ELSE 'GOOD' END as force_inclusion_ind_min_max_compare
from uat_im_calc_engine.agg_oflnsel_hybridinput;


select selection_year, selection_week, delivery_paradigm_year, delivery_paradigm_week, selection_dt, line_of_business, effort_id, effort_type_cd, geo_loc, stream_cd, distant_ind, dash_cust_ind, initial_selection_segment, initial_mailing_key, random_sample_ind, count(*)  from uat_im_calc_engine.agg_oflnsel_hybridinput group by selection_year, selection_week, delivery_paradigm_year, delivery_paradigm_week, selection_dt, line_of_business, effort_id, effort_type_cd, geo_loc, stream_cd, distant_ind, dash_cust_ind, initial_selection_segment, initial_mailing_key, random_sample_ind
order by selection_year, selection_week, delivery_paradigm_year, delivery_paradigm_week, selection_dt, line_of_business, effort_id, effort_type_cd, geo_loc, stream_cd, distant_ind, dash_cust_ind, initial_selection_segment, initial_mailing_key, random_sample_ind
;




Campaign Metadata 
==================
select count(*) from uat_im_calc_engine.agg_oflnsel_campaignmeta;

select effort_id,count(*)  from uat_im_calc_engine.agg_oflnsel_campaignmeta
group by effort_id having count(*) > 1
order by  effort_id;


select effort_id, plan_volume, mailing_volume 
from uat_im_calc_engine.agg_oflnsel_campaignmeta
order by effort_id ;

!ls -l /mapr/JMAPRCLUP01.CLASSIC.PCHAD.COM/im/calcengine/uat/hot/oflnsel/aggdata/agg_oflnsel_campaignmeta ;

describe uat_im_calc_engine.agg_oflnsel_campaignmeta ;


SELECT COUNT(*) AS TABLE_COUNT,
case when COUNT(*) ==  SUM(CASE WHEN run_ts IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS run_ts_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN selection_year IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS selection_year_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN selection_week IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS selection_week_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN delivery_paradigm_year IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS delivery_paradigm_year_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN delivery_week IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS delivery_week_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN selection_dt IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS selection_dt_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN main_mailing_id IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS main_mailing_id_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN line_of_business IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS line_of_business_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN effort_id IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS effort_id_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN stream_cd IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS stream_cd_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN effort_type_cd IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS effort_type_cd_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN plan_volume IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS plan_volume_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN mailing_volume IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS mailing_volume_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN package_cd IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS package_cd_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN random_sample_ind IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS random_sample_ind_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN retention_ind IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS retention_ind_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN conversion_ind IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS conversion_ind_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN force_inclusion_ind IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS force_inclusion_ind_AllNULL_Ind
from uat_im_calc_engine.agg_oflnsel_campaignmeta ;


SELECT COUNT(*) AS TABLE_COUNT,
CASE WHEN MIN(run_ts)  == MAX( run_ts) THEN MAX(run_ts) WHEN (MIN(run_ts) IS NULL OR MIN(run_ts) == '' OR MIN(run_ts) LIKE ' %' OR MIN(run_ts) == 0) AND (MAX(run_ts) IS NULL OR MAX(run_ts) == '' OR MAX(run_ts) LIKE ' %' OR MAX(run_ts) == 0) THEN MAX(run_ts)  ELSE 'GOOD' END as run_ts_min_max_compare,
CASE WHEN MIN(selection_year)  == MAX( selection_year) THEN MAX(selection_year) WHEN (MIN(selection_year) IS NULL OR MIN(selection_year) == '' OR MIN(selection_year) LIKE ' %' OR MIN(selection_year) == 0) AND (MAX(selection_year) IS NULL OR MAX(selection_year) == '' OR MAX(selection_year) LIKE ' %' OR MAX(selection_year) == 0) THEN MAX(selection_year)  ELSE 'GOOD' END as selection_year_min_max_compare,
CASE WHEN MIN(selection_week)  == MAX( selection_week) THEN MAX(selection_week) WHEN (MIN(selection_week) IS NULL OR MIN(selection_week) == '' OR MIN(selection_week) LIKE ' %' OR MIN(selection_week) == 0) AND (MAX(selection_week) IS NULL OR MAX(selection_week) == '' OR MAX(selection_week) LIKE ' %' OR MAX(selection_week) == 0) THEN MAX(selection_week)  ELSE 'GOOD' END as selection_week_min_max_compare,
CASE WHEN MIN(delivery_paradigm_year)  == MAX( delivery_paradigm_year) THEN MAX(delivery_paradigm_year) WHEN (MIN(delivery_paradigm_year) IS NULL OR MIN(delivery_paradigm_year) == '' OR MIN(delivery_paradigm_year) LIKE ' %' OR MIN(delivery_paradigm_year) == 0) AND (MAX(delivery_paradigm_year) IS NULL OR MAX(delivery_paradigm_year) == '' OR MAX(delivery_paradigm_year) LIKE ' %' OR MAX(delivery_paradigm_year) == 0) THEN MAX(delivery_paradigm_year)  ELSE 'GOOD' END as delivery_paradigm_year_min_max_compare,
CASE WHEN MIN(delivery_week)  == MAX( delivery_week) THEN MAX(delivery_week) WHEN (MIN(delivery_week) IS NULL OR MIN(delivery_week) == '' OR MIN(delivery_week) LIKE ' %' OR MIN(delivery_week) == 0) AND (MAX(delivery_week) IS NULL OR MAX(delivery_week) == '' OR MAX(delivery_week) LIKE ' %' OR MAX(delivery_week) == 0) THEN MAX(delivery_week)  ELSE 'GOOD' END as delivery_week_min_max_compare,
CASE WHEN MIN(selection_dt)  == MAX( selection_dt) THEN MAX(selection_dt) WHEN (MIN(selection_dt) IS NULL OR MIN(selection_dt) == '' OR MIN(selection_dt) LIKE ' %' OR MIN(selection_dt) == 0) AND (MAX(selection_dt) IS NULL OR MAX(selection_dt) == '' OR MAX(selection_dt) LIKE ' %' OR MAX(selection_dt) == 0) THEN MAX(selection_dt)  ELSE 'GOOD' END as selection_dt_min_max_compare,
CASE WHEN MIN(main_mailing_id)  == MAX( main_mailing_id) THEN MAX(main_mailing_id) WHEN (MIN(main_mailing_id) IS NULL OR MIN(main_mailing_id) == '' OR MIN(main_mailing_id) LIKE ' %' OR MIN(main_mailing_id) == 0) AND (MAX(main_mailing_id) IS NULL OR MAX(main_mailing_id) == '' OR MAX(main_mailing_id) LIKE ' %' OR MAX(main_mailing_id) == 0) THEN MAX(main_mailing_id)  ELSE 'GOOD' END as main_mailing_id_min_max_compare,
CASE WHEN MIN(line_of_business)  == MAX( line_of_business) THEN MAX(line_of_business) WHEN (MIN(line_of_business) IS NULL OR MIN(line_of_business) == '' OR MIN(line_of_business) LIKE ' %' OR MIN(line_of_business) == 0) AND (MAX(line_of_business) IS NULL OR MAX(line_of_business) == '' OR MAX(line_of_business) LIKE ' %' OR MAX(line_of_business) == 0) THEN MAX(line_of_business)  ELSE 'GOOD' END as line_of_business_min_max_compare,
CASE WHEN MIN(effort_id)  == MAX( effort_id) THEN MAX(effort_id) WHEN (MIN(effort_id) IS NULL OR MIN(effort_id) == '' OR MIN(effort_id) LIKE ' %' OR MIN(effort_id) == 0) AND (MAX(effort_id) IS NULL OR MAX(effort_id) == '' OR MAX(effort_id) LIKE ' %' OR MAX(effort_id) == 0) THEN MAX(effort_id)  ELSE 'GOOD' END as effort_id_min_max_compare,
CASE WHEN MIN(stream_cd)  == MAX( stream_cd) THEN MAX(stream_cd) WHEN (MIN(stream_cd) IS NULL OR MIN(stream_cd) == '' OR MIN(stream_cd) LIKE ' %' OR MIN(stream_cd) == 0) AND (MAX(stream_cd) IS NULL OR MAX(stream_cd) == '' OR MAX(stream_cd) LIKE ' %' OR MAX(stream_cd) == 0) THEN MAX(stream_cd)  ELSE 'GOOD' END as stream_cd_min_max_compare,
CASE WHEN MIN(effort_type_cd)  == MAX( effort_type_cd) THEN MAX(effort_type_cd) WHEN (MIN(effort_type_cd) IS NULL OR MIN(effort_type_cd) == '' OR MIN(effort_type_cd) LIKE ' %' OR MIN(effort_type_cd) == 0) AND (MAX(effort_type_cd) IS NULL OR MAX(effort_type_cd) == '' OR MAX(effort_type_cd) LIKE ' %' OR MAX(effort_type_cd) == 0) THEN MAX(effort_type_cd)  ELSE 'GOOD' END as effort_type_cd_min_max_compare,
CASE WHEN MIN(plan_volume)  == MAX( plan_volume) THEN MAX(plan_volume) WHEN (MIN(plan_volume) IS NULL OR MIN(plan_volume) == '' OR MIN(plan_volume) LIKE ' %' OR MIN(plan_volume) == 0) AND (MAX(plan_volume) IS NULL OR MAX(plan_volume) == '' OR MAX(plan_volume) LIKE ' %' OR MAX(plan_volume) == 0) THEN MAX(plan_volume)  ELSE 'GOOD' END as plan_volume_min_max_compare,
CASE WHEN MIN(mailing_volume)  == MAX( mailing_volume) THEN MAX(mailing_volume) WHEN (MIN(mailing_volume) IS NULL OR MIN(mailing_volume) == '' OR MIN(mailing_volume) LIKE ' %' OR MIN(mailing_volume) == 0) AND (MAX(mailing_volume) IS NULL OR MAX(mailing_volume) == '' OR MAX(mailing_volume) LIKE ' %' OR MAX(mailing_volume) == 0) THEN MAX(mailing_volume)  ELSE 'GOOD' END as mailing_volume_min_max_compare,
CASE WHEN MIN(package_cd)  == MAX( package_cd) THEN MAX(package_cd) WHEN (MIN(package_cd) IS NULL OR MIN(package_cd) == '' OR MIN(package_cd) LIKE ' %' OR MIN(package_cd) == 0) AND (MAX(package_cd) IS NULL OR MAX(package_cd) == '' OR MAX(package_cd) LIKE ' %' OR MAX(package_cd) == 0) THEN MAX(package_cd)  ELSE 'GOOD' END as package_cd_min_max_compare,
CASE WHEN MIN(random_sample_ind)  == MAX( random_sample_ind) THEN MAX(random_sample_ind) WHEN (MIN(random_sample_ind) IS NULL OR MIN(random_sample_ind) == '' OR MIN(random_sample_ind) LIKE ' %' OR MIN(random_sample_ind) == 0) AND (MAX(random_sample_ind) IS NULL OR MAX(random_sample_ind) == '' OR MAX(random_sample_ind) LIKE ' %' OR MAX(random_sample_ind) == 0) THEN MAX(random_sample_ind)  ELSE 'GOOD' END as random_sample_ind_min_max_compare,
CASE WHEN MIN(retention_ind)  == MAX( retention_ind) THEN MAX(retention_ind) WHEN (MIN(retention_ind) IS NULL OR MIN(retention_ind) == '' OR MIN(retention_ind) LIKE ' %' OR MIN(retention_ind) == 0) AND (MAX(retention_ind) IS NULL OR MAX(retention_ind) == '' OR MAX(retention_ind) LIKE ' %' OR MAX(retention_ind) == 0) THEN MAX(retention_ind)  ELSE 'GOOD' END as retention_ind_min_max_compare,
CASE WHEN MIN(conversion_ind)  == MAX( conversion_ind) THEN MAX(conversion_ind) WHEN (MIN(conversion_ind) IS NULL OR MIN(conversion_ind) == '' OR MIN(conversion_ind) LIKE ' %' OR MIN(conversion_ind) == 0) AND (MAX(conversion_ind) IS NULL OR MAX(conversion_ind) == '' OR MAX(conversion_ind) LIKE ' %' OR MAX(conversion_ind) == 0) THEN MAX(conversion_ind)  ELSE 'GOOD' END as conversion_ind_min_max_compare,
CASE WHEN MIN(force_inclusion_ind)  == MAX( force_inclusion_ind) THEN MAX(force_inclusion_ind) WHEN (MIN(force_inclusion_ind) IS NULL OR MIN(force_inclusion_ind) == '' OR MIN(force_inclusion_ind) LIKE ' %' OR MIN(force_inclusion_ind) == 0) AND (MAX(force_inclusion_ind) IS NULL OR MAX(force_inclusion_ind) == '' OR MAX(force_inclusion_ind) LIKE ' %' OR MAX(force_inclusion_ind) == 0) THEN MAX(force_inclusion_ind)  ELSE 'GOOD' END as force_inclusion_ind_min_max_compare
from uat_im_calc_engine.agg_oflnsel_campaignmeta ;

select * from uat_im_calc_engine.agg_oflnsel_campaignmeta;


Hybrid Full Scores
==================
select count(*) from uat_im_calc_engine.agg_oflnsel_hybridfullscores;


!ls -l /mapr/JMAPRCLUP01.CLASSIC.PCHAD.COM/im/calcengine/uat/hot/oflnsel/aggdata/agg_oflnsel_hybridfullscores ;

describe uat_im_calc_engine.agg_oflnsel_hybridfullscores; 


select a.cust_id from uat_sa_calc_engine_exchange.oflnsel_hdl_preselectionfile as a
left join uat_im_calc_engine.agg_oflnsel_hybridfullscores b
on a.cust_id = b.cust_id
where b.cust_id is null
;


SELECT COUNT(*) AS TABLE_COUNT,
case when COUNT(*) ==  SUM(CASE WHEN cust_part_seq_no IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS cust_part_seq_no_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN cust_id IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS cust_id_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN model_literal IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS model_literal_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN geo_loc IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS geo_loc_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN full_model_score IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS full_model_score_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN score_date IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS score_date_AllNULL_Ind
from uat_im_calc_engine.agg_oflnsel_hybridfullscores ;


SELECT COUNT(*) AS TABLE_COUNT,
CASE WHEN MIN(cust_part_seq_no)  == MAX( cust_part_seq_no) THEN MAX(cust_part_seq_no) WHEN (MIN(cust_part_seq_no) IS NULL OR MIN(cust_part_seq_no) == '' OR MIN(cust_part_seq_no) LIKE ' %' OR MIN(cust_part_seq_no) == 0) AND (MAX(cust_part_seq_no) IS NULL OR MAX(cust_part_seq_no) == '' OR MAX(cust_part_seq_no) LIKE ' %' OR MAX(cust_part_seq_no) == 0) THEN MAX(cust_part_seq_no)  ELSE 'GOOD' END as cust_part_seq_no_min_max_compare,
CASE WHEN MIN(cust_id)  == MAX( cust_id) THEN MAX(cust_id) WHEN (MIN(cust_id) IS NULL OR MIN(cust_id) == '' OR MIN(cust_id) LIKE ' %' OR MIN(cust_id) == 0) AND (MAX(cust_id) IS NULL OR MAX(cust_id) == '' OR MAX(cust_id) LIKE ' %' OR MAX(cust_id) == 0) THEN MAX(cust_id)  ELSE 'GOOD' END as cust_id_min_max_compare,
CASE WHEN MIN(model_literal)  == MAX( model_literal) THEN MAX(model_literal) WHEN (MIN(model_literal) IS NULL OR MIN(model_literal) == '' OR MIN(model_literal) LIKE ' %' OR MIN(model_literal) == 0) AND (MAX(model_literal) IS NULL OR MAX(model_literal) == '' OR MAX(model_literal) LIKE ' %' OR MAX(model_literal) == 0) THEN MAX(model_literal)  ELSE 'GOOD' END as model_literal_min_max_compare,
CASE WHEN MIN(geo_loc)  == MAX( geo_loc) THEN MAX(geo_loc) WHEN (MIN(geo_loc) IS NULL OR MIN(geo_loc) == '' OR MIN(geo_loc) LIKE ' %' OR MIN(geo_loc) == 0) AND (MAX(geo_loc) IS NULL OR MAX(geo_loc) == '' OR MAX(geo_loc) LIKE ' %' OR MAX(geo_loc) == 0) THEN MAX(geo_loc)  ELSE 'GOOD' END as geo_loc_min_max_compare,
CASE WHEN MIN(full_model_score)  == MAX( full_model_score) THEN MAX(full_model_score) WHEN (MIN(full_model_score) IS NULL OR MIN(full_model_score) == '' OR MIN(full_model_score) LIKE ' %' OR MIN(full_model_score) == 0) AND (MAX(full_model_score) IS NULL OR MAX(full_model_score) == '' OR MAX(full_model_score) LIKE ' %' OR MAX(full_model_score) == 0) THEN MAX(full_model_score)  ELSE 'GOOD' END as full_model_score_min_max_compare,
CASE WHEN MIN(score_date)  == MAX( score_date) THEN MAX(score_date) WHEN (MIN(score_date) IS NULL OR MIN(score_date) == '' OR MIN(score_date) LIKE ' %' OR MIN(score_date) == 0) AND (MAX(score_date) IS NULL OR MAX(score_date) == '' OR MAX(score_date) LIKE ' %' OR MAX(score_date) == 0) THEN MAX(score_date)  ELSE 'GOOD' END as score_date_min_max_compare
from uat_im_calc_engine.agg_oflnsel_hybridfullscores ;


select model_literal, geo_loc, score_date, count(*) 
from uat_im_calc_engine.agg_oflnsel_hybridfullscores 
group by model_literal, geo_loc,score_date
order by model_literal, geo_loc, score_date;


Hybrid Variables
================

select count(*) from uat_im_calc_engine.agg_oflnsel_hybridvariables;


!ls -l /mapr/JMAPRCLUP01.CLASSIC.PCHAD.COM/im/calcengine/uat/hot/oflnsel/aggdata/agg_oflnsel_hybridvariables ;

describe uat_im_calc_engine.agg_oflnsel_hybridvariables;

select a.cust_id from uat_sa_calc_engine_exchange.oflnsel_hdl_preselectionfile as a
left join uat_im_calc_engine.agg_oflnsel_hybridvariables b
on a.cust_id = b.cust_id
where b.cust_id is null
;


SELECT COUNT(*) AS TABLE_COUNT,
case when COUNT(*) ==  SUM(CASE WHEN cust_part_seq_no IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS cust_part_seq_no_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN cust_id IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS cust_id_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN geo_loc IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS geo_loc_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN zipcode IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS zipcode_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN variable_derived_dt IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS variable_derived_dt_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN selection_dt IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS selection_dt_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN age IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS age_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN astv_ctr IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS astv_ctr_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN bal IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS bal_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN balance IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS balance_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN cinp IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS cinp_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN cumdol IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS cumdol_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN cumeft IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS cumeft_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN cumord IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS cumord_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN dash_cust_ind IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS dash_cust_ind_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN dt91 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS dt91_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN dtlpmt1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS dtlpmt1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN dtlprtpy IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS dtlprtpy_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN dttotp IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS dttotp_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN dys IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS dys_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN eff1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS eff1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN eff9 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS eff9_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN effslo IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS effslo_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN effswo IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS effswo_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN gend IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS gend_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN gend_f IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS gend_f_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN hlft IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS hlft_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN hspdpmdy IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS hspdpmdy_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN hsunctr IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS hsunctr_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN lcerldys IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS lcerldys_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN lcpymdys IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS lcpymdys_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN max_days_delinq IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS max_days_delinq_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN miss IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS miss_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nondys1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nondys1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nonyrc IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nonyrc_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nordslcn IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nordslcn_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN np IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS np_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npavgord IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npavgord_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npay3mo IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npay3mo_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npbackmn IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npbackmn_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npcumcch IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npcumcch_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npcumdol IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npcumdol_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npcumeft IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npcumeft_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npcumord IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npcumord_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npcumstp IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npcumstp_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npcumwks IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npcumwks_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npdttotp IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npdttotp_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npeffswo IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npeffswo_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nplcdys IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nplcdys_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npnonds1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npnonds1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npnonds2 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npnonds2_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npopdt1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npopdt1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npopdys1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npopdys1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npopennm IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npopennm_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npopprop IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npopprop_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npordage IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npordage_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npordys1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npordys1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nporlcs1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nporlcs1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nppchmos IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nppchmos_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nppddol IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nppddol_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nppddys1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nppddys1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nppdlcdy IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nppdlcdy_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nppdord IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nppdord_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nppdpmdy IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nppdpmdy_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nppdsodl IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nppdsodl_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nppmdt1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nppmdt1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nppmdys1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nppmdys1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nppmdys2 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nppmdys2_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npprod IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npprod_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npprtpy IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npprtpy_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npstatus IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npstatus_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npuncctr IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npuncctr_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npvareff IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npvareff_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npvarmag IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npvarmag_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npvaropn IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npvaropn_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npvarpd IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npvarpd_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npvclctr IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npvclctr_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npxopss1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npxopss1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npxpddt1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npxpddt1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npzip IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npzip_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN nret7mo IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS nret7mo_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN num_dlq IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS num_dlq_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN numaff IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS numaff_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN opennm IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS opennm_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN optvm IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS optvm_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN ordda1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS ordda1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN ordslcan IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS ordslcan_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN paydy1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS paydy1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN pchamos IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS pchamos_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN pdmdsit4yr IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS pdmdsit4yr_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN pdo3 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS pdo3_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN pdollar6 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS pdollar6_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN pmdys1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS pmdys1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN pmtdt6 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS pmtdt6_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN pnoltv12 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS pnoltv12_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN prev3mo_ctm_mod IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS prev3mo_ctm_mod_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN prtfudys IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS prtfudys_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN risk IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS risk_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN status IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS status_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN suppress_ind IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS suppress_ind_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN tavgord1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS tavgord1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN tlpchmos IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS tlpchmos_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN tocumord IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS tocumord_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN toopen IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS toopen_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN topchmos IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS topchmos_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN totdys IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS totdys_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN totopen IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS totopen_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN tprd1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS tprd1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN tprfudys IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS tprfudys_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN vars601 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS vars601_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN vclratio IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS vclratio_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN xmagdta IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS xmagdta_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN xopdays1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS xopdays1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN xopenps2 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS xopenps2_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN xopords IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS xopords_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN xpaiddt1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS xpaiddt1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN xpddays1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS xpddays1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN xplcdys1 IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS xplcdys1_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN npnonord IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS npnonord_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN eff_ctr IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS eff_ctr_AllNULL_Ind,
case when COUNT(*) ==  SUM(CASE WHEN conv_mer_effort_ct IS NULL THEN 1 ELSE 0 END) then 'YES' ELSE 'NO' END  AS conv_mer_effort_ct_AllNULL_Ind
from uat_im_calc_engine.agg_oflnsel_hybridvariables;


SELECT COUNT(*) AS TABLE_COUNT,
CASE WHEN MIN(cust_part_seq_no)  == MAX( cust_part_seq_no) THEN MAX(cust_part_seq_no) WHEN (MIN(cust_part_seq_no) IS NULL OR MIN(cust_part_seq_no) == '' OR MIN(cust_part_seq_no) LIKE ' %' OR MIN(cust_part_seq_no) == 0) AND (MAX(cust_part_seq_no) IS NULL OR MAX(cust_part_seq_no) == '' OR MAX(cust_part_seq_no) LIKE ' %' OR MAX(cust_part_seq_no) == 0) THEN MAX(cust_part_seq_no)  ELSE 'GOOD' END as cust_part_seq_no_min_max_compare,
CASE WHEN MIN(cust_id)  == MAX( cust_id) THEN MAX(cust_id) WHEN (MIN(cust_id) IS NULL OR MIN(cust_id) == '' OR MIN(cust_id) LIKE ' %' OR MIN(cust_id) == 0) AND (MAX(cust_id) IS NULL OR MAX(cust_id) == '' OR MAX(cust_id) LIKE ' %' OR MAX(cust_id) == 0) THEN MAX(cust_id)  ELSE 'GOOD' END as cust_id_min_max_compare,
CASE WHEN MIN(geo_loc)  == MAX( geo_loc) THEN MAX(geo_loc) WHEN (MIN(geo_loc) IS NULL OR MIN(geo_loc) == '' OR MIN(geo_loc) LIKE ' %' OR MIN(geo_loc) == 0) AND (MAX(geo_loc) IS NULL OR MAX(geo_loc) == '' OR MAX(geo_loc) LIKE ' %' OR MAX(geo_loc) == 0) THEN MAX(geo_loc)  ELSE 'GOOD' END as geo_loc_min_max_compare,
CASE WHEN MIN(zipcode)  == MAX( zipcode) THEN MAX(zipcode) WHEN (MIN(zipcode) IS NULL OR MIN(zipcode) == '' OR MIN(zipcode) LIKE ' %' OR MIN(zipcode) == 0) AND (MAX(zipcode) IS NULL OR MAX(zipcode) == '' OR MAX(zipcode) LIKE ' %' OR MAX(zipcode) == 0) THEN MAX(zipcode)  ELSE 'GOOD' END as zipcode_min_max_compare,
CASE WHEN MIN(variable_derived_dt)  == MAX( variable_derived_dt) THEN MAX(variable_derived_dt) WHEN (MIN(variable_derived_dt) IS NULL OR MIN(variable_derived_dt) == '' OR MIN(variable_derived_dt) LIKE ' %' OR MIN(variable_derived_dt) == 0) AND (MAX(variable_derived_dt) IS NULL OR MAX(variable_derived_dt) == '' OR MAX(variable_derived_dt) LIKE ' %' OR MAX(variable_derived_dt) == 0) THEN MAX(variable_derived_dt)  ELSE 'GOOD' END as variable_derived_dt_min_max_compare,
CASE WHEN MIN(selection_dt)  == MAX( selection_dt) THEN MAX(selection_dt) WHEN (MIN(selection_dt) IS NULL OR MIN(selection_dt) == '' OR MIN(selection_dt) LIKE ' %' OR MIN(selection_dt) == 0) AND (MAX(selection_dt) IS NULL OR MAX(selection_dt) == '' OR MAX(selection_dt) LIKE ' %' OR MAX(selection_dt) == 0) THEN MAX(selection_dt)  ELSE 'GOOD' END as selection_dt_min_max_compare,
CASE WHEN MIN(age)  == MAX( age) THEN MAX(age) WHEN (MIN(age) IS NULL OR MIN(age) == '' OR MIN(age) LIKE ' %' OR MIN(age) == 0) AND (MAX(age) IS NULL OR MAX(age) == '' OR MAX(age) LIKE ' %' OR MAX(age) == 0) THEN MAX(age)  ELSE 'GOOD' END as age_min_max_compare,
CASE WHEN MIN(astv_ctr)  == MAX( astv_ctr) THEN MAX(astv_ctr) WHEN (MIN(astv_ctr) IS NULL OR MIN(astv_ctr) == '' OR MIN(astv_ctr) LIKE ' %' OR MIN(astv_ctr) == 0) AND (MAX(astv_ctr) IS NULL OR MAX(astv_ctr) == '' OR MAX(astv_ctr) LIKE ' %' OR MAX(astv_ctr) == 0) THEN MAX(astv_ctr)  ELSE 'GOOD' END as astv_ctr_min_max_compare,
CASE WHEN MIN(bal)  == MAX( bal) THEN MAX(bal) WHEN (MIN(bal) IS NULL OR MIN(bal) == '' OR MIN(bal) LIKE ' %' OR MIN(bal) == 0) AND (MAX(bal) IS NULL OR MAX(bal) == '' OR MAX(bal) LIKE ' %' OR MAX(bal) == 0) THEN MAX(bal)  ELSE 'GOOD' END as bal_min_max_compare,
CASE WHEN MIN(balance)  == MAX( balance) THEN MAX(balance) WHEN (MIN(balance) IS NULL OR MIN(balance) == '' OR MIN(balance) LIKE ' %' OR MIN(balance) == 0) AND (MAX(balance) IS NULL OR MAX(balance) == '' OR MAX(balance) LIKE ' %' OR MAX(balance) == 0) THEN MAX(balance)  ELSE 'GOOD' END as balance_min_max_compare,
CASE WHEN MIN(cinp)  == MAX( cinp) THEN MAX(cinp) WHEN (MIN(cinp) IS NULL OR MIN(cinp) == '' OR MIN(cinp) LIKE ' %' OR MIN(cinp) == 0) AND (MAX(cinp) IS NULL OR MAX(cinp) == '' OR MAX(cinp) LIKE ' %' OR MAX(cinp) == 0) THEN MAX(cinp)  ELSE 'GOOD' END as cinp_min_max_compare,
CASE WHEN MIN(cumdol)  == MAX( cumdol) THEN MAX(cumdol) WHEN (MIN(cumdol) IS NULL OR MIN(cumdol) == '' OR MIN(cumdol) LIKE ' %' OR MIN(cumdol) == 0) AND (MAX(cumdol) IS NULL OR MAX(cumdol) == '' OR MAX(cumdol) LIKE ' %' OR MAX(cumdol) == 0) THEN MAX(cumdol)  ELSE 'GOOD' END as cumdol_min_max_compare,
CASE WHEN MIN(cumeft)  == MAX( cumeft) THEN MAX(cumeft) WHEN (MIN(cumeft) IS NULL OR MIN(cumeft) == '' OR MIN(cumeft) LIKE ' %' OR MIN(cumeft) == 0) AND (MAX(cumeft) IS NULL OR MAX(cumeft) == '' OR MAX(cumeft) LIKE ' %' OR MAX(cumeft) == 0) THEN MAX(cumeft)  ELSE 'GOOD' END as cumeft_min_max_compare,
CASE WHEN MIN(cumord)  == MAX( cumord) THEN MAX(cumord) WHEN (MIN(cumord) IS NULL OR MIN(cumord) == '' OR MIN(cumord) LIKE ' %' OR MIN(cumord) == 0) AND (MAX(cumord) IS NULL OR MAX(cumord) == '' OR MAX(cumord) LIKE ' %' OR MAX(cumord) == 0) THEN MAX(cumord)  ELSE 'GOOD' END as cumord_min_max_compare,
CASE WHEN MIN(dash_cust_ind)  == MAX( dash_cust_ind) THEN MAX(dash_cust_ind) WHEN (MIN(dash_cust_ind) IS NULL OR MIN(dash_cust_ind) == '' OR MIN(dash_cust_ind) LIKE ' %' OR MIN(dash_cust_ind) == 0) AND (MAX(dash_cust_ind) IS NULL OR MAX(dash_cust_ind) == '' OR MAX(dash_cust_ind) LIKE ' %' OR MAX(dash_cust_ind) == 0) THEN MAX(dash_cust_ind)  ELSE 'GOOD' END as dash_cust_ind_min_max_compare,
CASE WHEN MIN(dt91)  == MAX( dt91) THEN MAX(dt91) WHEN (MIN(dt91) IS NULL OR MIN(dt91) == '' OR MIN(dt91) LIKE ' %' OR MIN(dt91) == 0) AND (MAX(dt91) IS NULL OR MAX(dt91) == '' OR MAX(dt91) LIKE ' %' OR MAX(dt91) == 0) THEN MAX(dt91)  ELSE 'GOOD' END as dt91_min_max_compare,
CASE WHEN MIN(dtlpmt1)  == MAX( dtlpmt1) THEN MAX(dtlpmt1) WHEN (MIN(dtlpmt1) IS NULL OR MIN(dtlpmt1) == '' OR MIN(dtlpmt1) LIKE ' %' OR MIN(dtlpmt1) == 0) AND (MAX(dtlpmt1) IS NULL OR MAX(dtlpmt1) == '' OR MAX(dtlpmt1) LIKE ' %' OR MAX(dtlpmt1) == 0) THEN MAX(dtlpmt1)  ELSE 'GOOD' END as dtlpmt1_min_max_compare,
CASE WHEN MIN(dtlprtpy)  == MAX( dtlprtpy) THEN MAX(dtlprtpy) WHEN (MIN(dtlprtpy) IS NULL OR MIN(dtlprtpy) == '' OR MIN(dtlprtpy) LIKE ' %' OR MIN(dtlprtpy) == 0) AND (MAX(dtlprtpy) IS NULL OR MAX(dtlprtpy) == '' OR MAX(dtlprtpy) LIKE ' %' OR MAX(dtlprtpy) == 0) THEN MAX(dtlprtpy)  ELSE 'GOOD' END as dtlprtpy_min_max_compare,
CASE WHEN MIN(dttotp)  == MAX( dttotp) THEN MAX(dttotp) WHEN (MIN(dttotp) IS NULL OR MIN(dttotp) == '' OR MIN(dttotp) LIKE ' %' OR MIN(dttotp) == 0) AND (MAX(dttotp) IS NULL OR MAX(dttotp) == '' OR MAX(dttotp) LIKE ' %' OR MAX(dttotp) == 0) THEN MAX(dttotp)  ELSE 'GOOD' END as dttotp_min_max_compare,
CASE WHEN MIN(dys)  == MAX( dys) THEN MAX(dys) WHEN (MIN(dys) IS NULL OR MIN(dys) == '' OR MIN(dys) LIKE ' %' OR MIN(dys) == 0) AND (MAX(dys) IS NULL OR MAX(dys) == '' OR MAX(dys) LIKE ' %' OR MAX(dys) == 0) THEN MAX(dys)  ELSE 'GOOD' END as dys_min_max_compare,
CASE WHEN MIN(eff1)  == MAX( eff1) THEN MAX(eff1) WHEN (MIN(eff1) IS NULL OR MIN(eff1) == '' OR MIN(eff1) LIKE ' %' OR MIN(eff1) == 0) AND (MAX(eff1) IS NULL OR MAX(eff1) == '' OR MAX(eff1) LIKE ' %' OR MAX(eff1) == 0) THEN MAX(eff1)  ELSE 'GOOD' END as eff1_min_max_compare,
CASE WHEN MIN(eff9)  == MAX( eff9) THEN MAX(eff9) WHEN (MIN(eff9) IS NULL OR MIN(eff9) == '' OR MIN(eff9) LIKE ' %' OR MIN(eff9) == 0) AND (MAX(eff9) IS NULL OR MAX(eff9) == '' OR MAX(eff9) LIKE ' %' OR MAX(eff9) == 0) THEN MAX(eff9)  ELSE 'GOOD' END as eff9_min_max_compare,
CASE WHEN MIN(effslo)  == MAX( effslo) THEN MAX(effslo) WHEN (MIN(effslo) IS NULL OR MIN(effslo) == '' OR MIN(effslo) LIKE ' %' OR MIN(effslo) == 0) AND (MAX(effslo) IS NULL OR MAX(effslo) == '' OR MAX(effslo) LIKE ' %' OR MAX(effslo) == 0) THEN MAX(effslo)  ELSE 'GOOD' END as effslo_min_max_compare,
CASE WHEN MIN(effswo)  == MAX( effswo) THEN MAX(effswo) WHEN (MIN(effswo) IS NULL OR MIN(effswo) == '' OR MIN(effswo) LIKE ' %' OR MIN(effswo) == 0) AND (MAX(effswo) IS NULL OR MAX(effswo) == '' OR MAX(effswo) LIKE ' %' OR MAX(effswo) == 0) THEN MAX(effswo)  ELSE 'GOOD' END as effswo_min_max_compare,
CASE WHEN MIN(gend)  == MAX( gend) THEN MAX(gend) WHEN (MIN(gend) IS NULL OR MIN(gend) == '' OR MIN(gend) LIKE ' %' OR MIN(gend) == 0) AND (MAX(gend) IS NULL OR MAX(gend) == '' OR MAX(gend) LIKE ' %' OR MAX(gend) == 0) THEN MAX(gend)  ELSE 'GOOD' END as gend_min_max_compare,
CASE WHEN MIN(gend_f)  == MAX( gend_f) THEN MAX(gend_f) WHEN (MIN(gend_f) IS NULL OR MIN(gend_f) == '' OR MIN(gend_f) LIKE ' %' OR MIN(gend_f) == 0) AND (MAX(gend_f) IS NULL OR MAX(gend_f) == '' OR MAX(gend_f) LIKE ' %' OR MAX(gend_f) == 0) THEN MAX(gend_f)  ELSE 'GOOD' END as gend_f_min_max_compare,
CASE WHEN MIN(hlft)  == MAX( hlft) THEN MAX(hlft) WHEN (MIN(hlft) IS NULL OR MIN(hlft) == '' OR MIN(hlft) LIKE ' %' OR MIN(hlft) == 0) AND (MAX(hlft) IS NULL OR MAX(hlft) == '' OR MAX(hlft) LIKE ' %' OR MAX(hlft) == 0) THEN MAX(hlft)  ELSE 'GOOD' END as hlft_min_max_compare,
CASE WHEN MIN(hspdpmdy)  == MAX( hspdpmdy) THEN MAX(hspdpmdy) WHEN (MIN(hspdpmdy) IS NULL OR MIN(hspdpmdy) == '' OR MIN(hspdpmdy) LIKE ' %' OR MIN(hspdpmdy) == 0) AND (MAX(hspdpmdy) IS NULL OR MAX(hspdpmdy) == '' OR MAX(hspdpmdy) LIKE ' %' OR MAX(hspdpmdy) == 0) THEN MAX(hspdpmdy)  ELSE 'GOOD' END as hspdpmdy_min_max_compare,
CASE WHEN MIN(hsunctr)  == MAX( hsunctr) THEN MAX(hsunctr) WHEN (MIN(hsunctr) IS NULL OR MIN(hsunctr) == '' OR MIN(hsunctr) LIKE ' %' OR MIN(hsunctr) == 0) AND (MAX(hsunctr) IS NULL OR MAX(hsunctr) == '' OR MAX(hsunctr) LIKE ' %' OR MAX(hsunctr) == 0) THEN MAX(hsunctr)  ELSE 'GOOD' END as hsunctr_min_max_compare,
CASE WHEN MIN(lcerldys)  == MAX( lcerldys) THEN MAX(lcerldys) WHEN (MIN(lcerldys) IS NULL OR MIN(lcerldys) == '' OR MIN(lcerldys) LIKE ' %' OR MIN(lcerldys) == 0) AND (MAX(lcerldys) IS NULL OR MAX(lcerldys) == '' OR MAX(lcerldys) LIKE ' %' OR MAX(lcerldys) == 0) THEN MAX(lcerldys)  ELSE 'GOOD' END as lcerldys_min_max_compare,
CASE WHEN MIN(lcpymdys)  == MAX( lcpymdys) THEN MAX(lcpymdys) WHEN (MIN(lcpymdys) IS NULL OR MIN(lcpymdys) == '' OR MIN(lcpymdys) LIKE ' %' OR MIN(lcpymdys) == 0) AND (MAX(lcpymdys) IS NULL OR MAX(lcpymdys) == '' OR MAX(lcpymdys) LIKE ' %' OR MAX(lcpymdys) == 0) THEN MAX(lcpymdys)  ELSE 'GOOD' END as lcpymdys_min_max_compare,
CASE WHEN MIN(max_days_delinq)  == MAX( max_days_delinq) THEN MAX(max_days_delinq) WHEN (MIN(max_days_delinq) IS NULL OR MIN(max_days_delinq) == '' OR MIN(max_days_delinq) LIKE ' %' OR MIN(max_days_delinq) == 0) AND (MAX(max_days_delinq) IS NULL OR MAX(max_days_delinq) == '' OR MAX(max_days_delinq) LIKE ' %' OR MAX(max_days_delinq) == 0) THEN MAX(max_days_delinq)  ELSE 'GOOD' END as max_days_delinq_min_max_compare,
CASE WHEN MIN(miss)  == MAX( miss) THEN MAX(miss) WHEN (MIN(miss) IS NULL OR MIN(miss) == '' OR MIN(miss) LIKE ' %' OR MIN(miss) == 0) AND (MAX(miss) IS NULL OR MAX(miss) == '' OR MAX(miss) LIKE ' %' OR MAX(miss) == 0) THEN MAX(miss)  ELSE 'GOOD' END as miss_min_max_compare,
CASE WHEN MIN(nondys1)  == MAX( nondys1) THEN MAX(nondys1) WHEN (MIN(nondys1) IS NULL OR MIN(nondys1) == '' OR MIN(nondys1) LIKE ' %' OR MIN(nondys1) == 0) AND (MAX(nondys1) IS NULL OR MAX(nondys1) == '' OR MAX(nondys1) LIKE ' %' OR MAX(nondys1) == 0) THEN MAX(nondys1)  ELSE 'GOOD' END as nondys1_min_max_compare,
CASE WHEN MIN(nonyrc)  == MAX( nonyrc) THEN MAX(nonyrc) WHEN (MIN(nonyrc) IS NULL OR MIN(nonyrc) == '' OR MIN(nonyrc) LIKE ' %' OR MIN(nonyrc) == 0) AND (MAX(nonyrc) IS NULL OR MAX(nonyrc) == '' OR MAX(nonyrc) LIKE ' %' OR MAX(nonyrc) == 0) THEN MAX(nonyrc)  ELSE 'GOOD' END as nonyrc_min_max_compare,
CASE WHEN MIN(nordslcn)  == MAX( nordslcn) THEN MAX(nordslcn) WHEN (MIN(nordslcn) IS NULL OR MIN(nordslcn) == '' OR MIN(nordslcn) LIKE ' %' OR MIN(nordslcn) == 0) AND (MAX(nordslcn) IS NULL OR MAX(nordslcn) == '' OR MAX(nordslcn) LIKE ' %' OR MAX(nordslcn) == 0) THEN MAX(nordslcn)  ELSE 'GOOD' END as nordslcn_min_max_compare,
CASE WHEN MIN(np)  == MAX( np) THEN MAX(np) WHEN (MIN(np) IS NULL OR MIN(np) == '' OR MIN(np) LIKE ' %' OR MIN(np) == 0) AND (MAX(np) IS NULL OR MAX(np) == '' OR MAX(np) LIKE ' %' OR MAX(np) == 0) THEN MAX(np)  ELSE 'GOOD' END as np_min_max_compare,
CASE WHEN MIN(npavgord)  == MAX( npavgord) THEN MAX(npavgord) WHEN (MIN(npavgord) IS NULL OR MIN(npavgord) == '' OR MIN(npavgord) LIKE ' %' OR MIN(npavgord) == 0) AND (MAX(npavgord) IS NULL OR MAX(npavgord) == '' OR MAX(npavgord) LIKE ' %' OR MAX(npavgord) == 0) THEN MAX(npavgord)  ELSE 'GOOD' END as npavgord_min_max_compare,
CASE WHEN MIN(npay3mo)  == MAX( npay3mo) THEN MAX(npay3mo) WHEN (MIN(npay3mo) IS NULL OR MIN(npay3mo) == '' OR MIN(npay3mo) LIKE ' %' OR MIN(npay3mo) == 0) AND (MAX(npay3mo) IS NULL OR MAX(npay3mo) == '' OR MAX(npay3mo) LIKE ' %' OR MAX(npay3mo) == 0) THEN MAX(npay3mo)  ELSE 'GOOD' END as npay3mo_min_max_compare,
CASE WHEN MIN(npbackmn)  == MAX( npbackmn) THEN MAX(npbackmn) WHEN (MIN(npbackmn) IS NULL OR MIN(npbackmn) == '' OR MIN(npbackmn) LIKE ' %' OR MIN(npbackmn) == 0) AND (MAX(npbackmn) IS NULL OR MAX(npbackmn) == '' OR MAX(npbackmn) LIKE ' %' OR MAX(npbackmn) == 0) THEN MAX(npbackmn)  ELSE 'GOOD' END as npbackmn_min_max_compare,
CASE WHEN MIN(npcumcch)  == MAX( npcumcch) THEN MAX(npcumcch) WHEN (MIN(npcumcch) IS NULL OR MIN(npcumcch) == '' OR MIN(npcumcch) LIKE ' %' OR MIN(npcumcch) == 0) AND (MAX(npcumcch) IS NULL OR MAX(npcumcch) == '' OR MAX(npcumcch) LIKE ' %' OR MAX(npcumcch) == 0) THEN MAX(npcumcch)  ELSE 'GOOD' END as npcumcch_min_max_compare,
CASE WHEN MIN(npcumdol)  == MAX( npcumdol) THEN MAX(npcumdol) WHEN (MIN(npcumdol) IS NULL OR MIN(npcumdol) == '' OR MIN(npcumdol) LIKE ' %' OR MIN(npcumdol) == 0) AND (MAX(npcumdol) IS NULL OR MAX(npcumdol) == '' OR MAX(npcumdol) LIKE ' %' OR MAX(npcumdol) == 0) THEN MAX(npcumdol)  ELSE 'GOOD' END as npcumdol_min_max_compare,
CASE WHEN MIN(npcumeft)  == MAX( npcumeft) THEN MAX(npcumeft) WHEN (MIN(npcumeft) IS NULL OR MIN(npcumeft) == '' OR MIN(npcumeft) LIKE ' %' OR MIN(npcumeft) == 0) AND (MAX(npcumeft) IS NULL OR MAX(npcumeft) == '' OR MAX(npcumeft) LIKE ' %' OR MAX(npcumeft) == 0) THEN MAX(npcumeft)  ELSE 'GOOD' END as npcumeft_min_max_compare,
CASE WHEN MIN(npcumord)  == MAX( npcumord) THEN MAX(npcumord) WHEN (MIN(npcumord) IS NULL OR MIN(npcumord) == '' OR MIN(npcumord) LIKE ' %' OR MIN(npcumord) == 0) AND (MAX(npcumord) IS NULL OR MAX(npcumord) == '' OR MAX(npcumord) LIKE ' %' OR MAX(npcumord) == 0) THEN MAX(npcumord)  ELSE 'GOOD' END as npcumord_min_max_compare,
CASE WHEN MIN(npcumstp)  == MAX( npcumstp) THEN MAX(npcumstp) WHEN (MIN(npcumstp) IS NULL OR MIN(npcumstp) == '' OR MIN(npcumstp) LIKE ' %' OR MIN(npcumstp) == 0) AND (MAX(npcumstp) IS NULL OR MAX(npcumstp) == '' OR MAX(npcumstp) LIKE ' %' OR MAX(npcumstp) == 0) THEN MAX(npcumstp)  ELSE 'GOOD' END as npcumstp_min_max_compare,
CASE WHEN MIN(npcumwks)  == MAX( npcumwks) THEN MAX(npcumwks) WHEN (MIN(npcumwks) IS NULL OR MIN(npcumwks) == '' OR MIN(npcumwks) LIKE ' %' OR MIN(npcumwks) == 0) AND (MAX(npcumwks) IS NULL OR MAX(npcumwks) == '' OR MAX(npcumwks) LIKE ' %' OR MAX(npcumwks) == 0) THEN MAX(npcumwks)  ELSE 'GOOD' END as npcumwks_min_max_compare,
CASE WHEN MIN(npdttotp)  == MAX( npdttotp) THEN MAX(npdttotp) WHEN (MIN(npdttotp) IS NULL OR MIN(npdttotp) == '' OR MIN(npdttotp) LIKE ' %' OR MIN(npdttotp) == 0) AND (MAX(npdttotp) IS NULL OR MAX(npdttotp) == '' OR MAX(npdttotp) LIKE ' %' OR MAX(npdttotp) == 0) THEN MAX(npdttotp)  ELSE 'GOOD' END as npdttotp_min_max_compare,
CASE WHEN MIN(npeffswo)  == MAX( npeffswo) THEN MAX(npeffswo) WHEN (MIN(npeffswo) IS NULL OR MIN(npeffswo) == '' OR MIN(npeffswo) LIKE ' %' OR MIN(npeffswo) == 0) AND (MAX(npeffswo) IS NULL OR MAX(npeffswo) == '' OR MAX(npeffswo) LIKE ' %' OR MAX(npeffswo) == 0) THEN MAX(npeffswo)  ELSE 'GOOD' END as npeffswo_min_max_compare,
CASE WHEN MIN(nplcdys)  == MAX( nplcdys) THEN MAX(nplcdys) WHEN (MIN(nplcdys) IS NULL OR MIN(nplcdys) == '' OR MIN(nplcdys) LIKE ' %' OR MIN(nplcdys) == 0) AND (MAX(nplcdys) IS NULL OR MAX(nplcdys) == '' OR MAX(nplcdys) LIKE ' %' OR MAX(nplcdys) == 0) THEN MAX(nplcdys)  ELSE 'GOOD' END as nplcdys_min_max_compare,
CASE WHEN MIN(npnonds1)  == MAX( npnonds1) THEN MAX(npnonds1) WHEN (MIN(npnonds1) IS NULL OR MIN(npnonds1) == '' OR MIN(npnonds1) LIKE ' %' OR MIN(npnonds1) == 0) AND (MAX(npnonds1) IS NULL OR MAX(npnonds1) == '' OR MAX(npnonds1) LIKE ' %' OR MAX(npnonds1) == 0) THEN MAX(npnonds1)  ELSE 'GOOD' END as npnonds1_min_max_compare,
CASE WHEN MIN(npnonds2)  == MAX( npnonds2) THEN MAX(npnonds2) WHEN (MIN(npnonds2) IS NULL OR MIN(npnonds2) == '' OR MIN(npnonds2) LIKE ' %' OR MIN(npnonds2) == 0) AND (MAX(npnonds2) IS NULL OR MAX(npnonds2) == '' OR MAX(npnonds2) LIKE ' %' OR MAX(npnonds2) == 0) THEN MAX(npnonds2)  ELSE 'GOOD' END as npnonds2_min_max_compare,
CASE WHEN MIN(npopdt1)  == MAX( npopdt1) THEN MAX(npopdt1) WHEN (MIN(npopdt1) IS NULL OR MIN(npopdt1) == '' OR MIN(npopdt1) LIKE ' %' OR MIN(npopdt1) == 0) AND (MAX(npopdt1) IS NULL OR MAX(npopdt1) == '' OR MAX(npopdt1) LIKE ' %' OR MAX(npopdt1) == 0) THEN MAX(npopdt1)  ELSE 'GOOD' END as npopdt1_min_max_compare,
CASE WHEN MIN(npopdys1)  == MAX( npopdys1) THEN MAX(npopdys1) WHEN (MIN(npopdys1) IS NULL OR MIN(npopdys1) == '' OR MIN(npopdys1) LIKE ' %' OR MIN(npopdys1) == 0) AND (MAX(npopdys1) IS NULL OR MAX(npopdys1) == '' OR MAX(npopdys1) LIKE ' %' OR MAX(npopdys1) == 0) THEN MAX(npopdys1)  ELSE 'GOOD' END as npopdys1_min_max_compare,
CASE WHEN MIN(npopennm)  == MAX( npopennm) THEN MAX(npopennm) WHEN (MIN(npopennm) IS NULL OR MIN(npopennm) == '' OR MIN(npopennm) LIKE ' %' OR MIN(npopennm) == 0) AND (MAX(npopennm) IS NULL OR MAX(npopennm) == '' OR MAX(npopennm) LIKE ' %' OR MAX(npopennm) == 0) THEN MAX(npopennm)  ELSE 'GOOD' END as npopennm_min_max_compare,
CASE WHEN MIN(npopprop)  == MAX( npopprop) THEN MAX(npopprop) WHEN (MIN(npopprop) IS NULL OR MIN(npopprop) == '' OR MIN(npopprop) LIKE ' %' OR MIN(npopprop) == 0) AND (MAX(npopprop) IS NULL OR MAX(npopprop) == '' OR MAX(npopprop) LIKE ' %' OR MAX(npopprop) == 0) THEN MAX(npopprop)  ELSE 'GOOD' END as npopprop_min_max_compare,
CASE WHEN MIN(npordage)  == MAX( npordage) THEN MAX(npordage) WHEN (MIN(npordage) IS NULL OR MIN(npordage) == '' OR MIN(npordage) LIKE ' %' OR MIN(npordage) == 0) AND (MAX(npordage) IS NULL OR MAX(npordage) == '' OR MAX(npordage) LIKE ' %' OR MAX(npordage) == 0) THEN MAX(npordage)  ELSE 'GOOD' END as npordage_min_max_compare,
CASE WHEN MIN(npordys1)  == MAX( npordys1) THEN MAX(npordys1) WHEN (MIN(npordys1) IS NULL OR MIN(npordys1) == '' OR MIN(npordys1) LIKE ' %' OR MIN(npordys1) == 0) AND (MAX(npordys1) IS NULL OR MAX(npordys1) == '' OR MAX(npordys1) LIKE ' %' OR MAX(npordys1) == 0) THEN MAX(npordys1)  ELSE 'GOOD' END as npordys1_min_max_compare,
CASE WHEN MIN(nporlcs1)  == MAX( nporlcs1) THEN MAX(nporlcs1) WHEN (MIN(nporlcs1) IS NULL OR MIN(nporlcs1) == '' OR MIN(nporlcs1) LIKE ' %' OR MIN(nporlcs1) == 0) AND (MAX(nporlcs1) IS NULL OR MAX(nporlcs1) == '' OR MAX(nporlcs1) LIKE ' %' OR MAX(nporlcs1) == 0) THEN MAX(nporlcs1)  ELSE 'GOOD' END as nporlcs1_min_max_compare,
CASE WHEN MIN(nppchmos)  == MAX( nppchmos) THEN MAX(nppchmos) WHEN (MIN(nppchmos) IS NULL OR MIN(nppchmos) == '' OR MIN(nppchmos) LIKE ' %' OR MIN(nppchmos) == 0) AND (MAX(nppchmos) IS NULL OR MAX(nppchmos) == '' OR MAX(nppchmos) LIKE ' %' OR MAX(nppchmos) == 0) THEN MAX(nppchmos)  ELSE 'GOOD' END as nppchmos_min_max_compare,
CASE WHEN MIN(nppddol)  == MAX( nppddol) THEN MAX(nppddol) WHEN (MIN(nppddol) IS NULL OR MIN(nppddol) == '' OR MIN(nppddol) LIKE ' %' OR MIN(nppddol) == 0) AND (MAX(nppddol) IS NULL OR MAX(nppddol) == '' OR MAX(nppddol) LIKE ' %' OR MAX(nppddol) == 0) THEN MAX(nppddol)  ELSE 'GOOD' END as nppddol_min_max_compare,
CASE WHEN MIN(nppddys1)  == MAX( nppddys1) THEN MAX(nppddys1) WHEN (MIN(nppddys1) IS NULL OR MIN(nppddys1) == '' OR MIN(nppddys1) LIKE ' %' OR MIN(nppddys1) == 0) AND (MAX(nppddys1) IS NULL OR MAX(nppddys1) == '' OR MAX(nppddys1) LIKE ' %' OR MAX(nppddys1) == 0) THEN MAX(nppddys1)  ELSE 'GOOD' END as nppddys1_min_max_compare,
CASE WHEN MIN(nppdlcdy)  == MAX( nppdlcdy) THEN MAX(nppdlcdy) WHEN (MIN(nppdlcdy) IS NULL OR MIN(nppdlcdy) == '' OR MIN(nppdlcdy) LIKE ' %' OR MIN(nppdlcdy) == 0) AND (MAX(nppdlcdy) IS NULL OR MAX(nppdlcdy) == '' OR MAX(nppdlcdy) LIKE ' %' OR MAX(nppdlcdy) == 0) THEN MAX(nppdlcdy)  ELSE 'GOOD' END as nppdlcdy_min_max_compare,
CASE WHEN MIN(nppdord)  == MAX( nppdord) THEN MAX(nppdord) WHEN (MIN(nppdord) IS NULL OR MIN(nppdord) == '' OR MIN(nppdord) LIKE ' %' OR MIN(nppdord) == 0) AND (MAX(nppdord) IS NULL OR MAX(nppdord) == '' OR MAX(nppdord) LIKE ' %' OR MAX(nppdord) == 0) THEN MAX(nppdord)  ELSE 'GOOD' END as nppdord_min_max_compare,
CASE WHEN MIN(nppdpmdy)  == MAX( nppdpmdy) THEN MAX(nppdpmdy) WHEN (MIN(nppdpmdy) IS NULL OR MIN(nppdpmdy) == '' OR MIN(nppdpmdy) LIKE ' %' OR MIN(nppdpmdy) == 0) AND (MAX(nppdpmdy) IS NULL OR MAX(nppdpmdy) == '' OR MAX(nppdpmdy) LIKE ' %' OR MAX(nppdpmdy) == 0) THEN MAX(nppdpmdy)  ELSE 'GOOD' END as nppdpmdy_min_max_compare,
CASE WHEN MIN(nppdsodl)  == MAX( nppdsodl) THEN MAX(nppdsodl) WHEN (MIN(nppdsodl) IS NULL OR MIN(nppdsodl) == '' OR MIN(nppdsodl) LIKE ' %' OR MIN(nppdsodl) == 0) AND (MAX(nppdsodl) IS NULL OR MAX(nppdsodl) == '' OR MAX(nppdsodl) LIKE ' %' OR MAX(nppdsodl) == 0) THEN MAX(nppdsodl)  ELSE 'GOOD' END as nppdsodl_min_max_compare,
CASE WHEN MIN(nppmdt1)  == MAX( nppmdt1) THEN MAX(nppmdt1) WHEN (MIN(nppmdt1) IS NULL OR MIN(nppmdt1) == '' OR MIN(nppmdt1) LIKE ' %' OR MIN(nppmdt1) == 0) AND (MAX(nppmdt1) IS NULL OR MAX(nppmdt1) == '' OR MAX(nppmdt1) LIKE ' %' OR MAX(nppmdt1) == 0) THEN MAX(nppmdt1)  ELSE 'GOOD' END as nppmdt1_min_max_compare,
CASE WHEN MIN(nppmdys1)  == MAX( nppmdys1) THEN MAX(nppmdys1) WHEN (MIN(nppmdys1) IS NULL OR MIN(nppmdys1) == '' OR MIN(nppmdys1) LIKE ' %' OR MIN(nppmdys1) == 0) AND (MAX(nppmdys1) IS NULL OR MAX(nppmdys1) == '' OR MAX(nppmdys1) LIKE ' %' OR MAX(nppmdys1) == 0) THEN MAX(nppmdys1)  ELSE 'GOOD' END as nppmdys1_min_max_compare,
CASE WHEN MIN(nppmdys2)  == MAX( nppmdys2) THEN MAX(nppmdys2) WHEN (MIN(nppmdys2) IS NULL OR MIN(nppmdys2) == '' OR MIN(nppmdys2) LIKE ' %' OR MIN(nppmdys2) == 0) AND (MAX(nppmdys2) IS NULL OR MAX(nppmdys2) == '' OR MAX(nppmdys2) LIKE ' %' OR MAX(nppmdys2) == 0) THEN MAX(nppmdys2)  ELSE 'GOOD' END as nppmdys2_min_max_compare,
CASE WHEN MIN(npprod)  == MAX( npprod) THEN MAX(npprod) WHEN (MIN(npprod) IS NULL OR MIN(npprod) == '' OR MIN(npprod) LIKE ' %' OR MIN(npprod) == 0) AND (MAX(npprod) IS NULL OR MAX(npprod) == '' OR MAX(npprod) LIKE ' %' OR MAX(npprod) == 0) THEN MAX(npprod)  ELSE 'GOOD' END as npprod_min_max_compare,
CASE WHEN MIN(npprtpy)  == MAX( npprtpy) THEN MAX(npprtpy) WHEN (MIN(npprtpy) IS NULL OR MIN(npprtpy) == '' OR MIN(npprtpy) LIKE ' %' OR MIN(npprtpy) == 0) AND (MAX(npprtpy) IS NULL OR MAX(npprtpy) == '' OR MAX(npprtpy) LIKE ' %' OR MAX(npprtpy) == 0) THEN MAX(npprtpy)  ELSE 'GOOD' END as npprtpy_min_max_compare,
CASE WHEN MIN(npstatus)  == MAX( npstatus) THEN MAX(npstatus) WHEN (MIN(npstatus) IS NULL OR MIN(npstatus) == '' OR MIN(npstatus) LIKE ' %' OR MIN(npstatus) == 0) AND (MAX(npstatus) IS NULL OR MAX(npstatus) == '' OR MAX(npstatus) LIKE ' %' OR MAX(npstatus) == 0) THEN MAX(npstatus)  ELSE 'GOOD' END as npstatus_min_max_compare,
CASE WHEN MIN(npuncctr)  == MAX( npuncctr) THEN MAX(npuncctr) WHEN (MIN(npuncctr) IS NULL OR MIN(npuncctr) == '' OR MIN(npuncctr) LIKE ' %' OR MIN(npuncctr) == 0) AND (MAX(npuncctr) IS NULL OR MAX(npuncctr) == '' OR MAX(npuncctr) LIKE ' %' OR MAX(npuncctr) == 0) THEN MAX(npuncctr)  ELSE 'GOOD' END as npuncctr_min_max_compare,
CASE WHEN MIN(npvareff)  == MAX( npvareff) THEN MAX(npvareff) WHEN (MIN(npvareff) IS NULL OR MIN(npvareff) == '' OR MIN(npvareff) LIKE ' %' OR MIN(npvareff) == 0) AND (MAX(npvareff) IS NULL OR MAX(npvareff) == '' OR MAX(npvareff) LIKE ' %' OR MAX(npvareff) == 0) THEN MAX(npvareff)  ELSE 'GOOD' END as npvareff_min_max_compare,
CASE WHEN MIN(npvarmag)  == MAX( npvarmag) THEN MAX(npvarmag) WHEN (MIN(npvarmag) IS NULL OR MIN(npvarmag) == '' OR MIN(npvarmag) LIKE ' %' OR MIN(npvarmag) == 0) AND (MAX(npvarmag) IS NULL OR MAX(npvarmag) == '' OR MAX(npvarmag) LIKE ' %' OR MAX(npvarmag) == 0) THEN MAX(npvarmag)  ELSE 'GOOD' END as npvarmag_min_max_compare,
CASE WHEN MIN(npvaropn)  == MAX( npvaropn) THEN MAX(npvaropn) WHEN (MIN(npvaropn) IS NULL OR MIN(npvaropn) == '' OR MIN(npvaropn) LIKE ' %' OR MIN(npvaropn) == 0) AND (MAX(npvaropn) IS NULL OR MAX(npvaropn) == '' OR MAX(npvaropn) LIKE ' %' OR MAX(npvaropn) == 0) THEN MAX(npvaropn)  ELSE 'GOOD' END as npvaropn_min_max_compare,
CASE WHEN MIN(npvarpd)  == MAX( npvarpd) THEN MAX(npvarpd) WHEN (MIN(npvarpd) IS NULL OR MIN(npvarpd) == '' OR MIN(npvarpd) LIKE ' %' OR MIN(npvarpd) == 0) AND (MAX(npvarpd) IS NULL OR MAX(npvarpd) == '' OR MAX(npvarpd) LIKE ' %' OR MAX(npvarpd) == 0) THEN MAX(npvarpd)  ELSE 'GOOD' END as npvarpd_min_max_compare,
CASE WHEN MIN(npvclctr)  == MAX( npvclctr) THEN MAX(npvclctr) WHEN (MIN(npvclctr) IS NULL OR MIN(npvclctr) == '' OR MIN(npvclctr) LIKE ' %' OR MIN(npvclctr) == 0) AND (MAX(npvclctr) IS NULL OR MAX(npvclctr) == '' OR MAX(npvclctr) LIKE ' %' OR MAX(npvclctr) == 0) THEN MAX(npvclctr)  ELSE 'GOOD' END as npvclctr_min_max_compare,
CASE WHEN MIN(npxopss1)  == MAX( npxopss1) THEN MAX(npxopss1) WHEN (MIN(npxopss1) IS NULL OR MIN(npxopss1) == '' OR MIN(npxopss1) LIKE ' %' OR MIN(npxopss1) == 0) AND (MAX(npxopss1) IS NULL OR MAX(npxopss1) == '' OR MAX(npxopss1) LIKE ' %' OR MAX(npxopss1) == 0) THEN MAX(npxopss1)  ELSE 'GOOD' END as npxopss1_min_max_compare,
CASE WHEN MIN(npxpddt1)  == MAX( npxpddt1) THEN MAX(npxpddt1) WHEN (MIN(npxpddt1) IS NULL OR MIN(npxpddt1) == '' OR MIN(npxpddt1) LIKE ' %' OR MIN(npxpddt1) == 0) AND (MAX(npxpddt1) IS NULL OR MAX(npxpddt1) == '' OR MAX(npxpddt1) LIKE ' %' OR MAX(npxpddt1) == 0) THEN MAX(npxpddt1)  ELSE 'GOOD' END as npxpddt1_min_max_compare,
CASE WHEN MIN(npzip)  == MAX( npzip) THEN MAX(npzip) WHEN (MIN(npzip) IS NULL OR MIN(npzip) == '' OR MIN(npzip) LIKE ' %' OR MIN(npzip) == 0) AND (MAX(npzip) IS NULL OR MAX(npzip) == '' OR MAX(npzip) LIKE ' %' OR MAX(npzip) == 0) THEN MAX(npzip)  ELSE 'GOOD' END as npzip_min_max_compare,
CASE WHEN MIN(nret7mo)  == MAX( nret7mo) THEN MAX(nret7mo) WHEN (MIN(nret7mo) IS NULL OR MIN(nret7mo) == '' OR MIN(nret7mo) LIKE ' %' OR MIN(nret7mo) == 0) AND (MAX(nret7mo) IS NULL OR MAX(nret7mo) == '' OR MAX(nret7mo) LIKE ' %' OR MAX(nret7mo) == 0) THEN MAX(nret7mo)  ELSE 'GOOD' END as nret7mo_min_max_compare,
CASE WHEN MIN(num_dlq)  == MAX( num_dlq) THEN MAX(num_dlq) WHEN (MIN(num_dlq) IS NULL OR MIN(num_dlq) == '' OR MIN(num_dlq) LIKE ' %' OR MIN(num_dlq) == 0) AND (MAX(num_dlq) IS NULL OR MAX(num_dlq) == '' OR MAX(num_dlq) LIKE ' %' OR MAX(num_dlq) == 0) THEN MAX(num_dlq)  ELSE 'GOOD' END as num_dlq_min_max_compare,
CASE WHEN MIN(numaff)  == MAX( numaff) THEN MAX(numaff) WHEN (MIN(numaff) IS NULL OR MIN(numaff) == '' OR MIN(numaff) LIKE ' %' OR MIN(numaff) == 0) AND (MAX(numaff) IS NULL OR MAX(numaff) == '' OR MAX(numaff) LIKE ' %' OR MAX(numaff) == 0) THEN MAX(numaff)  ELSE 'GOOD' END as numaff_min_max_compare,
CASE WHEN MIN(opennm)  == MAX( opennm) THEN MAX(opennm) WHEN (MIN(opennm) IS NULL OR MIN(opennm) == '' OR MIN(opennm) LIKE ' %' OR MIN(opennm) == 0) AND (MAX(opennm) IS NULL OR MAX(opennm) == '' OR MAX(opennm) LIKE ' %' OR MAX(opennm) == 0) THEN MAX(opennm)  ELSE 'GOOD' END as opennm_min_max_compare,
CASE WHEN MIN(optvm)  == MAX( optvm) THEN MAX(optvm) WHEN (MIN(optvm) IS NULL OR MIN(optvm) == '' OR MIN(optvm) LIKE ' %' OR MIN(optvm) == 0) AND (MAX(optvm) IS NULL OR MAX(optvm) == '' OR MAX(optvm) LIKE ' %' OR MAX(optvm) == 0) THEN MAX(optvm)  ELSE 'GOOD' END as optvm_min_max_compare,
CASE WHEN MIN(ordda1)  == MAX( ordda1) THEN MAX(ordda1) WHEN (MIN(ordda1) IS NULL OR MIN(ordda1) == '' OR MIN(ordda1) LIKE ' %' OR MIN(ordda1) == 0) AND (MAX(ordda1) IS NULL OR MAX(ordda1) == '' OR MAX(ordda1) LIKE ' %' OR MAX(ordda1) == 0) THEN MAX(ordda1)  ELSE 'GOOD' END as ordda1_min_max_compare,
CASE WHEN MIN(ordslcan)  == MAX( ordslcan) THEN MAX(ordslcan) WHEN (MIN(ordslcan) IS NULL OR MIN(ordslcan) == '' OR MIN(ordslcan) LIKE ' %' OR MIN(ordslcan) == 0) AND (MAX(ordslcan) IS NULL OR MAX(ordslcan) == '' OR MAX(ordslcan) LIKE ' %' OR MAX(ordslcan) == 0) THEN MAX(ordslcan)  ELSE 'GOOD' END as ordslcan_min_max_compare,
CASE WHEN MIN(paydy1)  == MAX( paydy1) THEN MAX(paydy1) WHEN (MIN(paydy1) IS NULL OR MIN(paydy1) == '' OR MIN(paydy1) LIKE ' %' OR MIN(paydy1) == 0) AND (MAX(paydy1) IS NULL OR MAX(paydy1) == '' OR MAX(paydy1) LIKE ' %' OR MAX(paydy1) == 0) THEN MAX(paydy1)  ELSE 'GOOD' END as paydy1_min_max_compare,
CASE WHEN MIN(pchamos)  == MAX( pchamos) THEN MAX(pchamos) WHEN (MIN(pchamos) IS NULL OR MIN(pchamos) == '' OR MIN(pchamos) LIKE ' %' OR MIN(pchamos) == 0) AND (MAX(pchamos) IS NULL OR MAX(pchamos) == '' OR MAX(pchamos) LIKE ' %' OR MAX(pchamos) == 0) THEN MAX(pchamos)  ELSE 'GOOD' END as pchamos_min_max_compare,
CASE WHEN MIN(pdmdsit4yr)  == MAX( pdmdsit4yr) THEN MAX(pdmdsit4yr) WHEN (MIN(pdmdsit4yr) IS NULL OR MIN(pdmdsit4yr) == '' OR MIN(pdmdsit4yr) LIKE ' %' OR MIN(pdmdsit4yr) == 0) AND (MAX(pdmdsit4yr) IS NULL OR MAX(pdmdsit4yr) == '' OR MAX(pdmdsit4yr) LIKE ' %' OR MAX(pdmdsit4yr) == 0) THEN MAX(pdmdsit4yr)  ELSE 'GOOD' END as pdmdsit4yr_min_max_compare,
CASE WHEN MIN(pdo3)  == MAX( pdo3) THEN MAX(pdo3) WHEN (MIN(pdo3) IS NULL OR MIN(pdo3) == '' OR MIN(pdo3) LIKE ' %' OR MIN(pdo3) == 0) AND (MAX(pdo3) IS NULL OR MAX(pdo3) == '' OR MAX(pdo3) LIKE ' %' OR MAX(pdo3) == 0) THEN MAX(pdo3)  ELSE 'GOOD' END as pdo3_min_max_compare,
CASE WHEN MIN(pdollar6)  == MAX( pdollar6) THEN MAX(pdollar6) WHEN (MIN(pdollar6) IS NULL OR MIN(pdollar6) == '' OR MIN(pdollar6) LIKE ' %' OR MIN(pdollar6) == 0) AND (MAX(pdollar6) IS NULL OR MAX(pdollar6) == '' OR MAX(pdollar6) LIKE ' %' OR MAX(pdollar6) == 0) THEN MAX(pdollar6)  ELSE 'GOOD' END as pdollar6_min_max_compare,
CASE WHEN MIN(pmdys1)  == MAX( pmdys1) THEN MAX(pmdys1) WHEN (MIN(pmdys1) IS NULL OR MIN(pmdys1) == '' OR MIN(pmdys1) LIKE ' %' OR MIN(pmdys1) == 0) AND (MAX(pmdys1) IS NULL OR MAX(pmdys1) == '' OR MAX(pmdys1) LIKE ' %' OR MAX(pmdys1) == 0) THEN MAX(pmdys1)  ELSE 'GOOD' END as pmdys1_min_max_compare,
CASE WHEN MIN(pmtdt6)  == MAX( pmtdt6) THEN MAX(pmtdt6) WHEN (MIN(pmtdt6) IS NULL OR MIN(pmtdt6) == '' OR MIN(pmtdt6) LIKE ' %' OR MIN(pmtdt6) == 0) AND (MAX(pmtdt6) IS NULL OR MAX(pmtdt6) == '' OR MAX(pmtdt6) LIKE ' %' OR MAX(pmtdt6) == 0) THEN MAX(pmtdt6)  ELSE 'GOOD' END as pmtdt6_min_max_compare,
CASE WHEN MIN(pnoltv12)  == MAX( pnoltv12) THEN MAX(pnoltv12) WHEN (MIN(pnoltv12) IS NULL OR MIN(pnoltv12) == '' OR MIN(pnoltv12) LIKE ' %' OR MIN(pnoltv12) == 0) AND (MAX(pnoltv12) IS NULL OR MAX(pnoltv12) == '' OR MAX(pnoltv12) LIKE ' %' OR MAX(pnoltv12) == 0) THEN MAX(pnoltv12)  ELSE 'GOOD' END as pnoltv12_min_max_compare,
CASE WHEN MIN(prev3mo_ctm_mod)  == MAX( prev3mo_ctm_mod) THEN MAX(prev3mo_ctm_mod) WHEN (MIN(prev3mo_ctm_mod) IS NULL OR MIN(prev3mo_ctm_mod) == '' OR MIN(prev3mo_ctm_mod) LIKE ' %' OR MIN(prev3mo_ctm_mod) == 0) AND (MAX(prev3mo_ctm_mod) IS NULL OR MAX(prev3mo_ctm_mod) == '' OR MAX(prev3mo_ctm_mod) LIKE ' %' OR MAX(prev3mo_ctm_mod) == 0) THEN MAX(prev3mo_ctm_mod)  ELSE 'GOOD' END as prev3mo_ctm_mod_min_max_compare,
CASE WHEN MIN(prtfudys)  == MAX( prtfudys) THEN MAX(prtfudys) WHEN (MIN(prtfudys) IS NULL OR MIN(prtfudys) == '' OR MIN(prtfudys) LIKE ' %' OR MIN(prtfudys) == 0) AND (MAX(prtfudys) IS NULL OR MAX(prtfudys) == '' OR MAX(prtfudys) LIKE ' %' OR MAX(prtfudys) == 0) THEN MAX(prtfudys)  ELSE 'GOOD' END as prtfudys_min_max_compare,
CASE WHEN MIN(risk)  == MAX( risk) THEN MAX(risk) WHEN (MIN(risk) IS NULL OR MIN(risk) == '' OR MIN(risk) LIKE ' %' OR MIN(risk) == 0) AND (MAX(risk) IS NULL OR MAX(risk) == '' OR MAX(risk) LIKE ' %' OR MAX(risk) == 0) THEN MAX(risk)  ELSE 'GOOD' END as risk_min_max_compare,
CASE WHEN MIN(status)  == MAX( status) THEN MAX(status) WHEN (MIN(status) IS NULL OR MIN(status) == '' OR MIN(status) LIKE ' %' OR MIN(status) == 0) AND (MAX(status) IS NULL OR MAX(status) == '' OR MAX(status) LIKE ' %' OR MAX(status) == 0) THEN MAX(status)  ELSE 'GOOD' END as status_min_max_compare,
CASE WHEN MIN(suppress_ind)  == MAX( suppress_ind) THEN MAX(suppress_ind) WHEN (MIN(suppress_ind) IS NULL OR MIN(suppress_ind) == '' OR MIN(suppress_ind) LIKE ' %' OR MIN(suppress_ind) == 0) AND (MAX(suppress_ind) IS NULL OR MAX(suppress_ind) == '' OR MAX(suppress_ind) LIKE ' %' OR MAX(suppress_ind) == 0) THEN MAX(suppress_ind)  ELSE 'GOOD' END as suppress_ind_min_max_compare,
CASE WHEN MIN(tavgord1)  == MAX( tavgord1) THEN MAX(tavgord1) WHEN (MIN(tavgord1) IS NULL OR MIN(tavgord1) == '' OR MIN(tavgord1) LIKE ' %' OR MIN(tavgord1) == 0) AND (MAX(tavgord1) IS NULL OR MAX(tavgord1) == '' OR MAX(tavgord1) LIKE ' %' OR MAX(tavgord1) == 0) THEN MAX(tavgord1)  ELSE 'GOOD' END as tavgord1_min_max_compare,
CASE WHEN MIN(tlpchmos)  == MAX( tlpchmos) THEN MAX(tlpchmos) WHEN (MIN(tlpchmos) IS NULL OR MIN(tlpchmos) == '' OR MIN(tlpchmos) LIKE ' %' OR MIN(tlpchmos) == 0) AND (MAX(tlpchmos) IS NULL OR MAX(tlpchmos) == '' OR MAX(tlpchmos) LIKE ' %' OR MAX(tlpchmos) == 0) THEN MAX(tlpchmos)  ELSE 'GOOD' END as tlpchmos_min_max_compare,
CASE WHEN MIN(tocumord)  == MAX( tocumord) THEN MAX(tocumord) WHEN (MIN(tocumord) IS NULL OR MIN(tocumord) == '' OR MIN(tocumord) LIKE ' %' OR MIN(tocumord) == 0) AND (MAX(tocumord) IS NULL OR MAX(tocumord) == '' OR MAX(tocumord) LIKE ' %' OR MAX(tocumord) == 0) THEN MAX(tocumord)  ELSE 'GOOD' END as tocumord_min_max_compare,
CASE WHEN MIN(toopen)  == MAX( toopen) THEN MAX(toopen) WHEN (MIN(toopen) IS NULL OR MIN(toopen) == '' OR MIN(toopen) LIKE ' %' OR MIN(toopen) == 0) AND (MAX(toopen) IS NULL OR MAX(toopen) == '' OR MAX(toopen) LIKE ' %' OR MAX(toopen) == 0) THEN MAX(toopen)  ELSE 'GOOD' END as toopen_min_max_compare,
CASE WHEN MIN(topchmos)  == MAX( topchmos) THEN MAX(topchmos) WHEN (MIN(topchmos) IS NULL OR MIN(topchmos) == '' OR MIN(topchmos) LIKE ' %' OR MIN(topchmos) == 0) AND (MAX(topchmos) IS NULL OR MAX(topchmos) == '' OR MAX(topchmos) LIKE ' %' OR MAX(topchmos) == 0) THEN MAX(topchmos)  ELSE 'GOOD' END as topchmos_min_max_compare,
CASE WHEN MIN(totdys)  == MAX( totdys) THEN MAX(totdys) WHEN (MIN(totdys) IS NULL OR MIN(totdys) == '' OR MIN(totdys) LIKE ' %' OR MIN(totdys) == 0) AND (MAX(totdys) IS NULL OR MAX(totdys) == '' OR MAX(totdys) LIKE ' %' OR MAX(totdys) == 0) THEN MAX(totdys)  ELSE 'GOOD' END as totdys_min_max_compare,
CASE WHEN MIN(totopen)  == MAX( totopen) THEN MAX(totopen) WHEN (MIN(totopen) IS NULL OR MIN(totopen) == '' OR MIN(totopen) LIKE ' %' OR MIN(totopen) == 0) AND (MAX(totopen) IS NULL OR MAX(totopen) == '' OR MAX(totopen) LIKE ' %' OR MAX(totopen) == 0) THEN MAX(totopen)  ELSE 'GOOD' END as totopen_min_max_compare,
CASE WHEN MIN(tprd1)  == MAX( tprd1) THEN MAX(tprd1) WHEN (MIN(tprd1) IS NULL OR MIN(tprd1) == '' OR MIN(tprd1) LIKE ' %' OR MIN(tprd1) == 0) AND (MAX(tprd1) IS NULL OR MAX(tprd1) == '' OR MAX(tprd1) LIKE ' %' OR MAX(tprd1) == 0) THEN MAX(tprd1)  ELSE 'GOOD' END as tprd1_min_max_compare,
CASE WHEN MIN(tprfudys)  == MAX( tprfudys) THEN MAX(tprfudys) WHEN (MIN(tprfudys) IS NULL OR MIN(tprfudys) == '' OR MIN(tprfudys) LIKE ' %' OR MIN(tprfudys) == 0) AND (MAX(tprfudys) IS NULL OR MAX(tprfudys) == '' OR MAX(tprfudys) LIKE ' %' OR MAX(tprfudys) == 0) THEN MAX(tprfudys)  ELSE 'GOOD' END as tprfudys_min_max_compare,
CASE WHEN MIN(vars601)  == MAX( vars601) THEN MAX(vars601) WHEN (MIN(vars601) IS NULL OR MIN(vars601) == '' OR MIN(vars601) LIKE ' %' OR MIN(vars601) == 0) AND (MAX(vars601) IS NULL OR MAX(vars601) == '' OR MAX(vars601) LIKE ' %' OR MAX(vars601) == 0) THEN MAX(vars601)  ELSE 'GOOD' END as vars601_min_max_compare,
CASE WHEN MIN(vclratio)  == MAX( vclratio) THEN MAX(vclratio) WHEN (MIN(vclratio) IS NULL OR MIN(vclratio) == '' OR MIN(vclratio) LIKE ' %' OR MIN(vclratio) == 0) AND (MAX(vclratio) IS NULL OR MAX(vclratio) == '' OR MAX(vclratio) LIKE ' %' OR MAX(vclratio) == 0) THEN MAX(vclratio)  ELSE 'GOOD' END as vclratio_min_max_compare,
CASE WHEN MIN(xmagdta)  == MAX( xmagdta) THEN MAX(xmagdta) WHEN (MIN(xmagdta) IS NULL OR MIN(xmagdta) == '' OR MIN(xmagdta) LIKE ' %' OR MIN(xmagdta) == 0) AND (MAX(xmagdta) IS NULL OR MAX(xmagdta) == '' OR MAX(xmagdta) LIKE ' %' OR MAX(xmagdta) == 0) THEN MAX(xmagdta)  ELSE 'GOOD' END as xmagdta_min_max_compare,
CASE WHEN MIN(xopdays1)  == MAX( xopdays1) THEN MAX(xopdays1) WHEN (MIN(xopdays1) IS NULL OR MIN(xopdays1) == '' OR MIN(xopdays1) LIKE ' %' OR MIN(xopdays1) == 0) AND (MAX(xopdays1) IS NULL OR MAX(xopdays1) == '' OR MAX(xopdays1) LIKE ' %' OR MAX(xopdays1) == 0) THEN MAX(xopdays1)  ELSE 'GOOD' END as xopdays1_min_max_compare,
CASE WHEN MIN(xopenps2)  == MAX( xopenps2) THEN MAX(xopenps2) WHEN (MIN(xopenps2) IS NULL OR MIN(xopenps2) == '' OR MIN(xopenps2) LIKE ' %' OR MIN(xopenps2) == 0) AND (MAX(xopenps2) IS NULL OR MAX(xopenps2) == '' OR MAX(xopenps2) LIKE ' %' OR MAX(xopenps2) == 0) THEN MAX(xopenps2)  ELSE 'GOOD' END as xopenps2_min_max_compare,
CASE WHEN MIN(xopords)  == MAX( xopords) THEN MAX(xopords) WHEN (MIN(xopords) IS NULL OR MIN(xopords) == '' OR MIN(xopords) LIKE ' %' OR MIN(xopords) == 0) AND (MAX(xopords) IS NULL OR MAX(xopords) == '' OR MAX(xopords) LIKE ' %' OR MAX(xopords) == 0) THEN MAX(xopords)  ELSE 'GOOD' END as xopords_min_max_compare,
CASE WHEN MIN(xpaiddt1)  == MAX( xpaiddt1) THEN MAX(xpaiddt1) WHEN (MIN(xpaiddt1) IS NULL OR MIN(xpaiddt1) == '' OR MIN(xpaiddt1) LIKE ' %' OR MIN(xpaiddt1) == 0) AND (MAX(xpaiddt1) IS NULL OR MAX(xpaiddt1) == '' OR MAX(xpaiddt1) LIKE ' %' OR MAX(xpaiddt1) == 0) THEN MAX(xpaiddt1)  ELSE 'GOOD' END as xpaiddt1_min_max_compare,
CASE WHEN MIN(xpddays1)  == MAX( xpddays1) THEN MAX(xpddays1) WHEN (MIN(xpddays1) IS NULL OR MIN(xpddays1) == '' OR MIN(xpddays1) LIKE ' %' OR MIN(xpddays1) == 0) AND (MAX(xpddays1) IS NULL OR MAX(xpddays1) == '' OR MAX(xpddays1) LIKE ' %' OR MAX(xpddays1) == 0) THEN MAX(xpddays1)  ELSE 'GOOD' END as xpddays1_min_max_compare,
CASE WHEN MIN(xplcdys1)  == MAX( xplcdys1) THEN MAX(xplcdys1) WHEN (MIN(xplcdys1) IS NULL OR MIN(xplcdys1) == '' OR MIN(xplcdys1) LIKE ' %' OR MIN(xplcdys1) == 0) AND (MAX(xplcdys1) IS NULL OR MAX(xplcdys1) == '' OR MAX(xplcdys1) LIKE ' %' OR MAX(xplcdys1) == 0) THEN MAX(xplcdys1)  ELSE 'GOOD' END as xplcdys1_min_max_compare,
CASE WHEN MIN(npnonord)  == MAX( npnonord) THEN MAX(npnonord) WHEN (MIN(npnonord) IS NULL OR MIN(npnonord) == '' OR MIN(npnonord) LIKE ' %' OR MIN(npnonord) == 0) AND (MAX(npnonord) IS NULL OR MAX(npnonord) == '' OR MAX(npnonord) LIKE ' %' OR MAX(npnonord) == 0) THEN MAX(npnonord)  ELSE 'GOOD' END as npnonord_min_max_compare,
CASE WHEN MIN(eff_ctr)  == MAX( eff_ctr) THEN MAX(eff_ctr) WHEN (MIN(eff_ctr) IS NULL OR MIN(eff_ctr) == '' OR MIN(eff_ctr) LIKE ' %' OR MIN(eff_ctr) == 0) AND (MAX(eff_ctr) IS NULL OR MAX(eff_ctr) == '' OR MAX(eff_ctr) LIKE ' %' OR MAX(eff_ctr) == 0) THEN MAX(eff_ctr)  ELSE 'GOOD' END as eff_ctr_min_max_compare,
CASE WHEN MIN(conv_mer_effort_ct)  == MAX( conv_mer_effort_ct) THEN MAX(conv_mer_effort_ct) WHEN (MIN(conv_mer_effort_ct) IS NULL OR MIN(conv_mer_effort_ct) == '' OR MIN(conv_mer_effort_ct) LIKE ' %' OR MIN(conv_mer_effort_ct) == 0) AND (MAX(conv_mer_effort_ct) IS NULL OR MAX(conv_mer_effort_ct) == '' OR MAX(conv_mer_effort_ct) LIKE ' %' OR MAX(conv_mer_effort_ct) == 0) THEN MAX(conv_mer_effort_ct)  ELSE 'GOOD' END as conv_mer_effort_ct_min_max_compare
from uat_im_calc_engine.agg_oflnsel_hybridvariables;



select variable_derived_dt, geo_loc, dash_cust_ind, count(*) 
from uat_im_calc_engine.agg_oflnsel_hybridvariables
group by variable_derived_dt, geo_loc, dash_cust_ind
order by variable_derived_dt, geo_loc, dash_cust_ind ;


=====================================================================================================================================================================================================================================

